if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "bthrow";
    timer = 0;
    time = 33;
    sprite_index = bthrow_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 50;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 6: image_index = 1; break;
	case 11: image_index = 2; break;
	case 16: image_index = 3; 		duster = instance_create(x+12*(1-facing*2),y,obj_dust_effect_bold);
		duster.image_xscale *= 0.6
		duster.image_speed=0.45
		duster.image_yscale *= 0.6
		duster.facing = 1-facing;break;
	case 20: image_index = 4; break;
	case 22: image_index = 5; break;
	case 24: image_index = 6; break;
	case 26: image_index = 7; break;
	case 28: image_index = 8; break;
	case 30: image_index = 9; break;
      }
	if ( timer <= 3 )
	{
	target.x = x + 16 * size * (1-facing*2);
	target.y = y;
	}
    if ( timer >= 4 && timer <= 6 )
      {
	target.x = x + size * (1-facing*2);
	target.y = y - 3*size;
      }
    if ( timer >= 7 && timer <= 9 )
      {
	target.x = x - size * (4-facing*8);
	target.y = y - 3*size;
      }
    if ( timer >= 10 && timer <= 12 )
      {
	target.x = x - size * (8-facing*16);
	target.y = y - 3*size;
      }
    if ( timer >= 13 && timer <= 17 )
      {
	target.x = x - size * (16-facing*22);
	target.y = y - 3*size;
      }
    if ( timer = 16 )
      {
	play_attack_voice();
	sound_play(attack_sound2);
	create_hitbox(3,32+116*facing,1,0.5,8,4,kick4,obj_spark_hit4,0.5,0.7,-14,15,self.id,1,5);
	hitbox.shake_type = 1;
	hitbox.shake_ampl = 0;
	instance_create(x+size*(20-facing*40),y-20*size,obj_spark_effect);
      }
    if ( timer = 18 )
      {
	create_throw_box(6,134-facing*88,6,4.345,1,1,-1,obj_spark_effect,0.4,0.4,-14,16,self.id,1);
	hitbox.shake_ampl = 0.2;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  facing = 1-facing;
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }