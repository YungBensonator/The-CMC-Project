if ( state_type = "stand" || state_type = "run" || state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "sideb";
    timer = 0;
    time = 33;
    sprite_index = sideb_sprite;
    image_speed = 0;
    image_index = 0;
has_hit = 0
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 3: image_index = 3; break;
	case 4: image_index = 4; break;
	case 6: image_index = 5; break;
	case 8: image_index = 6; break;
	case 9: image_index = 7; break;
	//
	case 11: image_index = 8; break;
	case 13: image_index = 9; break;
	case 15: image_index = 10; break;
	case 17: image_index = 11; break;
	case 18: image_index = 12; break;
	case 19: image_index = 13; break;
	case 20: image_index = 14; break;
	case 22: image_index = 15; break;
	case 23: image_index = 16; break;
	case 24: image_index = 17; break;
	case 25: image_index = 18; break;
	case 27: image_index = 19; break;
	case 30: image_index = 20; break;
	case 33: image_index = 21; break;
      }
if timer <= 5 && ((moveleft && !facing) || (moveright && facing)) {
    		facing = 1-facing;
		hspeed *= -0.85;
 		 }
    if ( air = 0 )
	hspeed = 0;
    if ( timer = 5 )
      {
		duster = instance_create(x+2*(1-facing*2),y,obj_dust_effect_bold);
		duster.image_xscale *= 0.9
		duster.image_speed=0.45
		duster.image_yscale *= 0.6
		duster.facing = facing
		duster.owner = self.id
	//instance_create(x,y-10*size,obj_spark_effect);
      }
	if timer > 15 && timer < 30
	{
	if ( collision_rectangle(x,y-33*size,x+size*93,y-8*size,obj_edge_left,1,1) && !facing )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 0;
	    edge = instance_nearest(x,y,obj_edge_left);
	    x = edge.x-size*7;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    with hitbox3 instance_destroy();
	    exit;
	  }
	if ( collision_rectangle(x-size*93,y-33*size,x,y-8*size,obj_edge_right,1,1) && facing )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    facing = 1;
	    edge = instance_nearest(x,y,obj_edge_right);
	    x = edge.x+size*7;
	    y = edge.y + sprite_get_height(sprite_index)*image_yscale-13;
	    with hitbox instance_destroy();
	    with hitbox2 instance_destroy();
	    with hitbox3 instance_destroy();
	    exit;
	  }
	}


    if ( timer = 14 )
      {
	sound_play(sideb_sound);
	create_hitbox(2,angle_correct(13),7.95,0,5,4,shock2,obj_spark_shock,0.75,0.65,20,16,self.id,10,3);
	create_hitbox2(2,angle_correct(13),4.35,0,5,4,shock2,obj_spark_shock,0.65,0.55,20,26,self.id,2,3);
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
	hitbox.di = -1
	hitbox.weight_kb = 1;
      }
    if ( timer = 15 )
      {
	create_hitbox(2,angle_correct(13),7.95,0,5,4,shock2,obj_spark_shock,0.75,0.65,41,16,self.id,1,3);
	create_hitbox2(2,angle_correct(13),7.95,0,5,4,shock2,obj_spark_shock,0.65,0.55,36,26,self.id,1,3);
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
	hitbox.di = -1
	hitbox.weight_kb = 1;
      }
    if ( timer = 17 )
      {
	create_hitbox(2,angle_correct(13),7.95,0,5,4,shock2,obj_spark_shock,0.85,0.85,46,16,self.id,1,3);
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
	hitbox.di = -1
	hitbox.weight_kb = 1;
      }
    if ( timer = 19 )
      {
	create_hitbox(2,angle_correct(13),7.95,0,5,4,shock2,obj_spark_shock,0.85,0.85,66,16,self.id,2,3);
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
	hitbox.di = -1
	hitbox.weight_kb = 1;
      }

if ( timer = 20 and moveup)
{
	create_hitbox(12,angle_correct(114),6,2.65,8,8,fire1,obj_spark_fire1,1,1,69,16,self.id,3,3);
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;
}

else
{
if timer =20{
	create_hitbox(12,angle_correct(55),6.125,5.65,8,8,fire1,obj_spark_fire1,1,1,69,16,self.id,3,3);
	hitbox.shake_kb = 0.5;
	hitbox.shake_ampl = 1.5;

}
}

















if ( has_hit = 1 and timer < 19 )
{
target.direction = point_direction(target.x,target.y, x + place_x(122) , y + place_y(37) )
}

	
	
  }
  
  
  


if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
	if ( air = 0 )
	state_type = "stand";
    else
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }