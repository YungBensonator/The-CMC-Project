fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    attacking = 0;
    special = 0;
    timer = 0;
    attack_type = "upb"
    if air = 0 {
        state_type = "air_attack";
        hspeed = 0;
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing; }
    else {
        state_type = "air_attack";
    }
    image_speed = 0.35;
    sprite_index = upb_sprite;
    image_index=0.1;
    time = 50;
    timer_speed=1;
	has_hit = 0
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
}

if ( timer < time )
  {
    switch ( timer )
      {
	case 6: image_index = 1; break;
	case 8: image_index = 2; break;
	case 10: image_index = 3; break;
	case 17: image_index = 4; break;
	case 19: image_index = 5; break;
	case 21: image_index = 6; break;
	case 23: image_index = 7; break;
	case 25: image_index = 8; break;
	case 27: image_index = 9; break;
	case 30: image_index = 10; break;
	case 34: image_index = 11; break;
	case 38: image_index = 12; break;
	case 42: image_index = 13; break;
	case 45: image_index = 14; break;
	case 48: image_index = 14; break;
      }
	if timer > 40
	force_edge_grab = 1
            if timer = 4 {
                sound_play(upb_sound);
                create_hitbox(5,84+facing*12,8,0,5,8,kick2,obj_spark_hit1,0.8,0.8,10,13,self.id,1,4);
                hitbox.di = -1
                hspeed = (1.3 - facing*3)*size;
                vspeed = -3.5*size;
                after_image(5,c_blue,0.85)
                instance_create(x+10*(1-facing*2)*size,y-18*size,obj_spark_effect)
                flashing = true
		hitbox.execute_on_hit = "attacker.has_hit = 1"
                alarm[7] = 20
            }
            if timer = 8 || timer = 11 || timer = 14 || timer = 17 || timer = 21 {
                create_hitbox(1.3,370,5.5,0,5,1,kick1,obj_spark_hit1,1,1.2,13,21,self.id,1,3);
				hitbox.di = -1
                hspeed = (2 - facing*4)*size;
                vspeed -= 5*grav*size*GRAV_MUL;
                after_image(5,c_aqua,0.85)
		hitbox.weight_kb = 1;
		}
	

		
if ( has_hit = 1 and timer < 25 )
{
target.direction = point_direction(target.x,target.y, x + place_x(59) , y + place_y(58) )
}

            if timer = 27 {
                 intangible = 0
                 sound_play(upb_kick_sound);
                 create_hitbox3(7,angle_correct(45),5.5,7.5,5,12,kick3,obj_spark_hit2,1.4,0.9,21,21,self.id,3,3);;
                 air = max_jumps;
                 after_image(5,c_aqua,0.85)
                }
            if timer = 19 || timer = 20 || timer = 21 {
                vspeed = -3.5*size
            }
            if timer >= 19 && timer <= 25
                hspeed = (1-facing*2)*size
        }

        if (timer >= 26){
if (attack_success || target.object_index == obj_enemy) && ( dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1 && place_meeting ( target.x , target.y , attack_box )){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 130) || (target.weight > .3 && target.percent > 145)){
killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth - 5;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	      
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        dontrepeat = 0;
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
