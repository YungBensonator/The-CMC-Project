if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "dair";
  image_speed = 0;
  image_index = 0;
  sprite_index = dair_sprite;
  timer = 0;
  time = 30;
  timer_speed = 1;
  }

switch ( timer )
  {
  case 1: image_index = 1; break;
  case 2: image_index = 2; break;
  case 7: image_index = 3; break;
  case 8: image_index = 4; break;
  case 10: image_index = 5; break;
  case 12: image_index = 6; break;
  case 14: image_index = 7; break;
  case 16: image_index = 8; break;
  }
  
if ( timer = 8 )
{
if ( random ( 4 ) < 1 )
{
play_attack_voice();
}
sound_play(attacksnd2);
create_hitbox( 1 , 30+facing*120 , 3 , 0 , 1 , 1 , kick1 , obj_spark_hit1 , 0.68 , 0.79 , 11.93 , 7.43 , self.id , 1 , 1 );
hitbox.image_angle = ( 1 - facing * 2 ) * 56.63;
hitbox.di = -1;
hitbox.hit_stun = 1;
}

if ( timer = 10 )
{
smasheffect = instance_create( x,y,obj_spark );
smasheffect.sprite_index = smasheffect_sprite;
smasheffect.image_xscale = 0.45 * (1-facing*2) * size;
smasheffect.image_yscale = 0.45 * size;
smasheffect.image_speed = 0.7;
smasheffect.image_angle = 315 * (1-facing*2);
smasheffect.x = x + 16 * (1-facing*2) * size;
smasheffect.y = y - 4 * size;
smasheffect.snap = self.id;

sound_play( usmash_sound );
create_projectile ( 5 , 30+facing*120 , 3.5 , 7 , 20 , 3 , magic2 , obj_spark_shock , 0.86 , 0.53 , 16 , 4 , self.id , 15 , char_custom11 );
proj.speed = 4 * (1-facing*2) * size;
proj.image_angle = 315 * (1-facing*2);
proj.direction = 315 * (1-facing*2);
}

if ( air = 0 )
{
state_type = "land";
attack_type = "none";
timer = 0;
time = 16;
sprite_index = land_sprite;
image_index = 0;
}

if ( timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    attack_type = "none";
	state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 12;
    timer = 0;
    time =-1;
  }