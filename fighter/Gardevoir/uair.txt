if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  image_index = 10;
  sprite_index = uair_sprite;
  timer = 0;
  time = 38;
  timer_speed = 1;
  }

tempy = y - 50 * size;

switch ( timer )
  {
  case 8: image_index = 0; break;
  case 11: image_index = 1; break;
  case 13: image_index = 2; break;
  case 15: image_index = 3; break;
  case 17: image_index = 4; break;
  case 19: image_index = 5; break;
  case 21: image_index = 6; break;
  case 23: image_index = 7; break;
  case 25: image_index = 8; break;
  case 27: image_index = 9; break;
  case 29: image_index = 10; break;
  }

if ( timer = 8 )
  {
	if ( random ( 2 ) < 1 )
	{
	play_attack_voice();
	}
	sound_play (attacksnd2);
	create_hitbox(2,90,6.5,0,4,1,slash2,obj_spark_slash1,0.93 , 0.77 , 12.35 , 12.60,self.id,17,3);
	hitbox.di = -1;
	create_hitbox2(2,90,6.5,0,4,1,slash2,obj_spark_slash1,0.95 , 0.77 , -9.48 , 12.60,self.id,17,3);
	hitbox2.di = -1;
  }
if ( timer = 9 )
	{
	sound_play(magicblast_sound);
	tempx = x + 20 * (1-facing*2) * size;
	create_hitbox3(8,65+facing*60,6,6.9,15,1,magic2,obj_spark_shock,0.65,0.65,20,50,self.id,20,5);
	hitbox3.no_clash = 1;
	}
if ( timer = 10 )
{
	tempx = x + 10 * (1-facing*2) * size;
	hitbox3.hitbox_x = 10 * (1-facing*2) * size;
}
if ( timer = 11 )
{
	tempx = x;
	hitbox3.hitbox_x = 0;
}
if ( timer = 12 )
{
	tempx = x - 5 * (1-facing*2) * size;
	hitbox3.hitbox_x = -5 * (1-facing*2) * size;
}
if ( timer = 13 )
{
	tempx = x - 10 * (1-facing*2) * size;
	hitbox3.hitbox_x = -10 * (1-facing*2) * size;
}
if ( timer = 14 )
{
	tempx = x - 15 * (1-facing*2) * size;
	hitbox3.hitbox_x = -15 * (1-facing*2) * size;
}
if ( timer = 15 )
{
	tempx = x - 20 * (1-facing*2) * size;
	hitbox3.hitbox_x = -20 * (1-facing*2) * size;
}
if ( timer = 16 )
{
	tempx = x - 15 * (1-facing*2) * size;
	hitbox3.hitbox_x = -15 * (1-facing*2) * size;
}
if ( timer = 17 )
{
	tempx = x - 10 * (1-facing*2) * size;
	hitbox3.hitbox_x = -10 * (1-facing*2) * size;
}
if ( timer = 18 )
{
	tempx = x - 5 * (1-facing*2) * size;
	hitbox3.hitbox_x = -5 * (1-facing*2) * size;
}
if ( timer = 19 )
{
	tempx = x;
	hitbox3.hitbox_x = 0;
}
if ( timer = 20 )
{
	tempx = x + 5 * (1-facing*2) * size;
	hitbox3.hitbox_x = 5 * (1-facing*2) * size;
}
if ( timer = 21 )
{
	hitbox3.hitbox_x = 10 * (1-facing*2) * size;
}
if ( timer >= 21 && timer <= 34 )
{
	tempx = x + 10 * (1-facing*2) * size;
}


if ( timer = 9 )
{
  magicblast = instance_create( tempx , tempy , obj_spark );
  magicblast.sprite_index = magicblast_sprite;
  magicblast.image_xscale = 0.25 * size;
  magicblast.image_yscale = 0.25 * size;
  magicblast.image_speed = 0;
  magicblast.image_alpha = 0.85;
  magicblast.alarm = 100;
}
if ( timer >= 9 && timer <= 34 )
{
  spark = instance_create( tempx , tempy , obj_spark );
  spark.sprite_index = magicspark_sprite;
  spark.image_xscale = 0.15 * (1-facing*2) * size;
  spark.image_yscale = 0.15 * size;
  spark.image_speed = 0;
  spark.image_angle = random(360);
  spark.direction = random(360);
  spark.speed = 1 * (1-facing*2) * size;
  spark.alarm[0] = 15;
  magicblast.x = tempx;
  magicblast.y = tempy;
}
if ( timer >= 29 && timer <= 34 && magicblast.image_alpha > 0 )
{
  magicblast.image_alpha -= 0.2;
}
if ( timer = 35 )
{
with ( magicblast )
	{
	instance_destroy();
	}
}

if ( ( hitbox.hit = 1 || hitbox2.hit = 1 ) && hitbox3.hit = 0 )
{
	hitbox.hit = 2;
	hitbox2.hit = 2;
	hitbox3.hit = 0;
}

if ( hitbox3.hit = 1 )
{
	hitbox.hit = 2;
	hitbox2.hit = 2;
}


if ( air = 0 )
{
state_type = "land";
attack_type = "none";
timer = 0;
time = 14;
sprite_index = land_sprite;
image_index = 0;
}


if ( timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    attack_type = "none";
	state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 13;
    timer = 0;
    time =-1;
  }