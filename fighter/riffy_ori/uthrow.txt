if time = -1 {
upbcanceltemp=0
hspeed = 0;
state_type = "air_attack";
attack_type = "uthrow";
image_speed = 0;
if rivalsori
	sprite_index = uair_sprite;
if smashori
	sprite_index=uair_spirit_edge_sprite
image_index=0;
timer = 0;
if rivalsori
	time = 25;
if smashori
	time=48
timer_speed=1;
target.timer_speed = 0;
if rivalsori
	target.alarm[0] = 30
if smashori
	target.alarm[0] = 60
}
if rivalsori
{
	if timer < time 
	{
		switch ( timer )
		{
			case 3: image_index = 1; break; //3
			case 6: image_index = 2; break; //6
			case 9: image_index = 3; break; //9
			case 11: image_index = 4; break; //11
			case 13: image_index = 5; break; // 13
			case 16: image_index = 6; break; //16
			case 19: image_index = 7; break; //19
			case 21: image_index=8;break; //21
		}
		if timer = 5 
			{sound_play(uair_sound);}
		if timer = 6
		{
			create_throw_box(9,45+90*facing,7.5,3.4,11,5,slap_m,obj_spark_hit2,0.61 , 0.57 , 8.80 , 9.60 ,self.id,2);
			hitbox.hit_stun = 9
		}
		
	}
}
if smashori
{
	switch(timer)
	{
		case 5: image_index=1; break;
		case 8: image_index=2; break;
		case 10: image_index=3; break;
		case 13: image_index=4; break;
		case 15: image_index=5; break;
		case 18: image_index=6; break;
		case 20: image_index=7; break;
		case 23: image_index=8; break;
		case 26: sprite_index =light_burst_prepare_air_sprite; image_index=0; break
		case 29: image_index=1; break;
		case 32: image_index=2; break;
		case 35: image_index=3; break;
		case 38: image_index=4; break
		case 41: image_index=5; break
		case 44: image_index=6; break;
	}
	
	
	if timer=13
	{
		create_hitbox(7 , 72+36*facing , 7 , 0 , 14 , 4 , slash3 , obj_spark_hit1 , 1.10 , 0.60 , 31.20 , 20 , self.id , 1, 3)
		hitbox.hit_stun=20
		hitbox.weight_kb=1
		hitbox.di=0
	}
	if timer=15
		vspeed=-4*size
	
	if timer=35
		{
			sound_play(choose(lburst_throw,lburst_throw1,lburst_throw2))
			libu= create_projectile(4,30+facing*120,5,5,7,4,libu_explode,obj_spark_fire1,0.65,0.65,5,15,self.id,180,char_custom5);
			libu.sprite_index = light_burst_proj_sprite
			libu.use_palette = number
			libu.image_xscale=(0.8-facing*1.6)*size
			libu.image_yscale=0.8*size
			libu.image_speed =0.2
			libu.speed=3*size
			libu.direction = 25+facing*130
		}

}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
        timer = 0;
    time =-1;
}
        