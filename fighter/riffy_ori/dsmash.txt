if state_type = "stand" || state_type = "run" || state_type = "crouch" {
hspeed = 0;
if smashori
state_type = "air_attack";
if rivalsori
state_type = "attack";
attack_type = "dsmash";
timer = 0;
time=52
if smashori
{
	temp_no_hurtbox=1
	time=61
	jumpcanceltemp=0
}
keepout=0
nohitbox=0
image_speed = 0;
image_index = 0;
charge_frame = 4;
upbcanceltemp=0
}
if rivalsori
{
	if timer =0
	{
		if sein_available=0
			sprite_index=dsmash_sprite
		else 
			sprite_index=sein_dsmash_sprite
	}
	if sprite_index= dsmash_sprite
	{
		switch ( timer )
		{
			case 2: image_index = 1; break;
			case 4: image_index = 2; break;
			case 6: image_index = 3; break;
			case 8: image_index = 4; break;
			case 10: image_index = 5; break;
			case 12: image_index = 6; break;
			case 14: image_index = 7; break;
			case 16: image_index = 8; break;
			case 18: image_index = 9; break;
			case 20: image_index = 10; break;
			case 22: image_index = 11; break;
			case 24: image_index = 12; break;
			case 26: image_index = 13; break;
			case 28: image_index = 14; break;
			case 30: image_index = 15; break;
			case 32: image_index = 16; break;
			case 34: image_index = 17; break;
			case 36: image_index = 18; break;
			case 38: image_index = 19; break;
			case 40: image_index = 20; break;
			case 42: image_index = 21; break;
		}
		if timer < time 
		{
			if timer = 5 || timer = 15 || timer = 25
				sound_play(dsmash_sound)
			
			if timer>5 && timer<12
				hspeed= (3 *(1-facing*2))*size
			
			if timer>15 && timer<22
				hspeed= (-6*(1-facing*2))*size
			
			if timer>25 && timer<32
				hspeed= (6*(1-facing*2))*size
		
			if timer>35 && timer<42
				hspeed= (-3 *(1-facing*2))*size

			if (timer>11 && timer<16) || (timer>21 && timer<26) || (timer>31 && timer<36) || (timer>42)
				hspeed=0
		
			if timer=8 || timer = 18 || timer = 28
				{
					create_hitbox(10,50+80*facing,5.2,5.7,5,6,seinless_l,obj_spark_hit3,1.21 , 0.77 , 6.65 , 10.45 ,self.id,5,2);
					hitbox.charge_dmg = 0.5
					hitbox.charge_bkb = 0.2
					hitbox.weight_kb = 0
				}
			if timer = 18
				hitbox.dir = 130-80*facing
		}
	}

	if sprite_index=sein_dsmash_sprite
	{	
		sein.visible=0
		if timer>=0 && timer<4
		{
			if!instance_exists(sein_aura)
			{
				sein_aura = instance_create(x,y,obj_spark)
				sein_aura.sprite_index=sein_smash_aura
				sein_aura.image_speed=0.15
				sein_aura.loop=3
				sein_aura.snap=self.id
				sein_aure.image_xscale=0.8*size
				sein_aure.image_yscale=0.8*size
				sein_aura.number=number
				if sein_aura.image_index=3
					sein_aura.image_index=0
			}
		}
		if timer>5
		{
			sound_stop(sein_smash_charge_sound)
			with(sein_aura)
				{instance_destroy()}
		}
		switch(timer)
		{
			case 2: image_index = 1;sien.image_index=1; break;
			case 4: image_index = 2;sien.image_index=2; break;
			case 6: image_index = 3;sien.image_index=3; break;
			case 8: image_index = 4;sien.image_index=4; break;
			case 14: image_index = 5;sien.image_index=5; break;
			case 16: image_index = 6;sien.image_index=6; break;
			case 18: image_index = 7;sien.image_index=7; break;
			case 20: image_index = 8;sien.image_index=8; break;
			case 26: image_index = 9;sien.image_index=9; break;
			case 28: image_index = 10;sien.image_index=10; break;
			case 32: image_index = 11;sien.image_index=11; break;
			case 36: image_index = 12;sien.image_index=12; break;
			case 38: image_index = 13;sien.image_index=13; break;
			case 40: image_index = 14;sien.image_index=14; break;
			case 42: image_index = 15;sien.image_index=15; break;
		}
		if timer=0
		{
			sound_play(sein_smash_sound)
			sound_play(sein_smash_charge_sound)
			sien = instance_create(x,y,obj_spark)
			sien.sprite_index = orb_dsmash_sprite
			sien.snap=self.id
			sien.number=-number
			sien.image_speed=0
			sien.image_index=0
			sien.image_xscale = 1*size;
			if facing=1
				sien.image_xscale = -1*size;
			sien.image_yscale = 1*size
		}
		if timer = 5 || timer = 15 || timer = 25
			sound_play(dsmash_sein_sound)
		if timer> 5 && timer < 12
			hspeed= (3 *(1-facing*2))*size
		if timer >15 && timer < 22
			hspeed= (-6*(1-facing*2))*size
		if timer>25 && timer< 32
			hspeed= (6*(1-facing*2))*size
		if timer>35 && timer < 42
			hspeed= (-3 *(1-facing*2))*size

		if (timer>11 && timer<16) || (timer >21 && timer<26) || (timer>31 && timer<36) || (timer>42)
			hspeed=0
			
		if timer = 8 || timer = 18 
		{
			create_hitbox(4,170-160*facing,4,0,5,8,sein_l,obj_spark_hit3,1.21 , 0.77 , 6.65 , 10.45 ,self.id,4,2);
				hitbox.charge_dmg = 0.36
				hitbox.charge_kb = 0
				hitbox.weight_kb = 0
			create_hitbox2(4,10+160*facing,4.2,0,5,7,sein_l,obj_spark_hit3,1.82 , 0.64 , -30.20 , 10.45  ,self.id,4,-1);
				hitbox2.charge_dmg = 0.36
				hitbox2.charge_kb =0
				hitbox2.weight_kb = 0
		}
		if timer = 18 
		{
			hitbox.bkb=4*size
			hitbox.dir=angle_correct(10)
			hitbox.charge_dmg = 0.36
			hitbox.charge_kb = 0
			hitbox.weight_kb = 0
			hitbox.time=4
			
			create_hitbox2(4,170-160*facing,3.5,0,5,7,sein_l,obj_spark_hit3,1.97 , 0.64 , 27.20 , 10.45 ,self.id,4,-1);
		}

		if timer = 28
		{
			create_hitbox(5,51+78*facing,5.4,6.9,5,10,sein_l,obj_spark_hit3,1.4 , 0.77 , 4.65 , 10.45 ,self.id,4,2);
				hitbox.charge_dmg = 0.6
				hitbox.charge_kb = 0.25
			create_hitbox2(5,129-78*facing,5.4,6.9,5,10,sein_l,obj_spark_hit3,1.97 , 0.64 , -27.20 , 10.45  ,self.id,4,2);
				hitbox2.charge_dmg = 0.6
				hitbox2.charge_kb = 0.25
		}
	}
	if timer=time-2
		sein.visible=1
	if timer >=time-1 || state_type = "flinch" || state_type = "air_flinch"
	{
	  with (sien)
		{instance_destroy()}
	}
}

if smashori
{
	charge_frame=17
	switch(timer)
	{
		case 0: image_index=0; break;
		case 8: image_index=1;break;
	/*	case 7: blaze.image_index=1; break;
		case 12: blaze.image_index=2;break;
		case 17: blaze.image_index=3; break;
		case 22: blaze.image_index=4; break;
		case 27: blaze.image_index=5; break;
		case 32: blaze.image_index=6; break;
		case 37: blaze.image_index=7; break;
		case 42: blaze.image_index=8; break;
		case 47: blaze.image_index=9; break;
		case 52: blaze.image_index=10; break;
		case 57: blaze.image_index=11; break;
		case 62: blaze.image_index=12; break;
		case 67: blaze.image_index=13; break;
		case 72: blaze.image_index=14; break;
		case 77: blaze.image_index=15; break;
		case 82: blaze.image_index=16; break;
		case 87: blaze.image_index=17; break; 
	*/	
		case 43: image_index=2; break;
		case 45: image_index=3;  break;

		case 54: image_index=6; break;
		case 63: image_index=7; break;
		case 69: image_index=8; break;
	}
	if timer =0
	{
		sprite_index= abyss_b_sprite
		sound_play(nair2_start)
		time=74	

		image_speed=0
	}
	if air<1
		sprite_index= abyss_b_sprite
	else
		sprite_index= abyss_b_air_sprite
	if timer = 5
	{
		blaze = instance_create(x,y-15,obj_spark)
		blaze.sprite_index=blaze_sprite
		blaze.image_xscale=0.5*size
		blaze.image_yscale=0.5*size
		blaze.image_index=0
		blaze.image_alpha=0
		blaze.image_speed=0.2
		blaze.loop=-1
		blaze.depth = depth+1
	}
	if timer<16
		blaze.image_alpha+=.1
	if timer<43
	{
		blaze.x = x 
		blaze.y = y-15*size
	}
	hspeed=0
	if timer=43
	{
		state_type="air_attack"
		vspeed=-2*size
		sound_stop(nair2_start)
		sound_play(choose(nair2_release1,nair2_release2))
		blaze.image_yscale=(0.5*size)+(smash_charge/300)*size
		blaze.image_xscale=(0.5*size)+(smash_charge/300)*size
		blaze.image_index=18
		blaze.image_speed=0.75
		blaze.loop=0
		create_projectile(23+floor(smash_charge/9), 362, 7.8, 7.4, 14, 5, seinless_l, obj_spark_fire1, 4+smash_charge/45 , 4+smash_charge/45 , 0 , 15 , self.id, 3, 4);
	}
	

}

if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  sein.image_xscale = 0.8*size;
	sein.image_yscale = 0.8*size;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  interrupt = 0;
  }