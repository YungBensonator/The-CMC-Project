if(state_type = "crouch" || state_type = "stand")
{
	hspeed = 0;
	state_type = "attack";
	attack_type = "dsmash";
	image_speed = 0;
	sprite_index = dsmash_sprite;
	image_index = 0;
	timer = 0;
	time = 33;
	timer_speed = 1;
	charge_frame = 4;
}

if(timer < time)
{
	switch(timer)
	{
		case 2: image_index = 1; break;		//frame 3
		case 3: image_index = 2; break;		//frame 4
		case 5: image_index = 3; break;		//frame 6
		case 6: image_index = 4; break;		//frame 7
		case 7: image_index = 5; break;		//frame 8
		case 10: image_index = 6; break;	//frame 11
		case 13: image_index = 7; break;	//frame 14
		case 15: image_index = 8; break;	//frame 16
		case 18: image_index = 9; break;	//frame 19
		case 21: image_index = 10; break;	//frame 22
		case 24: image_index = 11; break;	//frame 25
		case 27: image_index = 12; break;	//frame 28
		case 30: image_index = 13; break;	//frame 31
	}
	if(timer == 7)	//frame 8
	{
		/* choose() probability table by HFF
         * 
         * Parameter    | # appearances | probability (%)
         * dsmash_voice2| 1             | 50.0
         * dsmash_voice | 1             | 50.0
         */
		sound_play(choose(dsmash_voice, dsmash_voice2));
		sound_play(attacksnd3);
		
		create_hitbox(
        /* Damage            */ 15,
        /* Direction         */ 35 + facing * 110,
        /* Base KB           */ 6.1,
        /* KB Growth         */ 6.6,
        /* Shield Damage     */ 18,
        /* Hitlag            */ 10,
        /* SFX               */ kick3,
        /* VFX               */ obj_spark_hit4,
        /* Width             */ 0.7,
        /* Height            */ 0.6,
        /* X                 */ 20,
        /* Y                 */ 9,
        /* Owner             */ self.id,
        /* Active Frames     */ 5,
        /* Priority          */ 2
        );
		hitbox.shake_type = 1;
		hitbox.charge_dmg = 0.75;
		
		duster = instance_create(x + 6 - facing * 12, y, obj_dust_effect);
		duster.facing = !facing;
		duster.image_alpha = 0.75;
	}
	
	if(timer == 15)	//frame 16
	{
		sound_play(attacksnd3);
		create_hitbox(
        /* Damage            */ 14,
        /* Direction         */ 145 - facing * 110,
        /* Base KB           */ 6,
        /* KB Growth         */ 6.4,
        /* Shield Damage     */ 18,
        /* Hitlag            */ 8,
        /* SFX               */ kick2,
        /* VFX               */ obj_spark_hit4,
        /* Width             */ 0.7,
        /* Height            */ 0.6,
        /* X                 */ -6,
        /* Y                 */ 9,
        /* Owner             */ self.id,
        /* Active Frames     */ 5,
        /* Priority          */ 2
        );
		hitbox.charge_dmg = 0.65;
		duster = instance_create(x - 6 + facing * 12, y, obj_dust_effect);
		duster.facing = facing;
		duster.image_alpha = 0.75;
	}
}

if (timer >= 7){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 135)){
     killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if(timer >= 32 && state_type != "flinch" && state_type != "air_flinch")
{
	dontrepeat = 0
	attack_type = "none";
	if(air)
	{
		state_type = "jump";
	}
	else
	{
		state_type = "stand";
	}
	timer = 0;
	time = -1;
}
//S/O to HFF