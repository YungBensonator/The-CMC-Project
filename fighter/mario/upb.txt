fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" && air < max_jumps {
    attacking = 0;
    special = 0;
    timer = 0;
    attack_type = "upb"
    hspeed = 0
    if air = 0 {
        state_type = "air_attack";
        hspeed = 0;
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing; }
    else {
        state_type = "air_attack";
        }
        image_speed = 0.25;
        sprite_index = upb_sprite;
        image_index= 0;
        time = 33;
        timer_speed=1;
        intangible = 1
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
}
        if timer < time {
	if timer > 25
	force_edge_grab = 1
            if timer = 5 {
                sound_play(up_b_sound);
                create_hitbox(4,75+facing*30,8.3,0,6,7,coin,obj_coin_spark,0.8,0.8,4,17,self.id,1,4);
                hitbox.di = 0.3
                hitbox.shake_ampl = 0
                hitbox.weight_kb = 1
                instance_create(x + (1-facing*2)*size*(7),y-size*11,obj_spark_effect)
                //hspeed = 4 - facing*8;
                //vspeed = -6;
            }
            if timer = 6
                intangible = 0
            if timer = 8 
		{
		image_index = 2;
		image_speed = 0;
                vspeed = -5.5*size
		}
            if timer = 8 || timer = 9 || timer = 10 || timer = 11 || timer = 12 {
                hspeed = (3 - facing*6)*size;
                vspeed -= 0.5*size*grav/0.25;
                create_hitbox(1,angle_correct(65),7.2,0,4,4,coin,obj_coin_spark,0.8,0.95,3,23,self.id,1,3);
                hitbox.di = -1
                hitbox.weight_kb = 1
            }
            if timer = 6 || timer = 7 {
                vspeed = size*(-11.25);
                hspeed = (4 - facing*8)*size
            }
            if timer = 13 {
                 create_hitbox(3,angle_correct(52),6.5,4,5,6,coin,obj_coin_spark,0.8,0.8,4,23,self.id,3,3);
                 hitbox.shake_ampl = 0.6
                 hitbox.hit_stun = 4
                 hspeed *= 0.8
                 }
            if ( timer == time - 14 )
		{
		image_index = 5;
		image_speed = 1/3;
            vspeed = -1.4
		}
            if timer < 14 && frac(timer/2) = 0
                after_image(4,c_white,0.5)
	if timer = 20 {	
    air = max_jumps
	moveleft = 0;
	moveright = 0;
	movejump = 0;
	}

        if (attack_success && timer < 13 && target.air > 0.5){
		            target.speed = speed - 0.8
		            target.direction = point_direction(target.x,target.y,x,y)
	}
        }  


            if (timer >= 17){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 95) || (target.weight > .22 && target.weight < .3 && target.percent > 105) || (target.weight > .3 && target.percent > 105)){
				killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    hspeed = 1 - facing*2;
	doublecheck = 1;
        attack_type = "none";
	  air = max_jumps
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
        
