if state_type = "stand" || state_type = "run" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        image_index=0;
        timer = 0;
        time = 44;
        timer_speed=1;
        charge_frame = 5;
}
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 6: image_index = 3; break;
  case 7: image_index = 4; break;
  case 8: image_index = 5; break;
  case 10: image_index = 6; break;
  case 13: image_index = 7; break;
  case 25: image_index = 8; break;
  case 31: image_index = 9; break;
  case 34: image_index = 10; break;
  case 37: image_index = 11; break;
  }
        if timer < time {
            state_type = "attack";
            if timer = 4 {
                sound_play(ssmash_voice);
            }
            if timer = 7
                instance_create(x+10-facing*20,y-20,obj_spark_effect)
            if timer = 13 {
		image_speed = 0;
                duster = instance_create(x-6+facing*12,y,obj_dust_effect)
                duster.facing = facing
                duster.image_alpha = 0.75
                sound_play(ssmash_sound);
                create_hitbox(15,25+facing*130,6.8,6,23,11,fire3,obj_spark_fire1,0.6,0.6,31,15,self.id,3,4);
                create_hitbox2(12,30+facing*120,6.75,5,17,9,punch2,obj_spark_hit4,0.7,0.6,15,15,self.id,9,2);
		var exploder;
                exploder = instance_create(x + 31*size*(1-facing*2),y - 14*size, obj_spark_explode2);
                exploder.image_xscale*=size;
                exploder.image_yscale*=size;
            }
        }  


            if (timer >= 13){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= 43 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
