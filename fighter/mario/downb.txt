fast_fall = 0;
fast_fall_temp = 0;
if state_type = "jump" || state_type = "run" || state_type = "stand" || state_type = "crouch" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "downb";
        image_speed = 0;
        sprite_index = downb_sprite;
        image_index = 0;
        timer = 0;
        time = 50;
        timer_speed=1;
        special = 0;
		create_hurtbox_precise(self.id, 55, downb_mask)
	temp = 0;
}
		switch ( timer )
		  {
		  case 1: image_index = 1; break;
		  case 2: image_index = 2; break;
		  case 3: image_index = 3; break;
		  case 4: image_index = 4; break;
		  case 5: image_index = 5; break;
		  case 6: image_index = 6; break;
		  case 7: image_index = 7; break;
		  case 8: image_index = 8; break;
		  case 9: image_index = 9; break;
		  case 10: image_index = 10; break;
		  case 11: image_index = 11; break;
		  case 12: image_index = 0; break;
		  case 13: image_index = 1; break;
		  case 14: image_index = 2; break;
		  case 15: image_index = 3; break;
		  case 16: image_index = 4; break;
		  case 17: image_index = 5; break;
		  case 18: image_index = 6; break;
		  case 19: image_index = 7; break;
		  case 20: image_index = 8; break;
		  case 21: image_index = 9; break;
		  case 22: image_index = 10; break;
		  case 23: image_index = 11; break;
		  case 24: image_index = 0; break;
		  case 25: image_index = 1; break;
		  case 26: image_index = 12; break;
		  case 27: image_index = 13; break;
		  case 29: image_index = 14; break;
		  case 30: image_index = 15; break;
		  case 32: image_index = 16; break;
		  case 45: image_index = 17; break;
		  }
        if timer < time {
    if ( temp > 0 )
	temp -= 1;
            if timer = 1 {
                sound_play(choose(downb_voice, downb_voice2, downb_voice3));
	if ( air > 0 && tornadoboost )
	    vspeed = -0.9*size;
	}
            if timer = 3 {
                sound_play(downbspin_sound);
            }
            if timer = 3 || timer = 11  || timer = 19 {
                create_hitbox(1,195+facing*150,3.55+vspeed/4,0,10,1,magic3,obj_spark_hit1,0.5,0.6,11,18,self.id,1,2);
                hitbox.di = 0.1
                if air = 0 {
                    duster = instance_create(x+(-6+facing*12)*size,y,obj_dust_effect)
                    duster.facing = facing
                    duster.image_alpha = 0.75
                    duster.image_yscale *= 0.3*size
                    duster.image_xscale *= 0.3*size
                }
            }
            if timer = 7 || timer = 15 || timer = 23 {
                create_hitbox(2,335 - facing*150,3.55+vspeed/4,0,8,1,magic3,obj_spark_hit1,0.5,0.6,-11,18,self.id,1,2);
                hitbox.di = 0.1
                if air = 0 {
                    duster = instance_create(x+(6-facing*12)*size,y,obj_dust_effect)
                    duster.facing = 1-facing
                    duster.image_alpha = 0.75
                    duster.image_yscale *= 0.3*size
                    duster.image_xscale *= 0.3*size
                }
            }
            if timer = 30 {
                sound_play(downb_sound);
                if air > 0
                create_hitbox2(4,270,4,4,20,8,magic2,obj_spark_hit4,0.5,0.5,0,12,self.id,3,2);
                create_hitbox(4,80+facing*20,6.5,5.1,15,6,magic2,obj_spark_hit4,0.8,0.65,0,21,self.id,3,2);
                hitbox.hit_stun = 5
                if air = 0 {
		    hspeed = 0;
                    duster = instance_create(x+(6-facing*12)*size,y,obj_dust_effect)
                    duster.facing = 1-facing
                    duster.image_alpha = 0.75
                    duster.image_yscale *= 0.3*size
                    duster.image_xscale *= 0.3*size
                    duster = instance_create(x+(-6+facing*12)*size,y,obj_dust_effect)
                    duster.facing = facing
                    duster.image_alpha = 0.75
                    duster.image_yscale *= 0.3*size
                    duster.image_xscale *= 0.3*size
                }
            }
      if ( (special || (ai && (offstage || ai_state = "recover"))) && tornadoboost && temp <= 0 )
      {
	vspeed -= 3.1*size;
	special = 0;
	temp = 6;
	if ( air > 0 && vspeed > 0 )
	    vspeed = 0;
	if ( air > 0 && vspeed < -3.9 )
	    vspeed = -3.8*size;
      }
	    if air > 0 && timer > 32 {
		tornadoboost = 0;
		}
	if timer = 32
	vspeed -= 0.9*size
if timer < 30 {
    if moveright {
        if hspeed < 1.8
            hspeed += 0.2 - (air>0)*0.1
    }
    if moveleft {
        if hspeed > -1.8
            hspeed -= 0.2 - (air>0)*0.1
    }
}
if air > 0 {
    if hspeed > 1
    hspeed = 1
    if hspeed < -1
    hspeed = -1
}
}


            if (timer >= 30){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 50) || (target.weight > .22 && target.weight < .3 && target.percent > 60) || (target.weight > .3 && target.percent > 70)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.055;
				killspark.alarm[0] = 100;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 100
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 70;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 70
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 2;
	image_speed = 0;
	}
    timer = 0;
    time =-1;
    }
        
