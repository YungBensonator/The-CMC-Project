if(state_type == "jump")
{
	vspeed -= 0.1;
	state_type = "air_attack";
	attack_type = "bair";
	image_speed = 0;
	sprite_index = bair_sprite;
	image_index = 0;
	timer = 0;
	time = 30;
	timer_speed = 1;
}

switch(timer)
{
	case 2: image_index = 1; break;							//frame 3
	case 4: image_index = 2; break;							//frame 5
	case 6: image_index = 3; break;							//frame 7
	case 7: shakex = 1 - facing * 2; image_index = 4; break;//frame 8
	case 8: shakex = 0; image_index = 5; break;				//frame 9
	case 9: image_index = 6; break;							//frame 10
	case 10: image_index = 7; break;						//frame 11
	case 15: image_index = 8; break;						//frame 16
	case 17: image_index = 9; break;						//frame 18
	case 19: image_index = 10; break;						//frame 20
	case 21: image_index = 11; break;						//frame 22
	case 23: image_index = 13; break;						//frame 23
	case 25: image_index = 14; break;						//frame 25
	case 27: image_index = 15; break;						//frame 27
}

if(timer < time && state_type = "air_attack")
{
	attacking = false;
	state_type = "air_attack";
	if(timer == 7)	//frame 8
	{
		sound_play(attacksnd2);
		play_attack_voice();
		create_hitbox(
		/* Damage		 */ 8,
		/* Direction	 */ 155 - facing * 130,
		/* Base KB		 */ 4.9,
		/* KB Growth	 */ 7,
		/* Shield Damage */ 15,
		/* Hitlag		 */ 7,
		/* SFX			 */ kick3,
		/* VFX			 */ obj_spark_hit4,
		/* Width		 */ 0.8,
		/* Height		 */ 0.45,
		/* X			 */ -14,
		/* Y			 */ 15,
		/* Owner		 */ self.id,
		/* Active Frames */ 8,
		/* Priority		 */ 2
		);
		var burst;
    //78, 36
	burst = instance_create(place_x(24)+x,place_y(31)+y,obj_jab_burst);
    burst.snap = self.id;
	burst.image_xscale = xsize * 0.4;
    burst.image_yscale = ysize * 0.4;

		
		/* Hitbox 2 Stats
		 * 
		 * Stat				| Value
		 * Damage			| 8
		 * Direction		| 18 
		 * Base KB			| 4.7
		 * KB Growth		| 4.4
		 * Shield Damage	| 15
		 * Hitlag			| 7
		 * SFX				| kick3
		 * VFX				| obj_spark_hit4
		 * Width			| 0.65
		 * Height			| 0.45
		 * X				| -2
		 * Y				| 15
		 * Owner			| self.id
		 * Active Frames	| 8
		 * Priority			| 2
		 */
		create_hitbox2(
		/* Damage		 */ 8,
		/* Direction	 */ 18 + facing * 144,
		/* Base KB		 */ 4.7,
		/* KB Growth	 */ 4.4,
		/* Shield Damage */ 15,
		/* Hitlag		 */ 7,
		/* SFX			 */ kick3,
		/* VFX			 */ obj_spark_hit4,
		/* Width		 */ 0.65,
		/* Height		 */ 0.45,
		/* X			 */ -2,
		/* Y			 */ 15,
		/* Owner		 */ self.id,
		/* Active Frames */ 8,
		/* Priority		 */ 2
		);
	}
	if(timer == 9)	//frame 10
	{
		/* Hitbox 1 Stats
		 * 
		 * Stat				| Value
		 * Damage			| 6
		 * Direction		| 155 
		 * Base KB			| 4.9
		 * KB Growth		| 5
		 * Shield Damage	| 8
		 * Hitlag			| 5
		 * SFX				| kick2
		 * VFX				| obj_spark_hit1
		 * Width			| 0.65
		 * Height			| 0.45
		 * X				| -8
		 * Y				| 15
		 * Owner			| self.id
		 * Active Frames	| 8
		 * Priority			| 2
		 */
		hitbox.damage = 6 * size;
		hitbox.kbg = 5 * size;
		hitbox.shield_damage = 8;
		hitbox.hitlag_frames = round(5 * size);
		hitbox.sfx = kick2;
		hitbox.gfx = obj_spark_hit1;
		hitbox.image_xscale = 0.65;
		hitbox.hitbox_x = -8 + facing * 16;
		
		/* Hitbox 2 Stats
		 * 
		 * Stat				| Value
		 * Damage			| 6
		 * Direction		| 18 
		 * Base KB			| 4
		 * KB Growth		| 3
		 * Shield Damage	| 8
		 * Hitlag			| 5
		 * SFX				| kick2
		 * VFX				| obj_spark_hit1
		 * Width			| 0.65
		 * Height			| 0.45
		 * X				| -2
		 * Y				| 15
		 * Owner			| self.id
		 * Active Frames	| 8
		 * Priority			| 2
		 */
		hitbox2.damage = 6 * size;
		hitbox2.bkb = 4 * size;
		hitbox2.kbg = 3 * size;
		hitbox2.shield_damage = 8;
		hitbox2.hitlag_frames = round(5 * size);
		hitbox2.sfx = kick2;
		hitbox2.gfx = obj_spark_hit1;
	}
	if(!air)
	{
		shakex = 0;
		shakey = 0;
		state_type = "land";
		attack_type = "none";
		sprite_index = land_sprite;
		timer = 0;
		time = 8; 
	}
}


            if (timer >= 9){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 135) || (target.weight > .22 && target.weight < .3 && target.percent > 145) || (target.weight > .3 && target.percent > 155)){
     killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   
if(timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch")
{
    dontrepeat = 0;
	attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 2;
	image_speed = 0;
    if(air)
	{
        state_type = "jump";
	}
    else
	{
        state_type = "stand";
	}	
    timer = 0;
    time = -1;
}
//S/O to HFF