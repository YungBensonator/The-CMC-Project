//PART 1 - START OF SETUP PART OF THE MOVE
if ( state_type = "stand" || state_type = "run" )
  {
    state_type = "attack";
    attack_type = "jab"
    timer = 0;
    time = 22;
    sprite_index = jab_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
  }
//PART 1 - END OF SETUP PART OF THE MOVE

//PART 2 - THE JUICE OF THE MOVE - START
if ( timer < time )
  {
  state_type = "attack";
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 5: image_index = 2; sound_play(attacksnd2); break;
	case 19: image_index = 3; break;
      }
	
	if timer = 5
	{
    create_hitbox ( 3 , angle_correct(15) , 3.5 , 0 , 12 , 6 , punch3 , obj_spark_hit3 , 0.75 , 0.40 , 18.40 , 26.40 , self.id , 4 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0.6;
	
	burstvfx = instance_create ( place_x ( 117 ) + x , place_y ( 39) + y , obj_jab_burst );
	burstvfx.snap = self.id;
	burstvfx.image_xscale = xsize * 0.4;
	burstvfx.image_yscale = ysize * 0.4;
	}
	
	if (timer >= 6 and timer < 14) and attack_success and ai
	attacking = 1
	
	if (timer >= 6 and timer < 14) and attacking
	{
	sprite_index = jab_sprite2;
	image_index = 0;
	hspeed = 2.5*(1-facing*2)
    timer = 100;
    time = 133;
	attacking = 0;
	
	duster = instance_create(x-12*(1-facing*2),y,obj_dust_effect);
	duster.image_xscale *= 0.5*size;
	duster.image_yscale *= 0.5*size;
	duster.facing = facing; 
	}
	  
	 switch (timer) { 
	case 104: image_index = 1; break; 
	case 107: image_index = 2; break; 
	case 110: image_index = 3; sound_play(swingsnd2);  break; 
	case 116: image_index = 4; break; 
	case 119: image_index = 5; break; 
	case 124: image_index = 6; break; 
	case 129: image_index = 7; break; 
}
	  
   if timer = 110
   {
   
   if random (2) > 1
	{
	play_attack_voice();
	}
	
    create_hitbox ( 7 , angle_correct(18) , 4.5 , 5.5 , 28 , 8 , slash3 , bloodupright2_hs , 1.10 , 0.66 , 29.20 , 31.20 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	if facing = 0
	{
	hitbox.gfx = bloodupright2_hs
	}
	if facing = 1
	{
	hitbox.gfx = bloodupleft2_hs
	}
   }
    
  }
//PART 2 - THE JUICE OF THE MOVE - END

//PART 3 - GETTING OUT OF THE MOVE AND GOING BACK TO IDLE - START
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }
//PART 3 - GETTING OUT OF THE MOVE AND GOING BACK TO IDLE - END