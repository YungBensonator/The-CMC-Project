if state_type = "run" || state_type = "stand" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "utilt";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index=0;
        timer = 0;
        time = 28;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "attack";
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 6: image_index = 2; sound_play(attacksnd3); break;
	case 7: image_index = 2; break;
	case 9: image_index = 3; break;
	case 25: image_index = 4; break;
      }
	  
	
	if timer = 4
	{
   
   if random (2) > 1
	{
	play_attack_voice();
	}
	
    create_hitbox ( 5 , angle_correct(75) , 5 , 4 , 12 , 5 , punch2 , obj_spark_hit3 , 1 , 1.7 , 9.20 , 35 , self.id , 6 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	}
	
	if attack_success and movejump
	{
	
	sound_play(jump_sound);
	
	vspeed = -5.7;
	
	duster = instance_create(x+7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale *= .5
		duster.image_yscale *= .5;
		duster.facing = !facing
		
		duster = instance_create(x-7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale *= .5
		duster.image_yscale *= .5;
		duster.facing = facing
		
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
	}
    
	
	//blur shit
switch ( timer )
      {
	case 03:  
    blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/0, /*Apex Frame*/3, /*End frame*/3, /*CCW*/1, /*girth*/7, 30);
    blur.index = 0;
    blur.image_index = 1;
    blur.depth = depth - 1;
	blur.push_x = -8*size*(1-facing*2);
    //blur.push_y = 5*size;
    blur.h_squish = 2;
    blur.depth -= 0.1;
    break;
    case 04:
    blur.index = 1;
    blur.image_index = 2;
    break;
	case 06:
	blur.index = 2;
    blur.image_index = 2;
    break;
	case 08:
    blur.image_index = 3; 
    break;
    case 09: 
    blur.start_index = 1;
    blur.image_index = 3.33;
    break;
    case 10:
    blur.start_index = 1;
    blur.image_index = 3.5;
    break;
	case 11: 
    blur.start_index = 3;
    blur.image_index = 4; 
    break;
    case 12:  
    blur.start_index = 4;
    blur.image_index = 4; 
    break;
    case 13: with (blur) instance_destroy(); break;
      }
	
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }


