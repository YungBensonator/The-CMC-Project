if state_type = "jump"
  {
    state_type = "air_attack";
    attack_type = "nair";
    sprite_index = nair_sprite;
    image_index = 0;
    image_speed = 0;
    timer = 0;
    time = 68;
    timer_speed=1;
		has_hit = 0
  }

if ( timer < time )
  {
    state_type = "air_attack";
	switch (timer) { 
	case 3: image_index = 1; break; 
	case 8: image_index = 2; break; 
	case 10: image_index = 3; break; 
	case 12: image_index = 4; break; 
	case 14: image_index = 5; break; 
	case 16: image_index = 6; break; 
	case 18: image_index = 7; break; 
	case 20: image_index = 8; break; 
	case 22: image_index = 9; break; 
	case 24: image_index = 10; break; 
	case 26: image_index = 11; break; 
	case 28: image_index = 12; break; 
	case 30: image_index = 13; break; 
	case 32: image_index = 14; break; 
	case 34: image_index = 15; break; 
	case 36: image_index = 16; break; 
	case 38: image_index = 17; break; 
	case 40: image_index = 18; break; 
	case 42: image_index = 19; break; 
	case 44: image_index = 20; break; 
	case 46: image_index = 21; break; 
	case 48: image_index = 22; break; 
	case 50: image_index = 23; break; 
	case 52: image_index = 24; break; 
	case 54: image_index = 25; break; 
	case 60: image_index = 26; break; 
	case 64: image_index = 27; break; 
}
	
	if timer = 16
	{
   
   if random (2) > 1
	{
	sound_play(nair_voice);
	}
	
    nairfx = create_blur(x,y,self.id);
    nairfx.sprite_index = nair_fx;
	nairfx.snap = self.id
    nairfx.image_index = 0;
    nairfx.image_speed = 0;
    nairfx.image_xscale = 0.4 * (1-facing*2) * size;
    nairfx.image_yscale = 0.4 * size;
    nairfx.depth = depth - 1;
    nairfx.x = x + place_x(128);
	nairfx.y = y + place_y(39);
	}
	
	if timer = 24
	{
    nairfx2 = create_blur(x,y,self.id);
    nairfx2.sprite_index = nair_fx;
	nairfx2.snap = self.id
    nairfx2.image_index = 0;
    nairfx2.image_speed = 0;
    nairfx2.image_xscale = 0.4 * (1-facing*2) * size;
    nairfx2.image_yscale = 0.4 * size;
    nairfx2.depth = depth - 1;
    nairfx2.x = x + place_x(128);
	nairfx2.y = y + place_y(39);
	}
	
	 switch ( timer )
      {
	case 16: nairfx.image_index = 1; break;
	case 18: nairfx.image_index = 2; break;
	case 20: nairfx.image_index = 3; break;
	case 22: nairfx.image_index = 4; break;
	case 24: nairfx.image_index = 5; break;
	case 26: nairfx.image_alpha = 0; break;
	case 30: nairfx.image_alpha = 1; nairfx.image_index = 0; break;
	case 32: nairfx.image_index = 1; break;
	case 34: nairfx.image_index = 2; break;
	case 36: nairfx.image_index = 3; break;
	case 38: nairfx.image_index = 4; break;
	case 40: nairfx.image_index = 5; break;
	case 42: nairfx.image_alpha = 0; break;
	case 46: nairfx.image_alpha = 1; nairfx.image_index = 0; break;
	case 48: nairfx.image_index = 1; break;
	case 50: nairfx.image_index = 2; break;
	case 52: nairfx.image_index = 3; break;
	case 54: with nairfx instance_destroy(); break;
	 }
	
	 switch ( timer )
      {
	case 24: nairfx2.image_index = 1; break;
	case 26: nairfx2.image_index = 2; break;
	case 28: nairfx2.image_index = 3; break;
	case 30: nairfx2.image_index = 4; break;
	case 32: nairfx2.image_index = 5; break;
	case 34: nairfx2.image_alpha = 0; break;
	case 38: nairfx2.image_alpha = 1; nairfx2.image_index = 0; break;
	case 40: nairfx2.image_index = 1; break;
	case 42: nairfx2.image_index = 2; break;
	case 44: nairfx2.image_index = 3; break;
	case 46: nairfx2.image_index = 4; break;
	case 48: nairfx2.image_index = 5; break;
	case 50: nairfx2.image_alpha = 0; break;
	case 54: with nairfx2 instance_destroy(); break;
	 }
	  
	 if timer = 14 or timer = 22 or timer = 30 or timer = 38 or timer = 46
{
	if timer < 46
	sound_play(swingsnd2)
	else
	sound_play(swingsnd3)
	
    create_hitbox ( 2 , 370 , 4.5 , 0 , 20 , 2 , slash1 , bloodupright2_hs , 3.2 , 0.6 , 0,-place_y(42) , self.id , 3 , 6 );
    hitbox.image_angle = angle_correct(346);
	hitbox.sdi = 0
	hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.vspeed=-1.65"
	hitbox.weight_kb = 1;
	
	if timer = 46
	{
	hitbox.damage = 6
	hitbox.bkb = 5
	hitbox.kbg = 6
	hitbox.dir = angle_correct(35)
	hitbox.hitlag_frames = 6
	hitbox.sfx = slash3
	}
	
	if facing = 0
	{
	hitbox.gfx = bloodupright2_hs
	}
	if facing = 1
	{
	hitbox.gfx = bloodupleft2_hs
	}
}	 
	  
	
	
	if has_hit = 1 and timer < 46{
		target.direction = point_direction(target.x,target.y,x,y)
		}
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
  
if air = 0 {
	
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    timer=0;
    time=16;
}
	
  }


if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" ) {
  state_type = "jump";
  attack_type = "none";
  sprite_index = jump_sprite;

  image_index = 0;
  timer = 0;
  time = -1;
}