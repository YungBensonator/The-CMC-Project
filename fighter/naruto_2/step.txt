if canusespecial > 0 {canusespecial -= 1}
if cooldown > 0 {cooldown -=1}
if dair_temp > 0 {dair_temp -= 1}
if state_type != "air_attack" {grav = 0.33}
if ( state_type = "flinch" || state_type = "air_flinch" || state_type = "edge" || state_type = "out" ) && image_alpha < 1 {
image_alpha = 1}

if state_type = "crouch"{
sprite_index = crouch_sprite;
image_speed = 0;
switch (timer) {
case 0: image_index = 0; break;
case 4: image_index = 1; break;}}

if nigga = 1{
stand_sprite = stand_spriteA;
crouch_sprite = crouch_spriteA;
run_sprite = run_spriteA;
walk_sprite = walk_spriteA;
jump_sprite = jump_spriteA;
mid_jump_sprite = mid_jump_spriteA;
fall_sprite = fall_spriteA;
land_sprite = land_spriteA;
shield_sprite = shield_spriteA;
air_dodge_sprite = air_dodge_spriteA; 
spot_dodge_sprite = spot_dodge_spriteA;
roll_sprite = roll_spriteA;
flinch_sprite = flinch_spriteA;
flinch2_sprite = flinch2_spriteA;
flinch3_sprite = flinch3_spriteA;
down_sprite = down_spriteA;
down_attack_sprite = down_attack_spriteA;
edge_sprite = edge_spriteA;
edge_climb_sprite = edge_climb_spriteA;
swim_sprite = fall_spriteA;
ladder_sprite = fall_spriteA;
vehicle_sprite = fall_spriteA
broken_sprite = broken_spriteA
ukemi_sprite = ukemi_spriteA;
edge_attack_sprite = edge_attack_spriteA;
edge_roll_sprite = edge_roll_spriteA;
launched_sprite = launched_spriteA;
screenko_sprite = screenko_spriteA;
parry_sprite = parry_spriteA;
item_down_sprite = item_down_spriteA;
item_forward_sprite = item_forward_spriteA;
item_up_sprite = item_up_spriteA;
item_heavy_sprite = item_heavy_spriteA;
item_swing_sprite = item_swing_spriteA;
item_shoot_sprite = item_shoot_spriteA;}

if state_type = "dodge" {
if timer = 1 {image_alpha = 0;}
if timer = 5 {
sound_play(bushin_sound);
smoke = instance_create( x,y,obj_spark );
smoke.sprite_index = smoke_sprite;
smoke.image_xscale = xsize;
smoke.image_yscale = ysize;
smoke.image_speed = 0.2;
smoke.x = x;
smoke.y = y;}
if timer = 18 {
image_alpha = 1}
}

if state_type = "flinch" || state_type = "air_flinch" || state_type = "edge" || state_type = "out" {
with (rock) instance_destroy();}

/////////////////Meter Start/////////////////////////////////////
if (!instance_exists(MeterHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    MeterHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    MeterHud.step_script = hudThing_step_script;
    MeterHud.draw_script = hudThing_draw_script;
    MeterHud.owner = self.id;
    MeterHud.keepmain = self.keepmain;
	MeterHud.sprite_index = meter_sprite;
	MeterHud.image_speed = 0;
        MeterHud.image_xscale = image_xscale * 3;
        MeterHud.image_yscale = image_yscale * 3;
}


if(MeterHud.image_index <= 0) {MeterHud.image_index = 0}
if(meter >= maxmeter){MeterHud.image_index = 55;} else if (meter <= 0){MeterHud.image_index = 0;} else {MeterHud.image_index = meter*55/maxmeter;}


if (!instance_exists(CircleHud)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    CircleHud = instance_create ( hud_x, hud_y, obj_custom_gfx);
    CircleHud.step_script = hudThing_step_script;
    CircleHud.draw_script = hudThing_draw_script;
    CircleHud.owner = self.id;
    CircleHud.keepmain = self.keepmain;
	CircleHud.sprite_index = circle_sprite;
	CircleHud.image_speed = 0;
}

if bankai = 0 {
if formation = 0
CircleHud.image_index = 0;
else if formation = 1
CircleHud.image_index = 1;
else if formation = 2
CircleHud.image_index = 2;
}

else if bankai = 1 {
if formation = 0
CircleHud.image_index = 3;
else if formation = 1
CircleHud.image_index = 4;
else if formation = 2
CircleHud.image_index = 5;
}

if (hitbox.hit = 1 || hitbox2.hit = 1 || proj.hit = 1) && meter < maxmeter {
if bankai = 0 {meter += 0.25;}
else {meter += 0.05}
}

if meter >= maxmeter {meter = maxmeter}

if meter < 0 {meter = 0}

if bankai = 1 {

if formation = 2 {formation = 0;}

if meter > 0 {meter -= 4/60}

max_jumps = 4;
walk_speed = 3.9;
run_speed = 4.0;
fric = 0.95;
weight = 0.29;
grav = 0.30;
air_speed = 3.3;
fall_speed = 4.5;

if meter <= 0 && ( state_type != "attack" && state_type != "air_attack" && state_type != "out" && state_type != "respawn" ) {

max_jumps = 3;
walk_speed = 3.1;
run_speed = 3.9;
fric = 0.96;
weight = 0.31;
grav = 0.39;
air_speed = 2.8;
fall_speed = 4.9;

acceleration = 1
accelerated = 0
bankai = 0

stand_sprite = stand_spriteA;
crouch_sprite = crouch_spriteA;
run_sprite = run_spriteA;
walk_sprite = walk_spriteA;
jump_sprite = jump_spriteA;
mid_jump_sprite = mid_jump_spriteA;
fall_sprite = fall_spriteA;
land_sprite = land_spriteA;
shield_sprite = shield_spriteA;
air_dodge_sprite = air_dodge_spriteA; 
spot_dodge_sprite = spot_dodge_spriteA;
roll_sprite = roll_spriteA;
flinch_sprite = flinch_spriteA;
flinch2_sprite = flinch2_spriteA;
flinch3_sprite = flinch3_spriteA;
down_sprite = down_spriteA;
down_attack_sprite = down_attack_spriteA;
edge_sprite = edge_spriteA;
edge_climb_sprite = edge_climb_spriteA;
swim_sprite = fall_spriteA;
ladder_sprite = fall_spriteA;
vehicle_sprite = fall_spriteA
broken_sprite = broken_spriteA
ukemi_sprite = ukemi_spriteA;
edge_attack_sprite = edge_attack_spriteA;
edge_roll_sprite = edge_roll_spriteA;
launched_sprite = launched_spriteA;
screenko_sprite = screenko_spriteA;
parry_sprite = parry_spriteA;
item_down_sprite = item_down_spriteA;
item_forward_sprite = item_forward_spriteA;
item_up_sprite = item_up_spriteA;
item_heavy_sprite = item_heavy_spriteA;
item_swing_sprite = item_swing_spriteA;
item_shoot_sprite = item_shoot_spriteA;

state_type = "stand";
attack_type = "none";
timer = 0;
time = -1;
char_custom9();}

}

if state_type = "air_attack" and attack_type = "transformBack" {
char_custom9();}