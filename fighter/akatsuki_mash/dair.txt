if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "dair";
  image_speed = 0;
  image_index = 0;
  sprite_index = dair_sprite;
  timer = 0;
  time = 39;
  timer_speed = 1;
  lcancel = 1;
  air_move = 0;
  temp = air;
  canceltemp = 0;
  attack_success = 0;
  }

switch(timer)
{
case 03: image_index = 1; break;
case 06: image_index = 2; break;
case 09: image_index = 1; break;
case 12: image_index = 2; break;
case 15: image_index = 1; break;
case 18: image_index = 2; break;
case 15: image_index = 3; break;
case 18: image_index = 4; break;
case 21: image_index = 5; break;
case 24: image_index = 4; break;
case 27: image_index = 5; break;
}

if timer < 24
{
gravity = 0;
gravity_lock = 1;
hspeed = 0;
vspeed = 0;
}

if timer = 15
{
    create_hitbox ( 12 , 285 + facing * 30 , 5 , 6 , 20 , 9 , shock3 , obj_spark_shock , 0.44 , 1.04 , 3.15 , 6.75 , self.id , 9999 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	sound_play(shocksound3);
	sound_play(choose(dair_voice,dair_voice2,dair_voice3));
} 

if timer = 18
{
dairfx = create_blur(x,y,self.id);
dairfx.sprite_index = dair_fx;
dairfx.image_index = 0;
dairfx.image_speed = 0;
dairfx.snap = self.id;
dairfx.image_xscale = 0.07*(1-facing*2)*size;
dairfx.image_yscale = 0.07*size;
dairfx.x = x + 6 * (1-facing*2) * size;
dairfx.y = y + 7 * size;
dairfx.depth = depth - 1;
}
switch (timer)
{
case 19: dairfx.image_index = 1; break;
case 20: dairfx.image_index = 2; break;
case 21: dairfx.image_index = 3; break;
case 22: dairfx.image_index = 4; break;
case 23: dairfx.image_index = 5; break;
case 24: dairfx.image_index = 0; break;
case 25: dairfx.image_index = 1; break;
case 26: dairfx.image_index = 2; break;
case 27: dairfx.image_index = 3; break;
case 28: dairfx.image_index = 4; break;
case 29: dairfx.image_index = 5; break;
}

if timer >= 18
{
vspeed = 10 * size;
}

if air !=0 and timer = 30
{
timer = 18;
}

if ( ( on_floor or on_platform  ) and timer >= 18 and sprite_index != dairland_sprite)
{
with (dairfx)
{
instance_destroy();
}
with hitbox instance_destroy();

screen_shake(0.8,12);

impactspark = instance_create(x,y,obj_down_impact)
impactspark.image_blend = c_blue;

sprite_index = dairland_sprite;
image_index = 0;
timer = 100;
time = 117;
air = temp;
}

switch(timer)
{
case 103: image_index = 1; break;
case 113: image_index = 2; break;
}

if ( attack_success = 1 )
{
canceltemp = 1;
}

if ( timer >= 15 && canceltemp = 1 && ( ( movejump && !attacking && !smashdown && (air < max_jumps-1) ) || ( special && !grab ) || ( smash && !smashdown && !movejump && !attacking ) || ( (attacking || grab) && !movedown && !smashdown ) ) )
{
interrupt = 1;
}
 if (timer >= 15){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 20) || (target.weight > .22 && target.weight < .3 && target.percent > 25) || (target.weight > .3 && target.percent > 30)){
killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }