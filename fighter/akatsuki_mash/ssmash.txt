if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "ssmash";
  image_speed = 0;
  image_index = 0;
  sprite_index = ssmash_sprite;
  timer = 0;
  time = 42;
  timer_speed = 1;
  charge_frame = 7;
  canceltemp = 0;
  }

switch(timer)
{
case 03: image_index = 1; break;
case 06: image_index = 2; break;
case 09: image_index = 3; break;
case 12: image_index = 4; break;
case 15: image_index = 5; break;
case 18: image_index = 6; break;
case 28: image_index = 7; break;
case 31: image_index = 8; break;
case 34: image_index = 9; break;
case 37: image_index = 10; break;
}

if timer = 18
{
    create_hitbox ( 12 , 15 + facing * 150 , 5.5 , 6 , 26 , 9 , punch3 , obj_spark_hit4 , 1.5 , 1.19 , 20.25 , 17.10 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	sound_play(attacksnd3);
	sound_play(ssmash_voice);
}

//Blur shit starts here
    switch ( timer )
      {
	case 17:  
    blur2 = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/3, /*Apex Frame*/7, /*End frame*/7, /*CCW*/0, /*girth*/10, 15);
    blur2.index = 1;
    blur2.image_index = 1;
    blur2.depth -= 0.1;
	blur2.h_squish = -4;
	blur2.v_squish = 6;
	blur2.push_x = -16*size*(1-facing*2);
	blur2.push_y = 10*size;
    break;
    case 15:
    blur2.index = 2;
    break;
	case 18: 
	blur2.index = 3;
    break;
	case 21:
	blur2.image_index = 2;
	break;
    case 22: 
    blur2.image_index = 3.33;
    break;
    case 23:
    blur2.image_index = 3.5;
    break;
	case 24: 
    blur2.image_index = 4; 
    break;
    case 25:  
    blur2.image_index = 4; 
    break;
    case 26: with (blur2) instance_destroy(); break;
      }

if ( hitbox.hit = 1 && attack_shielded = 0 )
{
canceltemp = 1;
with (blur2) instance_destroy();
}
  
if ( timer >= 15 && canceltemp = 1 && !smashleft && !smashright && !movejump )
{
	if ( attacking && !moveup && !movedown && !moveleft && !moveright && !smash )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_jab();
	}
	if ( attacking && ( moveleft || moveright ) && !smash )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_stilt();
	}
	if ( attacking && moveup && !smash )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_utilt();
	}
	if ( attacking && movedown && !smash )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_dtilt();
	}
	if ( special && !moveup && !movedown && !moveleft && !moveright )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_b();
	}
	if ( special && ( moveleft || moveright ) )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_sideb();
	}
	if ( special && moveup )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_upb();
	}
	if ( special && movedown )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_downb();
	}
	/*if ( attacking && ( smashleft || smashright ) )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_ssmash();
	}*/
	if ( attacking && smashup )
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_usmash();
	}
	if ( attacking && smashdown )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_dsmash();
	}
	if ( attacking && grab )
	{
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_grab();
	}
}

if ( timer >= 15 && canceltemp = 1 && movejump )
{
	if movejump && !attacking && !special && !smash && !smashleft && !smashright && !smashup && !smashdown && !grab {interrupt = 1; smash = 0; smashleft = 0; smashright = 0; smashup = 0; smashdown = 0;}
	if movejump && ( smashleft || smashright ) 
	{
		canceltemp = 0;
		hitbox.hit = 0;
		state_type = "stand";
		attack_type = "none";
		timer = 0;
		time = -1;
		char_stilt();
	}
}

 if (timer >= 18){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 80) || (target.weight > .22 && target.weight < .3 && target.percent > 90) || (target.weight > .3 && target.percent > 110)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }