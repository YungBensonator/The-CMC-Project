
fast_fall = 0
fast_fall_temp = 0 
if (state_type = "run" || state_type = "stand" || state_type = "jump") && ubtemp <= 0{
    ubtemp += 1;
    if ubtemp > 1{
    break;
}
if state_type = "flinch" or state_type = "air_flinch"{state_type = "fall"; }
    special = 1;
    timer = 0;
    attack_type = "upb"
    if air = 0 {
        state_type = "air_attack";
        hspeed = 0;
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing; }
    else {
        state_type = "air_attack";
    }
    image_speed = 0.4;
    sprite_index = upb_sprite;
    image_index=0.1;
    time = 42;
    timer_speed=1;
    if moveright = 1 facing = 0
    if moveleft = 1 facing = 1
}

         if timer < time {
	if timer > 25
	force_edge_grab = 1
            if timer > 2 && timer < 8
                intangible = 1
            if timer = 8 {
                image_speed = 0.25
                intangible = 0
                sound_play(upb_sound);
                sound_play(choose(attack_voice1,b_voice));
                create_hitbox(2,370,8.2,0,5,4,slash1,obj_spark_slash1,1.2,1.6,14,21,self.id,1,2);
                specialtime += 125;
				hitbox.execute_on_hit = "attacker.has_hit = 1"
                hitbox.di = 0.3
                hitbox.shake_ampl = 0
                hitbox.hitshake_type = 1
                hspeed = 4 - facing*8;
                vspeed = -7.5;
                image_speed = 0.2
                after_image(4,make_color_rgb(174,99,255),0.9)
                instance_create(x+10*(1-facing*2)*size,y-18*size,obj_spark_effect)
                flashing = true
                alarm[7] = 4
            }
            if timer = 10 || timer = 12 || timer = 14 || timer = 16 {
                intangible = 0
                create_hitbox(2,370,8.15,0,5,4,slash1,obj_spark_slash1,1.2,1.6,15,23,self.id,1,2);
                hitbox.hitshake_type = 1
				hitbox.execute_on_hit = "attacker.has_hit = 1"
                create_hitbox2(2,370,8.05,0,5,4,slash1,obj_spark_slash1,0.8,1.2,21,31,self.id,1,2);
                hitbox.sdi = 0.15
				hitbox2.execute_on_hit = "attacker.has_hit = 1"
		        hitbox2.sdi = 0.15
                hitbox.hitshake_type = 1
                hspeed = 4.5 - facing*9;
                vspeed -= 0.235;
                after_image(4,make_color_rgb(174,99,255),0.9)
            }
			if attack_success and timer <= 17 {
        target.direction = point_direction(target.x, target.y, x+ 10 * size * (1-facing*2), y - 12)
    }
            if timer = 17 {
                
                intangible = 0
                 create_hitbox(4,angle_correct(40),2.65,8.6,5,8,slash3,obj_spark_slash2,1.2,1.6,15,23,self.id,3,3);
                 hitbox.hitshake_type = 1
                 create_hitbox(4,angle_correct(40),2.65,8.6,5,8,slash3,obj_spark_slash2,0.8,1.2,21,31,self.id,3,3);
                 hitbox.hitshake_type = 1
                 after_image(4,make_color_rgb(174,99,255),0.9)
                 hitbox.shake_type = 0
				 hitbox.sdi = 8
                 hitbox.shake_kb = 3
                 hitbox.shake_ampl = 1.2 }
            if timer = 27 || timer = 28 {
                vspeed = -2.25*size
                if timer = 28
                hspeed *= 0.6
            }
            if image_index >= image_number - image_speed
                sprite_index = fall_sprite;
        }  



        
        if (timer >= 17){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && obj_score_control.stocks[target.number-1] == 1 {
				if ((target.weight <= .22 && target.percent > 125) || (target.weight > .22 && target.weight < .3 && target.percent > 140) || (target.weight > .3 && target.percent > 155)){
                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        dontrepeat = 0;
        flashing = false
        attack_type = "none";
        if air > 0
        state_type = "jump";
        else
        if state_type != "land"
        state_type = "stand";
        timer = 0;
        time =-1;
    }