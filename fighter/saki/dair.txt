if state_type = "jump" {
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0.2;
        sprite_index = dair_sprite;
        image_index=-0.2;
        timer = 0;
        time = 38;
        timer_speed=1;
        temp = 0
        time_change = 0
        tempmovedown = 0
}
        if timer < time {
            fast_fall_temp = 0
            fast_fall = 0
            state_type = "air_attack";
            if timer < 12 || vspeed < 0
                vspeed = 0
            hspeed = 0
            if timer = 11 {
                tempmovedown = 0
                play_attack_voice();
                sound_play(attack_sound3);
                create_hitbox(12,282-facing*24,4.25,3,20,11,slash3,obj_spark_slash2,0.45,0.8,8,1,self.id,37,3);
                hitbox.hitshake_type = 1
                create_hitbox2(13,270,5.6,4.7,24,15,fire3,obj_spark_slash3,0.4,0.65,6,7,self.id,3,3);
                hitbox2.hitshake_type = 1
                hitbox2.skake_ampl = 1.3
                temp_fall_speed = 5.5
            }
            if timer = 12
                vspeed = (fall_speed + temp_fall_speed*0.9)*size
            if timer = 28 && !temp {
                hitbox.damage = 11*size;
            }
            if attack_success && timer <= 39 && air != 0 {
                temp_fall_speed = 0
                vspeed = (-3.8 + temp*0.2)*size
                attack_success=0
                temp += 1
                time_change = 4 + (timer >= 23)*6
                with hitbox { 
                    hit = 2
                    time += attacker.time_change
                }
                if timer > 16 {
                    timer-=time_change
                    image_index -= time_change*image_speed
                }
            }
            if timer = 20 && !temp {
                tempmovedown = movedown
                hitbox.damage = 8*size;
                hitbox.dir = 70 + facing*40;
                hitbox.bkb = 4*size;
                hitbox.kbg = 6.5*size;
                hitbox.hitlag_frames = round(7*size);
            }
            if temp > 0 && vspeed >= 1.2 && temp < 3 && timer < 39 {
                if instance_exists(hitbox) with hitbox instance_destroy()
                //create_hitbox(11-(temp>2)*3,45+facing*90,5,6 - (temp >= 2)*0.5,17,7,slash3,obj_spark_slash1,0.55,1.1,7,8,self.id,42-timer,3);
            }
            if image_index >= image_number - image_speed
                image_speed = 0
            if timer >= 12 && (air = 0 || is_on_floor(self.id)) {
                if timer < 34 { 
                    instance_create(x,y,obj_down_impact)
                    sound_play(dair_land_sound)
                }
                if timer < 37 && instance_exists(hitbox)
                    with hitbox instance_destroy();
                hspeed = 0;
                vspeed = 0;
                state_type="land";
                attack_type="none";
                sprite_index = dair_land_sprite;
                image_index = 0.135;
                image_speed = 0.135;
                timer=0;
                time=11; 
            }
        }
        if (timer >= 11){
if (hitbox2.hit > 0 || target.object_index == obj_enemy) && (target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 40) || (target.weight > .22 && target.weight < .3 && target.percent > 50) || (target.weight > .3 && target.percent > 60)){
killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	     
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    dontrepeat = 0;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
   
    timer = 0;
    time =-1;
    temp_fall_speed = 0
}
        
