fast_fall = 0;
fast_fall_temp = 0;
gravity = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  attacking = 0;
  special = 0;
  attack_type = "upb";
  time = 43;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = upb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  vspeed = 0;
  air_move = 0;
  if moveright
  {
  facing = 0;
  }
  else if moveleft
  {
  facing = 1;
  }
  }

switch (timer)
{
case 2: image_index = 1; break;
case 4: image_index = 2; sound_play(swingsnd2); break;
case 6: image_index = 3; break;
case 8: image_index = 4; break;
case 33: image_index = 5; break;
case 35: image_index = 6; break;
case 37: image_index = 7; break;
case 39: image_index = 8; break;
case 41: image_index = 9; break;
}

if timer < 8
{
gravity_lock = 1;
}

if timer = 8
{
   sound_play(upb_sound);
   sound_play(upb_voice); 
   create_hitbox ( 12 , 85 + facing * 10 , 4 , 7 , 12 , 6 , marisahit3 , obj_spark_hit4 , 0.62 , 1.29 , 7.03 , 23.68 , self.id , 23 , 2 );
   hitbox.image_angle = ( 1 - facing * 2 ) * 0;
   upbeff = create_blur(x,y,self.id);
   upbeff.sprite_index = upbeff_sprite;
   upbeff.image_index = 0;
   upbeff.image_speed = 0;
   upbeff.snap = self.id;
   upbeff.image_xscale = 0.4*(1-facing*2)*size;
   upbeff.image_yscale = 0.4*size;
   upbeff.image_angle = 90 * (1-facing*2);
   upbeff.depth = depth - 1;
   upbeff.x = x + 9.99 * (1-facing*2) *size;
   upbeff.y = y - 25 *size;
   upbeff.image_alpha = 0;
}



if timer >= 8 and timer <= 13
{
upbeff.image_alpha += 0.2;
}

switch ( timer )
    {
	case 9: upbeff.image_index = 1; break;
	case 10: upbeff.image_index = 2; break;
	case 11: upbeff.image_index = 3; break;
	case 12: upbeff.image_index = 4; break;
	case 13: upbeff.image_index = 1; break;
	case 14: upbeff.image_index = 2; break;
	case 16: upbeff.image_index = 3; break;
	case 18: upbeff.image_index = 4; break;
	case 19: upbeff.image_index = 1; break;
	case 20: upbeff.image_index = 2; break;
	case 21: upbeff.image_index = 3; break;
	case 22: upbeff.image_index = 4; break;
	case 23: upbeff.image_index = 1; break;
	case 24: upbeff.image_index = 2; break;
	case 25: upbeff.image_index = 3; break;
	case 26: upbeff.image_index = 4; break;
	case 27: upbeff.image_index = 1; break;
	case 28: upbeff.image_index = 2; break;
	case 29: upbeff.image_index = 3; break;
	case 30: upbeff.image_index = 4; break;
	case 31: upbeff.image_index = 5; break;
	case 32: upbeff.image_index = 6; break;
	case 33: upbeff.image_index = 7; break;
	case 34: upbeff.image_index = 6; break;
	case 35: upbeff.image_index = 7; break;
	case 36: upbeff.image_index = 8; break;
	case 37: upbeff.image_index = 0; break;
	case 38: upbeff.image_index = 1; break;
	case 39: upbeff.image_index = 2; break;
	case 40: upbeff.image_index = 3; break;
	case 41: upbeff.image_index = 4; break;
	case 42: upbeff.image_index = 5; break;
	case 43: upbeff.image_index = 6; break;
	case 44: upbeff.image_index = 7; break;
	case 45: upbeff.image_index = 8; break;
	case 46: upbeff.image_index = 0; break;
	case 47: upbeff.image_index = 1; break;
	case 48: upbeff.image_index = 2; break;
	case 49: upbeff.image_index = 3; break;
	}

if timer = 33
{
with (upbeff)
{
instance_destroy();
}
}

if timer >= 8 and timer < 28
{
vspeed = -5 * size;
hspeed = 2 * (1-facing*2) * size;
}

if timer >= 8
{
force_edge_grab = 1;
}

if timer >=8 and timer < 33
{
if timer mod 5 == 0
{
star = create_projectile (3,35+facing*110,5.4,6.4,12,8,magic2,obj_spark_hit2,1.0,1.0, 7.40 , 10.73,self.id,20,char_custom1);
star.type = 2;
star.direction = ( choose ( 250 , 260 , 265 , 270 , 275, 280, 285, 290, 295, 300 ) ) * (1-facing*2);
star.speed = 4 * (1-facing*2) * size;
}
}

if timer = 28
{
vspeed *= 0.5;
}

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
    state_type = "fall";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }