if sidebtemp = 0
{
fast_fall = 0;
fast_fall_temp = 0;
gravity = 0;
gravity_lock = 1;
vspeed = 0;
}

if sidebtemp = 1 {exit;}

if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 0;
  air_move = 0;
  attack_type = "sideb";
  time = 65;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = sideb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  }

switch (timer)
{
case 1: image_index = 1; break;
case 2: image_index = 2; break;
case 3: image_index = 3; break;
case 4: image_index = 4; break;
case 5: image_index = 5; break;
case 6: image_index = 6; break;
case 7: image_index = 7; break;
case 8: image_index = 8; sound_play(sideb_voice); break;
case 10: image_index = 9; break;
case 12: image_index = 10; break;
case 14: image_index = 11; break;
case 16: image_index = 12; break;
case 18: image_index = 13; break;
case 20: image_index = 14; break;
case 22: image_index = 15; break;
case 24: image_index = 16; break;
case 26: image_index = 17; break;
case 28: image_index = 18; break;
case 30: image_index = 19; break;
case 32: image_index = 20; break;
case 34: image_index = 13; break;
case 36: image_index = 14; break;
case 38: image_index = 15; break;
case 40: image_index = 16; break;
case 42: image_index = 17; break;
case 44: image_index = 18; break;
case 46: image_index = 19; break;
case 48: image_index = 20; break;
case 50: image_index = 13; break;
case 51: image_index = 12; break;
case 52: image_index = 11; break;
case 53: image_index = 10; break;
case 54: image_index = 9; break;
case 55: image_index = 8; break;
case 56: image_index = 7; break;
case 57: image_index = 6; break;
case 58: image_index = 5; break;
case 59: image_index = 4; break;
case 60: image_index = 3; break;
case 61: image_index = 2; break;
case 62: image_index = 1; break;
}

if timer = 18
{
   hspeed = 3.5 * (1-facing*2) * size;
   sound_play(upb_sound);
   sidebdrill = create_blur(x,y,self.id);
   sidebdrill.sprite_index = sidebdrill_sprite;
   sidebdrill.image_index = 0;
   sidebdrill.image_speed = 0;
   sidebdrill.snap = self.id;
   sidebdrill.image_xscale = 0.37*(1-facing*2)*size;
   sidebdrill.image_yscale = 0.37*size;
   sidebdrill.depth = depth - 1;
   sidebdrill.x = x + 6 * (1-facing*2) *size;
   sidebdrill.y = y - 13 *size;
   sidebdrill.image_alpha = 0;
}
 
if timer >= 19 and timer <= 24
{
sidebdrill.image_alpha += 0.2;
}

if timer >=18 and timer <= 50
{
if timer mod 5 == 0
{
star = create_projectile (3,35+facing*110,5.4,6.4,12,8,marisahit2,obj_spark_hit2,1.0,1.0, -15.91 , 15.54,self.id,20,char_custom1);
star.type = 2;
star.direction = ( choose ( 150 , 160 , 165 , 170 , 175, 180, 185, 190, 195, 200 ) ) * (1-facing*2);
star.speed = 4 * (1-facing*2) * size;
}
}

if timer >= 18 and timer < 46 and !instance_exists(hitbox)
{
    create_hitbox ( 1 , 5 + facing * 170 , 5 , 0 , 12 , 1 , marisahit2 , obj_spark_hit3 , 1.08 , 0.83 , 2.96 , 17.76 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.hit_stun = 7;
	hitbox.di = 0.1;
}

if timer = 46
{
    create_hitbox ( 2 , 35 + facing * 110 , 6.5 , 7 , 12 , 5 , marisahit3 , obj_spark_hit4 , 1.08 , 0.83 , 2.96 , 17.76 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.hit_stun = 7;
}

switch ( timer )
    {
	case 19: sidebdrill.image_index = 1; break;
	case 20: sidebdrill.image_index = 2; break;
	case 21: sidebdrill.image_index = 3; break;
	case 22: sidebdrill.image_index = 4; break;
	case 23: sidebdrill.image_index = 5; break;
	case 24: sidebdrill.image_index = 6; break;
	case 26: sidebdrill.image_index = 7; break;
	case 28: sidebdrill.image_index = 8; break;
	case 29: sidebdrill.image_index = 0; break;
	case 30: sidebdrill.image_index = 1; break;
	case 31: sidebdrill.image_index = 2; break;
	case 32: sidebdrill.image_index = 3; break;
	case 33: sidebdrill.image_index = 4; break;
	case 34: sidebdrill.image_index = 5; break;
	case 35: sidebdrill.image_index = 6; break;
	case 36: sidebdrill.image_index = 7; break;
	case 37: sidebdrill.image_index = 8; break;
	case 38: sidebdrill.image_index = 0; break;
	case 39: sidebdrill.image_index = 1; break;
	case 40: sidebdrill.image_index = 2; break;
	case 41: sidebdrill.image_index = 3; break;
	case 42: sidebdrill.image_index = 4; break;
	case 43: sidebdrill.image_index = 5; break;
	case 44: sidebdrill.image_index = 6; break;
	case 45: sidebdrill.image_index = 7; break;
	case 46: sidebdrill.image_index = 8; break;
	case 47: sidebdrill.image_index = 0; break;
	case 48: sidebdrill.image_index = 1; break;
	case 49: sidebdrill.image_index = 2; break;
	case 50: sidebdrill.image_index = 3; break;
	case 51: sidebdrill.image_index = 4; break;
	case 52: sidebdrill.image_index = 5; break;
	case 53: sidebdrill.image_index = 6; break;
	case 54: sidebdrill.image_index = 7; break;
	case 55: sidebdrill.image_index = 8; break;
	case 56: sidebdrill.image_index = 0; break;
	case 57: sidebdrill.image_index = 1; break;
	case 58: sidebdrill.image_index = 2; break;
	case 59: sidebdrill.image_index = 3; break;
	}

if timer = 50
{
with (sidebdrill)
{
instance_destroy();
}
}

if ( timer >= time - 1 )
  {
  sidebtemp = 1;
  attack_type = "none";
  if ( air == 0 )
    state_type = "stand";
    else
    state_type = "jump";
  timer = 0;
  time = -1;
  }