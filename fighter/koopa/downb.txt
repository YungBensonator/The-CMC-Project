fast_fall = 0;
fast_fall_temp = 0;
if ( state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "downb";
    timer = 0;
    time = 93;
    sprite_index = downb_sprite;
    image_speed = 0;
    image_index = 0;
    speed = 0;
    gravity_lock = 1;
    fall_lock = 0;
    air_move = 0;
    vspeed = 0;
  }

if ( state_type == "air_attack" )
  gravity_lock = 2;

if ( timer < time )
  {
    switch ( timer )
      {
	case 18: image_index = 1; break;
	case 21: image_index = 2; break;
	case 24: image_index = 3; break;
	case 27: image_index = 1; break;
	case 30: image_index = 2; break;
	case 33: image_index = 3; break;
	case 36: image_index = 1; break;
	case 39: image_index = 2; break;
	case 42: image_index = 3; break;
	case 45: image_index = 1; break;
	case 48: image_index = 2; break;
	case 51: image_index = 3; break;
	case 54: image_index = 1; break;
	case 57: image_index = 4; break;
	case 60: image_index = 5; break;
	case 63: image_index = 6; break;
	case 87: image_index = 4; break;
      }

    if ( timer < 18 )
	hspeed = 0

    if ( timer = 18 )
      {
	sound_play(downb_sound);
	instance_create(x,y,obj_down_impact);
      }
    if ( timer = 18 || timer = 34 || timer = 50 )
      {
	spark = instance_create(x,y-15*size,obj_spark)
	spark.image_speed = 0.25
	spark.sprite_index = whirl_sprite
	spark.image_xscale = 0.5*size
	spark.image_yscale = 0.75*size
	spark.image_alpha = 0.5
	spark.depth = -3
	spark.snap = self.id
      }
    if (target.weight >= 3)
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),4.5,20);
	}
	else
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),3,10);
	}
	multiangle = point_direction(tempx,tempy,x,y);
	tempx=x;
	tempy=y;
    if ( timer = 18 || timer = 26 || timer = 34 || timer = 42 || timer = 50 )
      {
	create_hitbox(3,multiangle,multispd,0,3,4,kick2,obj_spark_hit3,1.3,1.2,0,15,self.id,3,1);
	hitbox.di = 0.3;
	hitbox.weight_kb = 1;
	hitbox.hit_stun = 12;
      }
    if ( timer = 60 )
      {
	sound_play(attacksnd3);
	create_hitbox(12,35+facing*110,7,6.3,5,5,punch3,obj_spark_hit4,1.4,1.3,0,15,self.id,3,2);
	hitbox.hit_stun = 12
	hspeed = 0;
	air_move = 0;
	if ( air = 0 )
	  {
	    duster = instance_create(x+size*(6-facing*12),y,obj_dust_effect);
	    duster.facing = 1-facing;
	    duster.image_alpha = 0.75;
	    duster.image_xscale *= 0.6*size;
	    duster.image_yscale *= 0.4*size;
	    duster = instance_create(x-size*(6-facing*12),y,obj_dust_effect);
	    duster.facing = facing;
	    duster.image_alpha = 0.75;
	    duster.image_xscale *= 0.6*size;
	    duster.image_yscale *= 0.4*size;
	  }
      }
    if ( timer >= 18 && timer <= 56 )
      {
	if ( ai )
	  {
	    instance_deactivate_object ( self.id );
	    target = instance_nearest ( x , y , player );
	    instance_activate_object ( self.id );

	    moveright = 0; moveleft = 0;
	    if ( x < target.x ) moveright = 1;
	    if ( x > target.x ) moveleft = 1;
	  }
	if ( moveright && hspeed < 4*size )
	    hspeed += size * ( 1.5 - (air>0) * 0.16 );
	if ( moveleft && hspeed > -4*size )
	    hspeed -= size * ( 1.5 - (air>0) * 0.16 );
	if !moveleft && !moveright && hspeed > 0
	    hspeed -= size*1
	if !moveleft && !moveright && hspeed < 0
	    hspeed += size*1
	if !moveleft && !moveright && hspeed > -1.5 && hspeed < 1.5
	    hspeed = 0
      }
    if ( air > 0 )
      {
	if ( hspeed > 3*size )
	    hspeed = 3*size;
	if ( hspeed < -3*size )
	    hspeed = -3*size;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" ) {
  attack_type = "none";
  state_type = "stand";
  if ( air > 0 )
    state_type = "fall";
  else
    state_type = "stand";
  timer = 0;
  time = -1;
}