if ( time == -1 )
  {
    state_type = "attack";
    attack_type = "fthrow";
    image_speed = 0;
    image_index = 0;
    sprite_index = fthrow_sprite;
    timer = 0;
    time = 39;
    timer_speed = 1;
  }

switch ( timer )
  {
    case 3: image_index = 1;  break;
    case 9: image_index = 2; image_xscale *= 1.1; image_yscale *= 1.1; break;
    case 10: image_xscale *= 1.05; image_yscale *= 1.05; break;
    case 12: image_index = 3;  break;
    case 15: image_index = 4;  break;
    case 36: image_index = 5;  break;
  }
if ( timer <= 12 )
  {
    target.x = x + 16 * size * (1-facing*2);
    target.y = y;
  }
if ( timer = 12 )
  {
    play_attack_voice()
    sound_play (swingsnd1);
    create_hitbox(8,30+facing*120,5.4,4.6,10,6,punch2,obj_spark_hit4,0.48,0.33,7,13,self.id,15,2);
  }
if ( timer >= 12 && timer <= 27 )
  {
    if ( timer mod 3 < 1 )
      {
	duster = instance_create(x - 5 * (1-facing*2) * size , y , obj_dust_effect);
	duster.image_alpha = 0.75;
	duster.image_xscale = 0.10 * (1-facing*2) * size;
	duster.image_yscale = 0.10 * size;
      }
  }
if ( timer >= 12 && timer <= 26 )
    hspeed = (5-facing*10) * size;
if ( timer = 27 )
    hspeed = (3-facing*6) * size;
if ( timer = 35 )
    hspeed = (2-facing*4) * size;
if ( timer = 36 )
    hspeed = 0;
if ( timer > 16 && timer < 32 && movejump = 1 )
  {
    state_type = "jump";
    attack_type = "none";
    vspeed -= jump_speed * size;
    sound_play(jump_sound);
    duster = instance_create(x+size*(6-facing*12),y,obj_dust_effect);
    duster.facing = 1-facing;
    duster.image_alpha = 0.75;
    duster.image_xscale *= 0.6*size;
    duster.image_yscale *= 0.4*size;
    duster = instance_create(x-size*(6-facing*12),y,obj_dust_effect);
    duster.facing = facing;
    duster.image_alpha = 0.75;
    duster.image_xscale *= 0.6*size;
    duster.image_yscale *= 0.4*size;
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time = -1;
  }