if state_type = "stand" || state_type = "run" || state_type = "crouch" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "dsmash";
        image_speed = 0;
        sprite_index = dsmash_sprite;
        image_index= 0;
        timer = 0;
        time = 48;
        timer_speed=1;
        charge_frame = 3;
}

if (timer < time){
	state_type = "attack";
	switch (timer){
		case 0: image_index = 0; break;
		case 1: image_index = 1; break;
		case 2: image_index = 2; break;
		case 3: image_index = 3; break;
		case 4: image_index = 4; break;
		case 7: image_index = 5; 
				sound_play(attack_sound5);
                sound_play(dsmash_voice);
				create_hitbox2(18,30+facing*120,5.8,7.15,18,4,kick3,obj_spark_hit4,0.88 , 0.47 , 13.30 , 3.50,self.id,4,3); 
                hitbox2.fx_y = -5
                hitbox2.shake_type = 1
                hitbox2.shake_ampl = 0.8
                hitbox2.charge_dmg = 0.7
                hitbox2.charge_kb = 0.85
                create_hitbox(18,150-facing*100,5.8,7.15,18,4,kick3,obj_spark_hit4,0.88 , 0.47 , -14 , 3.50,self.id,4,2); 
                hitbox.fx_y = -5
                hitbox.shake_type = 1
                hitbox.shake_ampl = 0.8;
                hitbox.charge_dmg = 0.7
                hitbox.charge_kb = 0.85
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = facing; 
                duster = instance_create(x,y,obj_dust_effect);
                duster.facing = 1-facing;
				break;
		case 12: image_index = 6; break;
		case 24: image_index = 7; break;
		case 28: image_index = 8; break;
		case 31: image_index = 9; break;
		case 34: image_index = 10; break;
		case 37: image_index = 11; break;
		case 40: image_index = 12; break;
		case 43: image_index = 13; break;
		case 46 :image_index = 14; break;
		
	}
}

 if (timer >= 7){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 130)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
