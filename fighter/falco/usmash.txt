if state_type = "stand" || state_type ="run"{
        state_type = "attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_sprite;
        image_index=0;
        timer = 0;
        time = 55;
        timer_speed=1;
        charge_frame=2;
		effscale = xsize * 0.8;

}

if timer < time {
	switch (timer){
		case 0:  image_index = 0;  break;
		case 1:  image_index = 1;  break;
		case 3:  
			instance_create(x+13-facing*26,y-17,obj_spark_effect);
            sound_play(usmash_voice);
			break;
		case 4: image_index = 2;  break;
		case 6:  
			image_index = 3;
			eff = create_blur(x - 29 * (1-facing*2) * size, y - 54 * size,self.id);
			eff.sprite_index = usmash_effect_spr;
			eff.image_xscale = effscale * (1-facing*2) * size;
			eff.image_yscale = effscale * size;
			eff.image_index = 0;
			eff.image_speed = 0;
			eff.depth = -7;
			break;
		case 7:
			sound_play(attack_sound4);
			duster = instance_create(x,y,obj_dust_effect);
            duster.facing = facing; 
			break;
		case 8:  
			image_index = 4;
			eff.image_index = 1; break;
			break;
		case 9:  
			image_index = 5;  
			eff.image_index = 3;
			eff2 = create_blur(x - 29 * (1-facing*2) * size, y - 54 * size,self.id);
			eff2.sprite_index = usmash_effect_spr;
			eff2.image_xscale = effscale * (1-facing*2) * size;
			eff2.image_yscale = effscale * size;
			eff2.image_speed = 0;
			eff2.image_index = 0;
			eff2.depth = -7;
			break;
		case 10: 
			image_index = 6;  
			eff.image_index = 2; break;
			eff2.image_index = 1;
			break;
		case 11:
			eff.image_index = 4;
			break;
		case 12: 
			image_index = 7;
			eff.image_index = 5;
			eff2.image_index = 2;
			break;
		case 14: 
			eff.image_index = 6;
			break;
		case 15:
			with (eff)
			{
			instance_destroy();
			}
			break;
		case 16:
			image_index = 8;
			eff2.image_index = 3;
			break;
		case 17:
			image_index = 9;
			eff2.image_index = 4;
			break;
		case 19:
			image_index = 10;
			eff2.image_index = 5;
			break;
		case 21: 
			image_index = 11;
			eff2.image_index = 6;
			break;
		case 22:
			with (eff2)
			{
			instance_destroy();
			}
			break;
		case 23: 
			image_index = 12;
			break;
		case 30: image_index = 13; break;
		case 38: image_index = 14; break;
		case 42: image_index = 15; break;
		case 49: image_index = 16; break;
		case 52: image_index = 17; break;
	}
            if ( timer = 6 )
			{
            create_hitbox(5,130-facing*80,4,0,21,3,kick3,obj_spark_hit3,0.50 , 0.42 , 5.60 , 3.90,self.id,5,3); 
            hitbox.shake_type = 1
            hitbox.shake_ampl = 0.7
            hitbox.charge_dmg = 0
			hitbox.charge_hitlag = 1.35
			hitbox.di = -1;
            create_hitbox2(5,110-facing*40,2,0,21,3,kick3,obj_spark_hit3,0.50 , 0.42 , 1.40 , 14.40,self.id,5,3);
            hitbox2.shake_ampl = 0.7
            hitbox2.charge_dmg = 0
			hitbox2.charge_hitlag = 1.35
			hitbox2.di = -1;
            duster = instance_create(x,y,obj_dust_effect);
            duster.facing = facing; 
            }
			if ( timer = 8 )
			{
			hitbox.bkb = 2 * size;
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 13.30
			hitbox.hitbox_y = size * 20.70
			hitbox.image_xscale = size * 0.49
			hitbox.image_yscale = size * 0.65
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 2.10
			hitbox2.hitbox_y = size * 20
			hitbox2.image_xscale = size * 0.45
			hitbox2.image_yscale = size * 0.65
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			}
			if ( timer = 9 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 8.40
			hitbox.hitbox_y = size * 35.40
			hitbox.image_xscale = size * 0.68
			hitbox.image_yscale = size * 0.47
			hitbox.image_angle = ( 1 - facing * 2 ) * 316.64
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0.70
			hitbox2.hitbox_y = size * 26.30
			hitbox2.image_xscale = size * 0.66
			hitbox2.image_yscale = size * 0.46
			hitbox2.image_angle = ( 1 - facing * 2 ) * 320.04
			hitbox.direction = 220-facing*260
			}
			if ( timer = 10 )
			{
			hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -10
			hitbox.hitbox_y = size * 40
			hitbox.image_xscale = size * 0.81
			hitbox.image_yscale = size * 0.47
			hitbox.image_angle = ( 1 - facing * 2 ) * 0
			hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -4.90
			hitbox2.hitbox_y = size * 33.30
			hitbox2.image_xscale = size * 0.59
			hitbox2.image_yscale = size * 0.42
			hitbox2.image_angle = ( 1 - facing * 2 ) * 0
			}		
			if ( timer = 11 )
			{
			create_hitbox3(15,80+facing*30,5.6,6.95,21,5,kick3,obj_spark_hit3,0.56 , 0.49 , 14 , 30.50,self.id,9,3); 
            hitbox3.shake_type = 1
            hitbox3.shake_ampl = 0.7
            hitbox3.charge_dmg = 0.94
            hitbox3.charge_hitlag = 1.35
            create_hitbox4(15,80+facing*30,5.6,6.95,21,5,kick3,obj_spark_hit3,0.55 , 0.49 , 1.40 , 30.50,self.id,9,3);
            hitbox4.shake_ampl = 0.7
            hitbox4.charge_dmg = 0.94
            hitbox4.charge_hitlag = 1.35
			}
		if ( timer = 12 )
		{
		hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 0
		hitbox3.hitbox_y = size * 33.30
		hitbox3.image_xscale = size * 0.52
		hitbox3.image_yscale = size * 0.47
		hitbox3.image_angle = ( 1 - facing * 2 ) * 345.65
		hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 4.20
		hitbox4.hitbox_y = size * 43.10
		hitbox4.image_xscale = size * 0.59
		hitbox4.image_yscale = size * 0.47
		hitbox4.image_angle = ( 1 - facing * 2 ) * 343.89
		}
		if ( timer = 16 )
		{
		hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -5.60
		hitbox3.hitbox_y = size * 42.40
		hitbox3.image_xscale = size * 0.45
		hitbox3.image_yscale = size * 0.49
		hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -3.50
		hitbox4.hitbox_y = size * 31.90
		hitbox4.image_xscale = size * 0.44
		hitbox4.image_yscale = size * 0.46
		}
		if ( timer = 17 )
		{
		hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -16.10
		hitbox3.hitbox_y = size * 33.30
		hitbox3.image_xscale = size * 0.50
		hitbox3.image_yscale = size * 0.46
		hitbox3.image_angle = ( 1 - facing * 2 ) * 330.95
		hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -6.30
		hitbox4.hitbox_y = size * 25.60
		hitbox4.image_xscale = size * 0.49
		hitbox4.image_yscale = size * 0.43
		hitbox4.image_angle = ( 1 - facing * 2 ) * 330.64
		}
		if ( timer = 19 )
		{
		hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -20.30
		hitbox3.hitbox_y = size * 19.30
		hitbox3.image_xscale = size * 0.45
		hitbox3.image_yscale = size * 0.62
		hitbox4.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -11.20
		hitbox4.hitbox_y = size * 18.60
		hitbox4.image_xscale = size * 0.51
		hitbox4.image_yscale = size * 0.59
		}
}  
 if (timer >= 11){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
