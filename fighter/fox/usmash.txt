if ( state_type = "stand" || state_type = "run" )
{
  state_type = "attack";
  attack_type = "usmash";
  timer = 0;
  time = 41;
  sprite_index = usmash_sprite;
  image_speed = 0;
  image_index = 1;
  charge_frame = 3;
  slide *= 0.5
  hspeed *= 0.7
  xoff = 2;
  yoff = -23;
  effscale = 0.48;
  if hspeed > 2
  hspeed = 2
}

if ( timer < time )
{
 hspeed *= 1.02
  slide = 0
  switch ( timer )
  {
    case 2: image_index = 2; break;
    case 4: image_index = 3; break;
    case 5: image_index = 4; break;
    case 6: image_index = 5; break;
    case 7: 
      image_index = 6; 
      eff = create_blur(x,y,self.id);
      eff.sprite_index = ssmash_effect;
      eff.image_xscale = size*effscale*(1-facing*2) *-1;
      eff.image_yscale = size*effscale;
      eff.x = x + xoff*size*(1-facing*2);
      eff.y = y + yoff*size;
      eff.image_speed = 0;
      eff.image_index = 0;
      eff.alarm[0] = 40;
      eff.snap = self.id;
      eff.sprite_angle = 6;
      eff.depth = depth - 0.1;
      //eff.image_alpha = 0.85;
      break;
    case 10: 
      image_index = 7; 
      eff.image_index = 1;
      eff.visible = 1;
      break;
    case 13: 
      image_index = 8; 
      eff.image_index = 2;
      eff.image_index = 3;
      break;
    case 16: 
      image_index = 9; 
      eff.image_index = 3;
      
      break;
    case 20: 
      image_index = 10; 
      eff.image_index = 4;
      break;
    case 24: 
      image_index = 11; 
      eff.image_index = 5;
      break;
    case 26:
      eff.image_index = 6;
      break;
    case 29: 
      image_index = 12; 
      eff.image_index = 7;
      break;
    case 30:
      with(eff) instance_destroy();
      break;
    case 35: image_index = 13; break;
  }
  if ( timer = 6 )
  {
    sound_play(usmash_voice);
    instance_create(x+size*(13-facing*26),y-18*size,obj_spark_effect);
  }
  if ( timer = 7 )
  {
    sound_play(attack_sound4);
    create_hitbox(15,90,5.8,7.7,21,6,kick3,obj_spark_slash3,1.05 , 0.50 , 11.50 , 18.90,self.id,10,3);

    hitbox.shake_type = 1;
    hitbox.shake_ampl = 0.7;
    hitbox.hit_stun = 10
    duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
  }
  if ( timer = 10 )
  {
    hitbox.hitbox_x = 4.90 * (1-facing*2) * size;
    hitbox.hitbox_y = 32.20*size;
    hitbox.image_xscale = 0.70 * (1-facing*2) * size;
    hitbox.image_yscale = 1.1 * size;
  }
  if ( timer = 13 )
  {
    hitbox.damage = 13*size;
    hitbox.dir = 150-facing*120;
    hitbox.bkb = 6.5*size;
    hitbox.kbg = 4.5*size;
    hitbox.hitlag_frames = 9*size;
    hitbox.sfx = kick2;
    hitbox.gfx = obj_spark_hit3;
    hitbox.shake_type = 0;
    hitbox.shake_ampl = 0.8;
    hspeed = 0;
    hitbox.hitbox_x = -4.20 * (1-facing*2) * size;
    hitbox.hitbox_y = 27.30*size;
    hitbox.image_xscale = 0.94 * (1-facing*2) * size;
    hitbox.image_yscale = 0.75 * size;
    hitbox.image_angle = 330.26-facing*480.52;
  }
  if ( timer = 16 )
  {
    hitbox.hitbox_x = -6.30 * (1-facing*2) * size;
    hitbox.hitbox_y = 18.20*size;
    hitbox.image_xscale = 0.88 * (1-facing*2) * size;
    hitbox.image_yscale = 0.69 * size;
    hitbox.image_angle = 0;
  }
  if ( timer = 29 )
  {
    hspeed = 0;
  }
}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
{
  state_type = "stand";
  attack_type = "none";
  timer = 0;
  time = -1;
}