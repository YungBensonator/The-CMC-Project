if ( time = -1 )
  {
    state_type = "attack";
    attack_type = "bthrow";
    timer = 0;
    time = 95;
    sprite_index = usmash_sprite;
    image_speed = 0;
    image_index = 0;
    hspeed = 0;
    target.timer_speed = 0;
    target.alarm[0] = 100;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 7: image_index = 2; break;
	case 10: image_index = 3; break;
	case 12: image_index = 4; break;
	case 14: image_index = 5; break;
	case 17: image_index = 6; break;
	case 20: image_index = 7; break;
	case 25: image_index = 8; break;
	case 28: image_index = 9; break;
	case 30: sprite_index = bthrow_sprite; image_index = 0; break;
	case 33: image_index = 1; break;
	case 36: image_index = 2; break;
	case 39: image_index = 3; break;
	case 42: image_index = 4; break;
	case 45: image_index = 5; break;
	case 48: image_index = 6; break;
	case 51: image_index = 7; break;
	case 54: sprite_index = bthrow2_sprite; image_index = 0; break;
	case 57: image_index = 1; break;
	case 68: image_index = 2; break;
	case 79: image_index = 3; break;
	case 91: image_index = 4; break;
	case 96: image_index = 5; break;
	case 101: image_index = 6; break;
      }

    if ( timer = 20 )
      {
	sound_play(rubyswing3);
	if (random(3) == 1){ 

	sound_play(choose(attack_voice4,attack_voice5,attack_voice6));
	}
	create_hitbox(10,80+facing*20,6,0,19,3,slash3,obj_spark_slash3,0.8,0.5,20,0,self.id,3,2);
	hitbox.di = 0;
	hitbox.weight_kb = 1;
	hitbox.hit_stun = 99999;
	duster = instance_create(x+40*(1-facing*2),y,obj_dust_effect);
	duster.facing = 1-facing;
	usmash_eff = instance_create(x+30*(1-facing*2),y,obj_spark)
	usmash_eff.sprite_index = usmash_fx
	usmash_eff.image_xscale = 0.08*(1-facing*2)*size;
	usmash_eff.image_yscale = 0.08*size;
	usmash_eff.image_speed = 0
	usmash_eff.image_alpha = 1
	usmash_eff.depth = depth - 0.1
	usmash_eff.snap = self.id
      }
	if timer >= 22 {
		usmash_eff.image_alpha -= 0.2;
	}
	if timer = 54 {
	create_projectile(7,200+facing*140,4,4,19,30,slash3,obj_spark_slash3,0.8,0.5,20,0,self.id,4,no_script);
	proj.x = target.x
	proj.y = target.y-5*size
	sound_play(rubyswing3);
	sound_play(choose(attack_voice4,attack_voice5,attack_voice6));
	}
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
	facing = 1 - facing;
  }