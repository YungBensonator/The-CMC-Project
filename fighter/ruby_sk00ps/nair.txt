if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "nair";
    timer = 0;
    time = 34;
    sprite_index = nair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.4;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 6: image_index = 2; break;
	case 10: image_index = 3; eff = gfx_ef_jab( 15 * (1-facing*2) * size , -0 * size , 0.2); eff.image_speed = 1.2; eff.snap = self.id; break;
	case 14: image_index = 4; break;
	case 18: image_index = 5; break;
	case 22: image_index = 6; eff2 = gfx_ef_jab( 12 * (1-facing*2) * size , 0 * size , 0.2); eff2.image_speed = 1.2; eff.snap = self.id; break;
	case 26: image_index = 7; break;
	case 30: image_index = 8; break;
      }
	eff.x = x+15 * (1-facing*2) * size
	eff.y = y-0
	eff2.x = x+12 * (1-facing*2) * size
	eff2.y = y-0
    if ( timer = 10 )
      {
	sound_play(choose(attack_voice1,attack_voice2,attack_voice3));
	sound_play(attacksnd1);
	create_hitbox(6,70+facing*40,3,0,15,3,kick2,self.id_hit3,0.4,1,9,10,self.id,4,2);
	hitbox.hit_stun = 4;
	hitbox.di = 0.1;
      }
    if ( timer = 22 )
      {
	sound_play(attacksnd1);
	create_hitbox(6,70+facing*40,3,5,15,6,kick3,self.id_hit3,0.4,1,9,10,self.id,4,2);
	hitbox.hit_stun = 1;
      }

    if ( air = 0 )
      {
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 12;
	sprite_index = land_sprite;
      }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	if falltemp = 1 {
	state_type = "fall"
	}
	if falltemp = 0 {
    state_type = "jump";
	}
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 4;
	image_speed = 0;
    timer = 0;
    time = -1;
  }