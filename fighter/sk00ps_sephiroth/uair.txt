if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "uair";
    timer = 0;
    time = 58;
    sprite_index = uair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.1;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 16: image_index = 1; break;
	case 17: image_index = 2; break;
	case 18: image_index = 3; break;
	case 19: image_index = 4; break;
	case 28: image_index = 5; break;
	case 31: image_index = 6; break;
      }
	switch (timer){
      case 0: eff = create_sword_trail(self.id, 9, 30, spread_texture); eff.index = 2; break;
	  case 16: eff.index = 3; break;
	  case 17: eff.index = 4; break;
	  case 18: eff.index = 5; break;
	  case 19: eff.index = 6; break;
	  case 20: eff.end_decay = 0.33; break;
      case 21: eff.end_decay = 0.66; break;
      case 22: eff.end_decay = 1; break;
      case 23: eff.end_decay = 1.33; break;
      case 24: eff.end_decay = 1.66; break;
      case 25: eff.end_decay = 2; break;
      case 26: eff.end_decay = 2.33; break;
      case 27: eff.end_decay = 2.66; break
      case 28:
        with (eff){
          instance_destroy();
        }
        break;
    }
	if timer = 16 {
		sound_play(sephirothswing3);
	play_attack_voice();
	create_hitbox(11,80+facing*20,7,3,10,5,slash3,obj_spark_slash2,1.44 , 2.01 , -31.80 , 48,self.id,6,3);
	}
	if timer = 18 {
	hitbox.hitbox_x = (10.20-facing*20.40)*size;
	hitbox.hitbox_y = 56.4*size;
	}
	if timer = 20 {
	hitbox.hitbox_x = (35.40-facing*70.80)*size;
	hitbox.hitbox_y = 28.8*size;
		
	}
    if ( air = 0 )
      {
	dontrepeat = 0;
	image_angle = 0;
	dontrepeat = 0;
	state_type = "land";
	attack_type = "none";
	timer = 0;
	time = 20;
	sprite_index = land_sprite;
	shakex = 0;
	shakey = 0;
      }
  }
if (timer >= 16){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.air > 0){
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 120) || (target.weight > .3 && target.percent > 135)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
    state_type = "jump";
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 4;
	image_speed = 0;
    timer = 0;
    time = -1;
  }