if time = -1 {
hspeed = 0;
state_type = "air_attack";
attack_type = "fthrow";
image_speed = 0;
sprite_index = fthrow_sprite;
image_index=0;
timer = 0;
time = 50;
timer_speed=1;

hspeed=8*(1-facing*2)
	sound_play(swingsnd2);
	duster = instance_create(x-20*(1-facing*2),y,obj_dust_effect);
	duster.image_xscale = .05*(1-facing*2)
	duster.image_yscale = .05;

target.timer_speed = 0;
target.alarm[0] = 47
	
	weaponappearvfx2 = create_spark ( 0 , 0 , weaponreappearvfx_sprite2 , .5 , .2 , .2 );
	weaponappearvfx2.x = virtuousdignity.x
	weaponappearvfx2.y = virtuousdignity.y-24
	weaponappearvfx2.owner = self.id;
	weaponappearvfx2.keepmain = self.keepmain;
	
	if instance_exists(virtuousdignity) with (virtuousdignity) instance_destroy();
	temp_no_hurtbox = 1
}
if timer < time {
	 switch (timer)
	 {
		case 3: image_index = 1; break;
		case 6: image_index = 2; break;
		case 9: image_index = 3; break;
		case 12: image_index = 4; break;
		case 15: image_index = 5; break;
		case 18: image_index = 6; break;
		case 21: image_index = 7; break;
		case 24: image_index = 0; break;
		case 27: image_index = 1; break;
		case 30: image_index = 2; break;
		case 33: image_index = 3; break;
		case 36: image_index = 4; break;
		case 39: image_index = 5; break;
		case 42: image_index = 6; break;
		case 45: image_index = 7; break;
	 }
	 
	if timer = 3
	{
	fthrowvfx = create_spark ( abs(place_x(161)),-place_y(86) , fthrow_spritevfx , 0 , .4*(1-facing*2) , .4 );
	fthrowvfx.snap = self.id;
	fthrowvfx.owner = self.id;
	fthrowvfx.keepmain = self.keepmain;
	fthrowvfx.script = char_custom10;
	fthrowvfx.loop = 1
	}
	
    switch ( timer )
      {
	case 6: fthrowvfx.image_index = 1; break;
	case 9: fthrowvfx.image_index = 2; break;
	case 12: fthrowvfx.image_index = 3; break;
	case 15: fthrowvfx.image_index = 4; break;
	case 18: fthrowvfx.image_index = 5; break;
	case 21: fthrowvfx.image_index = 6; break;
	case 24: fthrowvfx.image_index = 3; break;
	case 27: fthrowvfx.image_index = 0; break;
	case 30: fthrowvfx.image_index = 1; break;
	case 33: fthrowvfx.image_index = 2; break;
	case 36: fthrowvfx.image_index = 3; break;
	case 39: fthrowvfx.image_index = 4; break;
	case 42: fthrowvfx.image_index = 5; break;
	case 45: fthrowvfx.image_index = 6; break;
	case 48: with (fthrowvfx) instance_destroy(); break;
      }
	
	
	hspeed*=.92
	
	if timer < 42
		{
		gravity_lock = 1
		vspeed = 0.1
		}
	
	if timer = 3
	{
	create_hitbox(.5,angle_correct(25),5,6,16,8,twob_slashhs3,obj_spark_slash3,1.9,1.9,abs(place_x(151)),-place_y(86),self.id,3,5);
	hitbox.image_angle = angle_correct(0)
	hitbox.charge_dmg = 0
	hitbox.charge_kb = 0
	hitbox.di = 0
	hitbox.sdi = 0
	}
	
	if timer >= 6 and timer < 35 and (timer) mod 3 = 0
	{
	if timer mod 6 = 0
	sound_play(swingsnd2);
	create_hitbox(1,angle_correct(25),5,6,4,2,twob_slashhs2,obj_spark_slash2,1.9,1.9,abs(place_x(151)),-place_y(86),self.id,3,5);
	hitbox.image_angle = angle_correct(0)
	hitbox.charge_dmg = 0
	hitbox.charge_kb = 0
	hitbox.di = 0
	hitbox.sdi = 0
	}
	  
if timer = 36
	{
	if timer mod 6 = 0
	sound_play(swingsnd2);
	create_hitbox(2,angle_correct(25),5,5.5,4,2,twob_slashhs2,obj_spark_slash2,1.9,1.9,abs(place_x(151)),-place_y(86),self.id,3,5);
	hitbox.image_angle = angle_correct(0)
	}
if timer >= 3 && timer < 36 && attack_success{
	            target.direction = point_direction(target.x, target.y, x+ 10 * size * (1-facing*2),y)

}	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
}


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
dignityreappeartemp = 1
    attack_type = "none"
	if air = 0
    state_type = "stand"
    else
	state_type = "jump"	
    timer = 0
    time =-1
    }
        
