fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
    ubtemp += 1;
    if ubtemp > 1{
    break;
	}
	timer = 0;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = upb_sprite;
    image_index=0;
    time = 45;
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
	 air_move = 1
		
		if air = 0
		{
		hspeed = 0
		}
	
	weaponappearvfx2 = create_spark ( 0 , 0 , weaponreappearvfx_sprite2 , .5 , .2 , .2 );
	weaponappearvfx2.x = virtuouscontract.x
	weaponappearvfx2.y = virtuouscontract.y-15
	weaponappearvfx2.owner = self.id;
	weaponappearvfx2.keepmain = self.keepmain;
	
	if instance_exists(virtuouscontract) with (virtuouscontract) instance_destroy();
	temp_no_hurtbox = 1
}

if timer < time {
	state_type = "air_attack"
    switch ( timer )
      {
	case 5: image_index = 1; break;
	case 25: image_index = 2; break;
	case 28: image_index = 3; break;
      }
		
	if timer >= 5
		{
		force_edge_grab = 1
		}
		
	if timer = 5
	{
	vspeed = -9.85;
	upbed = 1;
	sound_play(jump_sound);
		
		if air = 0
		{
		duster = instance_create(x+7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale = -.05*(1-facing*2)
		duster.image_yscale = .05;
		
		duster = instance_create(x-7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale = .05*(1-facing*2)
		duster.image_yscale = .05;
		}	
		else
		{
		spark = instance_create(x*size,y-3*size,obj_spark_shockwave);
		spark.image_xscale *= 0.5*size;
		spark.image_yscale *= 0.1*size;
		spark2 = instance_create(x*size,y-3*size,obj_spark_shockwave);
		spark2.image_xscale *= 0.7*size;
		spark2.image_yscale *= 0.2*size;
		}
	
	upbvfx = create_spark ( abs(place_x(99)),-place_y(23) , upb_spritevfx , 1/3 , .4*(1-facing*2) , .4 );
	upbvfx.snap = self.id;
	upbvfx.owner = self.id;
	upbvfx.keepmain = self.keepmain;
	upbvfx.script = char_custom10;
	
	sound_play(jab1_sound);
	sound_play(jab_voice3);
	create_hitbox(8,angle_correct(60),6.5,0,16,10,twob_slashhs3,obj_spark_slash3,1.2,2.1,abs(place_x(130)),-place_y(95),self.id,30,3);
	hitbox.image_angle = angle_correct(0)
	hitbox.di = -1
	hitbox.hitstun = 8
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/

if special > 0 && ( moveleft = 1 || moveright = 1 )
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    char_sideb();
	  }


if special > 0 && movedown = 1 && moveup != 1 && moveleft != 1 && moveright != 1
	  {
	    state_type = "jump";
	    attack_type = "none";
	    timer = 0;
	    time = -1;
		if ( smash_power >= global.gs_fs_charge )
		interrupt = 1;
		else
	    char_dair();
	  }
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0
        state_type = "jump";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
