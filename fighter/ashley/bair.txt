if state_type = "jump" {
	sprite_index = bair_sprite;
	image_index = 0;
	image_speed = 0;
	state_type = "air_attack";
	attack_type = "bair";
	timer = 0;
	time = 40;
	}
if timer < time {
	state_type = "air_attack";
if timer < time {
switch ( timer )
      {


case 1: image_index = 1; break;
case 2: image_index = 2; break;
case 3: image_index = 3; break;
case 5: image_index = 4; break;
case 7: image_index = 5; break;
case 9: image_index = 6; break;
case 10: image_index = 7; break;
case 11: image_index = 8; break;
case 12: image_index = 9; break;
case 15: image_index = 10; break;
case 18: image_index = 11; break;
case 21: image_index = 12; break;
case 24: image_index = 13; break;
case 27: image_index = 14; break;
case 30: image_index = 15; break;
case 33: image_index = 16; break;
case 35: image_index = 17; break;
case 38: image_index = 18; break;


	}
	if timer = 4 {
                play_attack_voice();
		sound_play ( swing_sound3 );
		}

	if timer = 12 {
        sound_play ( explode1 );
  		//explode=create_projectile ( 13 , 150-facing*120 , 5.8 , 6.65,14,8800 , fire2,obj_spark_fire1 , 0.8 , 0.8 , -30 , 16 , self.id , 7 , 2 );
		
		create_hitbox(13,150-facing*120,5.8,6.65,14,7,fire2,obj_spark_fire1,0.7,0.7,-27,16,self.id,7,2);
		create_hitbox2(8,140+facing*-100,4.8,5.65,5,5,kick2,obj_spark_hit2,0.9,0.5,-16,16,self.id,7,2);
		hitbox2.hit_stun=4
		explodespark = instance_create(x - 27 * (1-facing*2) *size,y - 16 *size,obj_spark)
		explodespark.sprite_index = global.explosion_spark;
		explodespark.image_xscale = 0.32 * size;
        	explodespark.image_yscale = 0.32 * size;
		explodespark.snap = self.id;
		}
	if air = 0 {	
		with explodespark instance_destroy()
                state_type="land";
                attack_type="none";
				dontrepeat = 0;
                sprite_index = land_sprite;
                timer=0;
                time=14;
		}

	}
}


      if (timer >= 12){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && obj_score_control.stocks[target.number-1] == 1{
				if ((target.weight <= .22 && target.percent > 125) || (target.weight > .22 && target.weight < .3 && target.percent > 140) || (target.weight > .3 && target.percent > 155)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
	{
	dontrepeat = 0;
	attack_type = "none";
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 1;
	image_speed = 0;
    timer = 0;
    time =-1;
	}