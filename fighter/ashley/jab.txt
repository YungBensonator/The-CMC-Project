if state_type = "stand" {
	hspeed = 0;
	sprite_index = jab_sprite;
	image_speed = 0;
	image_index = 0;
	state_type = "attack";
	attack_type = "jab";
	timer = 0;
	time = 25;
	combo = 0;
	}
if timer < time {
switch ( timer )
  {
//first swing
  case 3: 
  	image_index=1; 
	sword_trail = create_sword_trail2(self.id,0,2,10,5,30,sword_texture);
	sword_trail.visible_frames = 3;
	sword_trail.per_frame_radius = true;
	sword_trail.tip_radius[2] = -32;
	sword_trail.base_radius[2] = -14;
	sword_trail.tip_radius[1] = -15;
	sword_trail.base_radius[1] = -17;
	sword_trail.tip_radius[0] = 10;
	sword_trail.base_radius[0] = 5;
	sword_trail.index = 1;
	sword_trail.hardness = 0.75;
	sword_trail.glow = 0.33;
	with(sword_trail) interpolate_sword_trail();
  	break;
  case 5: 
  	image_index=2; 
	image_xscale *= 1.1; 
	image_yscale *= 1.1;
	sword_trail.index = 2;
	sword_trail.depth = depth + 0.1;
	break;
  case 6: sword_trail.visible_frames = 1; break;
  case 7: image_index=3; with (sword_trail) instance_destroy(); break;


 //second swing
  case 100: image_index=4; break;
  case 103: image_index=5; break;
  case 106: 
  	image_index=6; 
	image_xscale *= 1.1; 
	image_yscale *= 1.1; 
	sword_trail = create_sword_trail2(self.id,5,8,10,5,30,sword_texture);
	sword_trail.visible_frames = 1;
	sword_trail.per_frame_radius = true;
	sword_trail.tip_radius[3] = 3;
	sword_trail.base_radius[3] = 1;
	sword_trail.tip_radius[2] = 33;
	sword_trail.base_radius[2] = 11;
	sword_trail.tip_radius[1] = 18;
	sword_trail.base_radius[1] = 11;
	sword_trail.tip_radius[0] = 10;
	sword_trail.base_radius[0] = 5;
	sword_trail.index = 1;
	sword_trail.depth = depth + 0.1;
	sword_trail.hardness = 0.75;
	sword_trail.glow = 0.33;
	with(sword_trail) interpolate_sword_trail();
	break;
  case 109: 
  	image_index=7;
	sword_trail.index = 2;
	sword_trail.depth = depth - 0.1;
	break;
  case 112: 
  	image_index=8; 
	sword_trail.index = 3;
	break;
  case 113: with (sword_trail) instance_destroy(); break;
  case 115: image_index=9; break;

//rapid jab
  case 200: image_index=10; break;
  case 202: image_index=11; break;
  case 205: image_index=12; break;
  case 207: image_index=13; break;
  case 209: image_index=14; break;
  case 211: image_index=15; break;
  case 213: image_index=16; break;
  case 215: image_index=17; break;
  case 217: image_index=18; break;
  case 219: image_index=19; break;
  case 221: image_index=12; break;
  
  case 223: image_index=19; break;
  case 228: image_index=21; break;
  case 233: image_xscale *= 1.1; image_yscale *= 1.1; break;
  case 238: image_index=5; break;
  case 239: image_index=22; break;
  case 240: image_index=23; break;
  case 264: image_index=11; break;
  case 266: image_index=10; break;

  }

  if (timer > 200) {		
  	if (instance_exists(sword_trail)){
		with (sword_trail) instance_destroy();
	}
  }
//first swing
	if timer = 3 {
        sound_play ( swing_sound1 );
		create_hitbox(2,85+facing*10,0.5,0,4,3,punch1,obj_spark_hit1,0.4,0.4,13,16,self.id,3,1);
		hitbox.bkb = 1;
		create_hitbox2(2,85+facing*10,0.5,0,4,3,punch1,obj_spark_hit1,0.3,0.3,8,9,self.id,3,1);
		hitbox2.bkb = 1;

		}
		
	if ( timer >= 5 && timer <= 20 && attacking = 1)
	  {
  	if (instance_exists(sword_trail))
		{
		with (sword_trail) instance_destroy();
		}
	  timer = 100;
	  time = 118;
	  }
//second swing 
if timer = 106 {
        sound_play ( swing_sound2 );
		create_hitbox(2,85+facing*10,0.1,0,4,3,punch1,obj_spark_hit1,0.4,0.4,16,15,self.id,3,1);
		hitbox.bkb = 1;
		create_hitbox2(2,85+facing*10,0.1,0,4,3,punch1,obj_spark_hit1,0.3,0.3,8,11,self.id,3,1);
		hitbox2.bkb = 1;
		}
	if ( timer >= 109 && timer <= 120 && attacking = 1)
	  {
  	if (instance_exists(sword_trail))
		{
		with (sword_trail) instance_destroy();
		}
	  timer = 200;
	  time = 270;
	  }
if attack_success and timer <= 239  and timer >= 3{
        target.direction = point_direction(target.x, target.y, x+ 15 * size * (1-facing*2), y)
    }
//rapid swing

	if timer > 100 && timer < 104 {
	shakex += 1-facing*2
	}
	if timer > 103 && timer < 106 {
	shakex += 2-facing*4
	}
	if timer > 116 && timer < 120 {
	shakex -= 1-facing*2
	}
	if timer > 119 && timer < 122 {
	shakex -= 2-facing*4
	}

	if timer = 207 ||  timer = 211  || timer = 215 || timer = 219 {
        sound_play ( swingsnd1 );
		create_hitbox(1,79+2*facing,0.7,0,5,3,kick1,obj_spark_hit1,0.6,0.6,21,13,self.id,2,1);
		hitbox.bkb = 2.0;
		gfx_ef_whirl2 ( x + 14 * (1-facing*2) * size , y - 14 * size, 0.5 * size, -20 * (1-facing*2) * size );
		//hitbox.di = 0.5;
		hitbox.hit_stun = 11;
		}
	if ( timer >= 205 && timer <= 221 && attacking = 1)
	{
	combo = 1;
	}
	if ( timer = 221 && combo = 1)
	{
	timer = 205;
	combo = 0;
	}
	if ( timer >= 213 && timer <= 221 && attacking = 0)
	{
	timer = 224;
	}
	if ( timer = 240 ) 
		{
		play_attack_voice();
        sound_play ( explode1 );
		create_hitbox(7,25+facing*130,6.5,4.5,13,7,fire3,obj_spark_fire1,0.60,0.60,33,10,self.id,4,1);
		spark = instance_create(x + 33 * (1-facing*2) *size,y - 10 *size,obj_spark_explode1)
		spark.image_xscale = 0.45 * size;
        spark.image_yscale = 0.45 * size;
		}
	if timer > 264 && timer < 268 {
	shakex -= 1-facing*2
	}
	if timer > 267 && timer < 270 {
	shakex -= 2-facing*4
	}
}
		
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    shakex = 0;
    timer = 0;
    time =-1;
    }
