if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "dthrow";
image_speed = 0;
sprite_index = dthrow_sprite;
image_index=0;
timer = 0;
time = 67;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 250
}
if timer < time {
switch ( timer )
  {
  case 2: image_index=1;  break;
  case 4: image_index=2;  break;
  case 5: image_index=3;  break;
  case 6: image_index=4;  break;
  case 7: image_index=5;  break;
  case 9: image_index=6;  break;
  case 11: image_index=7;  break;
  case 13: image_index=8;  break;
  case 15: image_index=9;  break;
  case 17: image_index=10;  break;
  case 19: image_index=11;  break;
  case 23: image_index=12;  break;
  case 28: image_index=13;  break;
  case 33: image_index=14;  break;
  case 38: image_index=15;  break;
  case 43: image_index=16;  break;
  case 48: image_index=17;  break;
  case 53: image_index=18;  break;
  case 58: image_index=19;  break;
  case 62: image_index=20;  break;


  }
    state_type = "attack";
    if ( timer == 1 ) sound_play ( choose ( laugh_voice1 , laugh_voice2 , laugh_voice3 ) );
    if timer = 6 {
	target.x = x+4 * (1-facing*2) * size;
	target.y = y;
	}
    if timer > 10 && timer < 48 {
	target.visible = 0;
    target.state_type = "flinch"
        target.intangible = 0;
	target.alarm[2]=-1; 
	target.timer_speed=1; 
	target.timer=0; 
	target.time=60;
	}
if timer >= 13 && timer <= 48 && timer mod 2 = 0
{
wee=irandom_range(-25,-6)
gee=irandom_range(25,35)
fire=create_projectile ( 1 , 361 , 1 , 1 , 4 , 6 , fire1,obj_spark_fire1 , 0.1 , 0.1 , wee , gee , self.id , 12 , 5 );
fire.hit=2
fire.depth=-3
fire.sprite_index=dthrow_fire_sprite;
fire.image_speed=0.6
}
    if timer = 16 || timer = 19  || timer = 22  || timer = 25  || timer = 28  || timer = 31  || timer = 34 || timer = 37  || timer = 40  || timer = 43 {

    create_projectile ( 1 , 361 , 1 , 1 , 4 , 6 , fire1,obj_spark_fire1 , 0.2 , 0.2 , 2 , 4 , self.id , 1 , 5 );
	hitbox.di = -1
	target.gethit = 0
proj.hit_stun=50
	}

    if timer = 48 {
        create_throw_box(6,85+facing*10,6,6.8,1,1,fire1,obj_spark_fire1,0.8,0.8,2,4,self.id,1)
		target.visible = 1;
        hitbox.shake_ampl = 0.4
         }
}
      if (timer >= 48){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && obj_score_control.stocks[target.number-1] == 1{
				if ((target.weight <= .22 && target.percent > 135) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 165)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
	target.visible = 1;
    timer = 0;
    time =-1;
}
        