if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = bthrow_sprite;
image_index=0;
timer = 0;
time = 87;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 300
}
if timer < time {
switch ( timer )
  {
  case 2: image_index=1;  break;
  case 5: image_index=2;  break;
  case 9: image_index=3;  break;
  case 11: image_index=4;  break;
  case 14: image_index=5;  break;
  case 17: image_index=6;  break;
  case 20: image_index=7;  break;
  case 23: image_index=8;  break;
  case 26: image_index=9;  break;
  case 29: image_index=10;  break;
  case 33: image_index=11;  break;
  case 37: image_index=12;  break;
  case 41: image_index=13;  break;
  case 43: image_index=14;  break;
  case 47: image_index=15;  break;
  case 51: image_index=16;  break;
  case 55: image_index=17;  break;
  case 59: image_index=18;  break;
  case 63: image_index=19;  break;
  case 67: image_index=20;  break;
  case 71: image_index=21;  break;
  case 74: image_index=22;  break;
  case 77: image_index=23;  break;
  case 80: image_index=24;  break;
  case 84: sprite_index=stand_sprite; image_index=0;  break;

 


  }
    state_type = "attack";
    if ( timer == 1 ) sound_play ( choose ( laugh_voice1 , laugh_voice2 , laugh_voice3 ) );
//////Hold in place
target.depth=4
    if timer = 0 {
	target.depth=4
	target.x = x+20 * (1-facing*2) * size;
	target.y = y-3 * size;
}
if timer = 37 {
	target.x = x+10 * (1-facing*2) * size;
	target.y = y-15 * size;
	}
if timer = 41 && timer < 43 {
	target.x = x-8 * (1-facing*2) * size;
	target.y = y-15 * size;
	target.sprite_angle = 180;
	}
if timer = 43 {
	target.x = x-15 * (1-facing*2) * size;
	target.y = y * size;
	target.sprite_angle = 180;
	}
    if timer = 29 {
        create_projectile ( 3 , 361 , 1 , 1 , 4 , 6 , -1 , -1 , 0.4 , 0.4 , 15 , 15 , self.id , 2 , 0 );
	target.gethit = 0;
	proj.hit_stun=10
	target.sprite_angle = 180;
        instance_create(x+20-facing*40,y-20,obj_spark_effect); }
    if timer = 44 {
        create_throw_box(12,150+-120*facing,6.25,6.15,1,14,punch3,obj_spark_effect,0.3,0.3,-15,5,self.id,1)
	hitbox.di = 0
        hitbox.shake_kb = 0.5
        hitbox.shake_ampl = 1.8
	hitbox.hit_stun = 5;



spark=instance_create(x-15 * (1-facing*2),y,obj_down_impact);
spark.image_index = 5;
spark.image_xscale = 0.9 * (1-facing*2) * size
spark.image_yscale = 0.9 * size

	  shaker = instance_create(x,y,obj_shakescreen2);
          shaker.ampl = 6;
          shaker.xampl = 0;
          shaker.time = 12;
    	}
   
}

      if (timer >= 44){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && obj_score_control.stocks[target.number-1] == 1 {
				if ((target.weight <= .22 && target.percent > 135) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 165)){
			    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        