if ( ai_timer >= time - 2 )
  ai_state = "idle";
if ( air = 0 )
{
  if ( collision_rectangle ( x - 13 , y - 13 , x + 10 , y , item , 0 , 0 ) && hold_item = 0 && instance_nearest( x , y - 5 , item ).holder = 0 && instance_nearest( x , y - 5 , item ).grab > 0 )
  {
    attack_type = "none";
    state_type = "land";
    sprite_index = land_sprite;
    timer = 0;
    time = 3;
    hold_item = 1;
    held_item = instance_nearest ( x , y - 5 , item );
    held_item.holder = id;
    held_item.state_type = "held";
    sound_play ( itemgetsnd );
    attacking = 0;
    exit;
  }
  else
  {
    if ( distance_to_object ( enemy ) < 24 )
    {
      if ( smash_power >= global.gs_fs_charge && enemy.air = 0 )
      {
        if ( ( facing = 1 && enemy.x > x ) || ( facing = 0 && enemy.x < x ) )
          facing = 1 - facing;
        attack_type = "final_smash";
      }
      else
      {
        if ( enemy.air = 0 )
        {
          if ( held_item = -1 )
          {
            if ( enemy.percent < 80 )
              attack_type = choose ( "jab" , "jab" , "utilt" , "dtilt" , "stilt" , "dtilt" , "grab" , "grab" , "grab" , "dsmash" , "jab" , "dtilt" , "downb" , "downb" , "utilt" );
            else
              attack_type = choose ( "dsmash" , "stilt" , "utilt" , "stilt" , "dsmash" , "usmash" , "dtilt" , "downb" , "grab" , "usmash" , "grab" , "usmash" , "grab" , "dsmash" , "ssmash" );
          }
          else
            attack_type = "itemfthrow";
        }
        else
        {
          if ( held_item = -1 )
          {
            if ( enemy.y > y - size * 9 )
              attack_type = choose ( "usmash" , "upb" , "utilt" , "utilt" , "dsmash" , "downb" , "b" , "sideb" , "usmash" , "sideb" , "utilt" , "utilt" , "dsmash" , "ssmash" , "usmash" );
            else
              attack_type = choose ( "usmash" , "upb" , "upb" , "utilt" , "upb" , "upb" , "usmash" );
          }
          else
            attack_type = choose ( "itemfthrow" , "itemuthrow" );
        }
        exit;
      }
    }
    else
    {
      if ( held_item = -1 )
      {
        if ( distance_to_object ( enemy ) < 48 && smash_power >= global.gs_fs_charge && abs ( enemy.y - self.y ) < 36 )
        {
          if ( ( facing = 1 && enemy.x > x ) || ( facing = 0 && enemy.x < x ) )
            facing = 1 - facing;
          attack_type = "final_smash";
        }
        else
        {
          if ( enemy.y > y - size * 9 )
            attack_type = choose ( "sideb" , "sideb" , "b" , "ssmash" , "sideb" , "ssmash" , "b" , "sideb" , "downb" , "ssmash" , "ssmash" , "ssmash" , "sideb" , "downb" , "b" );
          else if ( distance_to_object ( enemy ) < 48 )
            attack_type = choose ( "usmash" , "upb" , "upb" , "utilt" , "upb" , "upb" , "usmash" );
        }
      }
      else
        attack_type = "itemfthrow";
      exit;
    }
  }
}
else if ( offstage && enemy.y > y - 5 )
  attack_type = choose ( "zair" , "nair" , "zair" , "dair" , "zair" , "nair" , "zair" );
else
{
  if ( held_item = -1 )
  {
    if ( distance_to_object ( enemy ) < 24 )
    {
      if ( smash_power >= global.gs_fs_charge && enemy.air = 0 )
      {
        if ( ( facing = 1 && enemy.x > x ) || ( facing = 0 && enemy.x < x ) )
          facing = 1 - facing;
        attack_type = "final_smash";
      }
      else
      {
        if ( enemy.y > y - 2 )
          attack_type = choose ( "zair" , "zair" , "nair" , "nair" , "nair" , "dair" , "downb" , "nair" , "dair" , "nair" , "nair" , "uair" , "dair" , "downb" , "dair" );
        else if ( enemy.y < y - 14 )
          attack_type = choose ( "uair" , "upb" , "uair" , "upb" , "zair" , "upb" , "uair" , "uair" , "zair" , "upb" , "nair" , "uair" , "uair" , "upb" , "zair" );
        else
          attack_type = choose ( "uair" , "nair" , "nair" , "downb" , "zair" , "uair" , "zair" , "nair" , "uair" , "uair" , "zair" , "zair" , "downb" , "uair" , "uair" );
      }
    }
    else
    {
      if ( ( facing = 0 && enemy.x > x ) || ( facing = 1 && enemy.x <= x ) )
      {
        if ( enemy.y > y - 2 )
          attack_type = choose ( "downb" , "downb" , "dair" , "nair" , "fair" , "nair" , "fair" , "fair" , "nair" , "zair" , "downb" , "zair" , "fair" , "fair" , "dair" )
        else if ( enemy.y < y - 14 )
          attack_type = choose ( "uair" , "upb" , "upb" , "uair" , "upb" , "upb" , "uair" , "zair" , "upb" , "zair" , "upb" , "upb" , "uair" , "uair" , "zair" )
        else
          attack_type = choose ( "sideb" , "fair" , "nair" , "sideb" , "fair" , "fair" , "fair" , "nair" , "fair" , "zair" , "downb" , "sideb" , "fair" , "sideb" , "downb" );
      }
      else
        attack_type = choose ( "uair", "bair", "bair" , "uair" , "nair" , "nair" , "bair" , "nair" , "nair" , "uair" , "nair" , "uair" , "bair" , "bair" , "nair" );
    }
  }
  else
    attack_type = "itemfthrow";
  exit;
}