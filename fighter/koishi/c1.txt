fast_fall = 0;
fast_fall_temp = 0;
if ( state_type = "run" )
{
  hspeed = 0;
  state_type = "air_attack";
  attack_type = "c1";
  sprite_index = jab_sprite;
  image_index = 0;
  image_speed = 0;
  timer = 0;
  time = 26;
  timer_speed = 1;
  air_move = 0;
}
if ( timer < time )
{
  switch ( timer ) 
  {
    case 6: image_index = 1; break;
    case 10: image_index = 2; break;
    case 20: image_index = 3; break;
  }
  state_type = "air_attack";
  if ( timer = 4 )
  {
    sound_play ( swing_sound3 );
    if ( random ( 4 ) < 1 )
      play_attack_voice();
  }
  if ( timer = 6 )
  {
    create_hitbox ( 9 , angle_correct ( 35 ) , 5 , 5.6 , 10 , 6 , koishihit2 , obj_spark_hit2 , 0.8 , 0.7 , 9 , 17 , self.id , 10 , 2 );
    hspeed = 2.6 * ( 1 - facing * 2 ) * size;
    vspeed = -2.1 * size;
    eff = gfx_ef_jab ( place_x ( 76 ) , place_y ( 42 ) , 0.2 * size );
    eff.image_speed = 2;
    duster = instance_create ( x , y , obj_dust_effect );
    duster.image_xscale *= 0.7 * size;
    duster.image_yscale *= 0.7 * size;
    duster.facing = facing;
  }
  if ( timer = 11 )
  {
    hitbox.bkb = round ( 4 * size );
    hitbox.kbg = round ( 5 * size );
    hitbox.dir = angle_correct ( 20 );
    hitbox.damage = round ( 6 * size );
  }
  if ( timer >= 13 && air = 0 )
  {
    state_type = "land";
    if ( instance_exists ( hitbox ) )
      with ( hitbox ) instance_destroy();
    hspeed = 0;
    attack_type = "none";
    sprite_index = land_sprite;
    image_index = 0;
    image_speed = 0;
    timer = 0;
    time = 8;
  }
}
if ( timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch" )
{
  if ( air > 0 )
  {
    state_type = "jump";
    sprite_index = jump_sprite;
    image_index = 1;
  }
  else
    state_type = "stand";
  attack_type = "none";
  timer = 0;
  time = -1;
}