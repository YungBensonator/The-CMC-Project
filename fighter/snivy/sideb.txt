 if (sidebrecover > 0){
	exit;
  }
  fast_fall = 0;
fast_fall_temp = 0;
if ( state_type == "run" || state_type == "stand" || state_type == "jump" )
  {
 
  attacking = 0;
  special = 0;
  combo_failure = 0;
  grounded = 0
  attack_type = "sideb";
  state_type = "air_attack";
  image_speed = 0;
  sprite_index = fall_sprite;
  //instance_create ( x - 5 + facing * 10 , y - 20 * size , obj_spark_effect );
  image_index = 0;
  timer = 4;
  time = 165;
  timer_speed = 1;
  }
if timer > 38
force_edge_grab = 1
unsnap = 0;

if hitbox.hit = 1 {
grounded = 1
}

if ( timer >= 1 && timer < 12 )
  {
  hspeed = 0;
  vspeed = 0;
  unsnap = 1;
  
  }

if ( timer >= 64 && timer < 79 )
  {
  hspeed = 0;
  vspeed = 0;
  unsnap = 1;
  }

if ( timer >= 128 && timer < 146 )
  {
  hspeed = 0;
  vspeed = 0;
  unsnap = 1;
  }

if ( timer >= 12 && timer < 32 )
  {
  sprite_index = fall_sprite;
  if ( air == 0 )
    sprite_index = land_sprite;
  }

if ( timer >= 79 && timer < 108 )
  {
  sprite_index = fall_sprite;
  if ( air == 0 )
    sprite_index = land_sprite;
  }

if ( timer >= 146 && timer < 157 )
  {
  sprite_index = fall_sprite;
  if ( air == 0 )
    sprite_index = land_sprite;
  }

switch ( timer )
  {
  // SLASH 1

  case 11:
    sprite_index = sideb_sprite3;
    image_index = 0;
    temp = gravity;
    instance_create ( x - 5 + facing * 10 , y - 20 * size , obj_spark_effect );
  case 12:
    x += ( 15 - 26 * facing ) * size;
    create_hitbox(3,74+facing*36,6,0,6,1,slash1,obj_spark_slash1,0.8,1.5,5,-9,self.id,5,2);
	hitbox.di = 0.3;
	hitbox.sdi = 0.4;
    hitbox.hit_stun = 6;
    y -= 22.5 * size;
    break;
  case 13:
    sound_play ( swingsnd1 );
    image_index = 1;
    break;
  case 16:
    image_index = 2;
  case 17:
    x += ( 5.5 - 11 * facing ) * size;
    y -= 11 * size;
    break;
  case 19:
    image_index = 3;
    break;
  case 24:
    sprite_index = fall_sprite;
	if ai
	special = 1
    break;
  case 40:
  sidebrecover = 80
   attack_type = "none";
    if ( air == 0 ) {
      state_type = "stand";
	}
      else {
           state_type = "jump";
	}
    timer = 0;
    time = -1;
    exit;
    break;

  // SLASH 2
  case 64:
    hspeed = 0;
    vspeed = 0;
    sprite_index = sideb_sprite2;
    image_index = 1;
    break;
  case 67:
    sound_play ( swingsnd2 );
    sound_play(choose(attack_voice2,attack_voice4));
    image_index = 2;
    create_hitbox(4,300+facing*-60,4,0,8,1,slash1,obj_spark_slash1,1,1.8,15,16,self.id,7,2);
	hitbox.di = 0.4;
    hitbox.hit_stun = 10;
    hitbox.weight_kb = 1;
    break;
  case 70:
    x += ( 1.5 - facing * 3 ) * size;
    y += 12 * size;
    image_index = 3;
    break;
  case 71:
  case 72:
    x += ( 1.5 - facing * 3 ) * size;
    y += 11 * size;
    break;
  case 73:
    x += ( 1.5 - facing * 3 ) * size;
    y += 11 * size;
    image_index = 4;
    break;
  case 74:
  case 75:
    x += ( 1.5 - facing * 3 ) * size;
    y += 11 * size;
    break;
  case 76:
    image_index = 5;
    break;
  case 84:
    sprite_index = fall_sprite;
    image_index = 0;
    if ai
	special = 1
    break;
  case 93:
  sidebrecover = 150
   attack_type = "none";
    if ( air == 0 ) {
      state_type = "stand";
	}
      else {
           state_type = "jump";
	}
    timer = 0;
    time = -1;
    exit;
    break;

  // SLASH 3
  case 128:
    hspeed = 0;
    vspeed = 0;
    sprite_index = sideb_sprite;
    image_index = 0;
    break;
  case 131:
    sound_play ( swingsnd3 );
    sound_play(choose(attack_voice1,attack_voice3));
    create_hitbox(2,0+facing*180,7.2,0,40,2,slash3,obj_spark_slash3,0.7,0.65,-10,4,self.id,2,2);
    image_index = 1;
    break;
  case 134:
    x += ( 20 - 40 * facing ) * size;
    y -= 4 * size;
    create_hitbox(6,40+facing*100,6.5,5.5,60,8,slash3,obj_spark_slash3,1.3,0.8,7,5,self.id,7,2);
    hitbox.di = 0.30
    hitbox.shield_stun = 2;
    image_index = 2;
    break;
  case 137:
    x += ( 15 - 30 * facing ) * size;
    y -= 3 * size;
    image_index = 3;
    break;
  case 140:
    x += ( 10 - 20 * facing ) * size;
    y -= 2 * size;
    image_index = 4;
    break;
  case 143:
    image_index = 5;
    break;
  case 146:
    sprite_index = fall_sprite;
    image_index = 0;
    break;
  case 151:
  sidebrecover = 250
    attack_type = "none";
    if ( air == 0 ) {
      state_type = "stand";
	}
      else {
	if grounded = 1 {
	state_type = "jump"
	}
	else {
           state_type = "fall";
           dontrepeat = 0;
	}
	}
    timer = 0;
    time = -1;
    break;
  }

if ( !combo_failure )
if ( special )
  {
  special = 0;
  if ( timer < 13 )
    {
    combo_failure = 1;
    }
    else
  if ( timer < 29 )
    {
    timer = 63;
    }
    else
  if ( timer < 69 )
    {
    combo_failure = 1;
    }
    else
  if ( timer < 90 )
    {
    timer = 127;
    }
  }

if ( !unsnap ) exit;

while ( place_meeting ( x , y , obj_floor ) || place_meeting ( x , y , obj_platform ) )
  y -= 1;
while ( place_meeting ( x , y , obj_ceiling ) )
  y += 1;
while ( place_meeting ( x , y , obj_wall ) )
  x -= 1 - facing * 2;

   if (timer >= 135){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 &&  dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 140)){
			        killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }