no_hurtbox = 1;
if sprite_index = stand_sprite
{
image_speed = 0.18;
}

if ( state_type = "crouch" )
{
image_speed = 0;
switch (timer)
	{
	case 0: image_index = 0; break;
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	}
}

if ( sprite_index = jump_sprite && image_index >= 9 )
{
image_index = 7;
}

if ( sprite_index = mid_jump_sprite && image_index >= 9 )
{
image_index = 7;
}

if(state_type != "air_attack" && state_type != "attack")
{
        if (instance_exists(dthrowfx)){
		with (dthrowfx){
			instance_destroy();
		}
		}     
}

if (!instance_exists(hudThing)){
    hud_x = obj_game_control.hud_x[other.number-1];
    hud_y = window_h-128+lengthdir_y(obj_game_control.hudp_shake[i]*0.8,obj_game_control.hudp_shake[i]*60);    
    hudThing = instance_create ( hud_x, hud_y, obj_custom_gfx);
    hudThing.step_script = hudThing_step_script;
    hudThing.draw_script = hudThing_draw_script;
    hudThing.owner = self.id;
    hudThing.keepmain = self.keepmain;
}

if limitbreak = 1 {	
hudThing.sprite_index = metermax_sprite;
hudThing.image_speed = .25;
}
else
{
hudThing.sprite_index = meter_sprite;
hudThing.image_speed = 0;
hudThing.image_index = limitgauge * 25 / 150;
}

if limittemptimer = 0 {
limitgauge += limittemp
lastpercent = percent
}


if limitgauge < 150 {
if hitbox.hit > 0  {
if attack_type != "final_smash" {
limittemp = hitbox.damage*0.8
limittemptimer -= 1
}
}
else if hitbox2.hit > 0 {
limittemp = hitbox2.damage*0.8
limittemptimer -= 1
}
else if proj.hit = 1 {
limittemp = proj.damage*0.2
limittemptimer = 0
}
else if hitbox3.hit > 0 {
limittemp = hitbox3.damage*0.8
limittemptimer -= 1
}
else if hitbox4.hit > 0 {
limittemp = hitbox4.damage*0.8
limittemptimer -= 1
}
else {
if state_type != "flinch" && state_type != "air_flinch"
limittemptimer = 2
limittemp = 0
}
}

if limitgauge >= 150 {
limitbreak = 1
limitgauge = 150
}
else 
{
limitbreak = 0
}

if ( attacking = 1 && special = 1 )
{
EXmove = 1;
}
else
{
EXmove = 0;
}

if (air = 0 or state_type = "flinch" or state_type = "air_flinch" )
{
upbtemp = 0;
sidebtemp = 0;
}

if ( masktemp = 1 )
{
    mask_sprite = bat_mask;
}
else if ( masktemp = 2 )
{
    mask_sprite = wolf_mask;
}
else
{
    mask_sprite = default_mask_sprite;
}

if(timer >= time){masktemp = 0}
	
if boosttimer > 0 && frac(timer/10) <= 0.3 {
    image_blend = c_red
    alarm[7] = 4
	}	
	
if sprite_index = jump_sprite || sprite_index = mid_jump_sprite || sprite_index = walk_sprite || sprite_index = run_sprite || sprite_index = fall_sprite || sprite_index = roll_sprite || sprite_index = air_dodge_sprite  || sprite_index = dair_sprite || sprite_index = dash_attack_sprite && boosttimer = 0
{after_image(4,c_blue,0.5)}	
	
if sprite_index = jump_sprite || sprite_index = mid_jump_sprite || sprite_index = walk_sprite || sprite_index = run_sprite || sprite_index = fall_sprite || sprite_index = roll_sprite || sprite_index = air_dodge_sprite  || sprite_index = dair_sprite || sprite_index = dash_attack_sprite && boosttimer > 0
{after_image(4,c_red,0.5)}		

if boosttimer > 0
{
boosttimer -= 1
darkmetamorphosis = 1
}

if darkmetamorphosis = 1
{
offense = 1.5;
defense = 0.5;
}
else
{
offense = 1;
defense = 1;
}


if boosttimer <= 0 {
	offense = 1
	defense = 1
	darkmetamorphosis = 0;
}

if ( attack_type = "edge_climb" )
{
customedgeclimb = 1;
image_speed = 0;
switch ( timer )
  {
  case 0: sprite_index = edge_sprite; break;
  case 15: sprite_index=jump_sprite; shakex=-8*size*(1-facing*2); shakey=15*size; image_index=4;  break;
  case 18: shakey=12*size;  break;
  case 21: shakex=-6*size*(1-facing*2); shakey=8*size;  break;
  case 24: shakex=-4*size*(1-facing*2); shakey=4*size;  break;
  case 27: shakex=0*size*(1-facing*2); shakey=0*size;  break;
  case 30: sprite_index=land_sprite; image_index=0; shakex=0*size*(1-facing*2); shakey=0*size;  break;
  }
}