if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 25;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 0: image_index = 0; break;
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 18: image_index = 4; break;
	case 21: image_index = 5; break;
	
	case 50: image_index = 0; break;
	case 53: image_index = 1; break;
	case 56: image_index = 2; break;
	case 59: image_index = 3; break;
	case 62: image_index = 4; break;
	case 72: image_index = 5; break;
	case 75: image_index = 6; break;

      }
	  
	  if timer = 6 {
		  create_hitbox ( 8 , angle_correct(77) , 4.6 , 0 , 6 , 4 , slash2 , obj_spark_slash3 , 1.7 , 2.1 , 12.60 , 21.50 , self.id , 3 , 2 );
		   hitbox.execute_on_hit = "
		   attacker.rankhits += 1
		   attacker.vspeed = -1.5
		   "
		   sound_play(coolswing_sound3);
		   sound_play(grunt_voice1);
		   swordslash = create_blur(x + 42 * (1-facing*2),y - 66,self.id);
    swordslash.sprite_index = swordslash_cw_sprite;
    swordslash.anim_speed = 1;
    swordslash.image_alpha = 0.9;
    swordslash.image_xscale = 0.25 * (1-facing*2);
    swordslash.image_yscale = 0.4;
    swordslash.depth = depth - 0.1;
    swordslash.snap = self.id
	swordslash.image_angle = 274 * (1-facing*2)
	  }
	  
	  if timer = 21 {
		  sound_play(sheath_sound);
	  }
	  
	  if timer >= 10 and timer < 25 and attacking = 1 {
		  timer = 50
		  time = 80
		  sprite_index = fair2_sprite
		  image_index = 0
	  }
	  
	  if timer >= 50 and timer < 59 and attack_success = 1 {
		  target.y = y
		  target.x = x + 12 * (1-facing*2)
	  }
	  
	  if timer = 56 {
		  create_hitbox ( 3 , angle_correct(30) , 5.9 , 4.6 , 6 , 9 , slash3 , obj_spark_slash4 , 1.7 , 2.1 , 12.60 , 21.50 , self.id , 3 , 2 );
		   hitbox.execute_on_hit = "
		   attacker.rankhits += 1
		   "
		   hitbox.hit_stun = 15
               hitbox.weight_kb = 1
		   sound_play(coolswing_sound3);
		   sound_play(grunt_voice2);
		   swordslash = create_blur(x + 30 * (1-facing*2),y - 61,self.id);
    swordslash.sprite_index = swordslash_cw_sprite;
    swordslash.anim_speed = 1;
    swordslash.image_alpha = 0.9;
    swordslash.image_xscale = 0.3 * (1-facing*2);
    swordslash.image_yscale = 0.3;
    swordslash.depth = depth - 0.1;
    swordslash.snap = self.id
	swordslash.image_angle = 274 * (1-facing*2)
	  }
	  
	  if timer = 75 {
		  sound_play(sheath_sound);
	  }
	  
	  if timer >= 62 and timer < 80 and attack_success = 1 and movejump = 1 and otherteleport = 0 {
		   timer = 100
		  time = 121
		  otherteleport = 1
	  }
	  
	  if timer >= 62 and timer < 80 and special = 1 and attack_success = 1 and ( ( ( moveright && facing = 0 ) or ( moveleft && facing = 1 ) ) ) {
			  specialcancel = 1
			  state_type = "stand";
         attack_type = "none";
         timer = 0;
         time = -1;
         char_sideb();
		  }
	  
	  
	  if timer = 101 {
	  trick = create_blur(x - 20 * (1-facing*2),y - 80,self.id);
    trick.sprite_index = trick_sprite;
    trick.image_speed = 1;
    trick.image_alpha = 0.9;
    trick.image_xscale = 0.25 * (1-facing*2);
    trick.image_yscale = 0.25;
    trick.depth = depth - 0.1;
    trick.snap = self.id
	sound_play(airhike_sound);
     }
	 
	 if timer >= 104 and timer < 112 {
		 image_alpha = 0
		 intangible = 1
		 speed=0
         gravity_lock = 1;
	 }
	 
	 if timer = 112 {
		 x = target.x + 20 * (1-facing*2)
		 y = target.y
		 image_alpha = 1
		 intangible = 0
		  trick = create_blur(x - 20 * (1-facing*2),y - 80,self.id);
    trick.sprite_index = trick_sprite;
    trick.anim_speed = 1;
    trick.image_alpha = 0.9;
    trick.image_xscale = 0.25 * (1-facing*2);
    trick.image_yscale = 0.25;
    trick.depth = depth - 0.1;
    trick.snap = self.id
	sprite_index = jump_sprite
	sound_play(airhike_sound);
	facing = 1-facing
	specialcancel = 1
	 }
	  
	  
	  
	  
	
	
	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=5; }
  }




if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		

