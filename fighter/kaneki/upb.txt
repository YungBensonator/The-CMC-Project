fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
    timer = 0;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = upb_sprite;
    image_index=0;
    time = 36;
    temp = air > 0
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1}

if timer < time {
	state_type = "air_attack"
    switch ( timer )
      {
	case 12: image_index = 0; break; //1
	case 18: image_index = 1; break; //2
	case 24: image_index = 2; break; //3
	case 36: image_index = 3; break; //4
	
	case 44: image_index = 4; break; //5
	case 52: image_index = 5; break; //6 
	case 60: image_index = 6; break; //7
    
	case  66: image_index = 7; break; //1st //8
	
	
	case 70: image_index = 8; break; //last //9
	
	case 76: image_index = 9; break; //recovery //10
	case 80: image_index = 10; break; //11
    }
	  
	if timer =1
	{
	sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4,attack_voice4))	
	}
	if timer >= 1 && timer < 5 
	{
    create_projectile(1,80+20*facing,7.6,0,12,1,punch2,obj_spark_hit1,0.9,1.7,-5,8,self.id,15,char_custom3);
	hspeed = size * (1.5-facing*3);
    vspeed = -8.95*size
	}
	if timer > 1  
	{
    force_edge_grab = 0
	}
	
	
	//if timer > 51 && timer <60
	//{
	//hspeed = size * (1.5-facing*3);
   // vspeed = -5*size
	//}
    //if timer > 40{
    //gravity=0;
    //gravity_lock=1;
    //vspeed=0;
    //hspeed=0;}	

	if timer = 24
	{
    //create_projectile(1 , 370, 1 , 1 , -1 , 90,cutfk1,obj_spark_slash3,2.9,2.9,-10,15,self.id,18,char_custom4);
	create_hitbox ( 1 , 372, 1 , 1 , -1 , 4 , cutfk1,obj_spark_slash3 , 2.9 ,2.9 , -10, 15, self.id , 18 , 6);
	sound_play(upb_voice);
	}
if timer >= 33 && timer <= 35  && attack_success { // hold
    time = 84; // full animation time
	timer = 40; // second animation start 1,2,3,4,5,6,7,8 8 frames (4)
	sprite_index = upb_sprite;
	image_speed = 0.25;
}
    if timer = 50 { 
    
    create_hitbox(1, 90, 1.6, 1 ,0, 4, cutfk1,obj_spark_slash3, 1.6, 1.6, -5, 15, self.id, 6, 1);
} 

    if timer = 65 { 
    sound_play();
    create_hitbox(1, 311+-82*facing, 4, 2 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, -10, 15, self.id, 3, 1);
    create_hitbox2(1, 311+-82*facing, 4, 2 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 10, -10, self.id, 3, 1);
    create_hitbox3(1, 311+-82*facing, 4, 2 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 20, -40, self.id, 3, 1);
    create_hitbox4(1, 311+-82*facing, 4, 2 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 45, -70, self.id, 3, 1);
}
    if timer = 66 { 
    sound_play();
    create_hitbox(1, 311+-82*facing, 6, 3 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, -10, 15, self.id, 1, 1);
    create_hitbox2(1, 311+-82*facing, 6, 3 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 10, -10, self.id, 1, 1);
    create_hitbox3(1, 311+-82*facing, 6, 3 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 20, -40, self.id, 1, 1);
    create_hitbox4(1, 311+-82*facing, 6, 3 ,0, 2, cutfk1,obj_spark_slash3, 2.6, 2.6, 45, -70, self.id, 1, 1);
}  
    if timer = 67 { 
    
    create_hitbox(1, 311+-82*facing, 4, 2 ,0, 2, cutfk4,obj_spark_slash3, 2.6, 2.6, -10, 15, self.id, 1, 1);
    create_hitbox2(1, 311+-82*facing, 4, 2 ,0, 2, cutfk4,obj_spark_slash3, 2.6, 2.6, 10, -10, self.id, 1, 1);
    create_hitbox3(1, 311+-82*facing, 4, 2 ,0, 2, cutfk4,obj_spark_slash3, 2.6, 2.6, 20, -40, self.id, 1, 1);
    create_hitbox4(1, 311+-82*facing, 4, 2 ,0, 2, cutfk4,obj_spark_slash3, 2.6, 2.6, 45, -70, self.id, 1, 1);
} 
   
	 if timer > 40{
     gravity=0;
     gravity_lock=1;
     vspeed=0;
     hspeed=0;}

	 
    if timer >= 20 && attack_success  && timer < 32 
    {
    speed = 0;
    target1 = target
    target1.y = self.y;
    target1.x = x + (5 - facing*10)*size
    target1.speed = 0;
    target1.gravity_lock = 2;
    target1.ignore_physics = 1;
	}

    if timer >= 50 && timer < 32
    {
    target1.timer = 0;
    target1.sprite_index=target1.flinch_sprite
    target1.state_type = "flinch"
    target1.speed = 0;
    target1.gravity_lock = 2;
    target1.ignore_physics = 1;
    target1.y = self.y;
    target1.speed = 0; }
	
	
	
	
	
	
	
	
	
	
	
	

	
  if air = 0 && temp > 0 {
    state_type = "land";
    attack_type = "none";
    time = 4;
    sprite_index = crouch_sprite;
    timer = 30;
  }	


}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
