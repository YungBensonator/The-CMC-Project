after_image ( 2 , c_red , .3 )
moving_object = 1;
image_angle = direction+facing*180
proj_destroy = 0
if timer = 0
hit = 2
absorb2 = 1
if timer = 1 && hit = 0 {
    hit = 0    
    speed = 6
    direction = 180*attacker.facing
    image_speed = 0.2;
    visible =1
    create_homing_bubble(7, 7,0,0,self.id,5);
    }
if timer > 1 && timer < time-10 && (target = -1 || target = attacker) && frac(timer/6)=0
    create_homing_bubble(7,7,0,0,self.id,5);
if target != -1 && target!= attacker && ((target.x > x && hspeed > 0) || (target.x < x && hspeed < 0)) {
    var prev_hspeed;
    var prev_vspeed;
    prev_hspeed = hspeed;
    prev_vspeed = vspeed;
    var dir_to_target;
    dir_to_target = point_direction(x,y,target.x,target.y-7*target.size);
    if dir_to_target < 0
        dir_to_target += 360
    if dir_to_target >= 360
        dir_to_target -= 360
    if direction >= 360
        direction -= 360;
    if direction < 0
        direction += 360;
    speed = 6
 
 
 
    if direction >= 270 || direction < 90 {
        if direction-(direction>270)*360 < dir_to_target-(dir_to_target>270)*360
            direction+=3   
        else if direction != dir_to_target
            direction-=6        
    }
    else {
        if direction < dir_to_target
            direction+=6
        else if direction != dir_to_target
            direction-=6       
    }
    
    
}
if (collision_point(x+sign(hspeed),y,obj_wall,1,1) || is_on_floor(self)) && hit = 0
instance_destroy()