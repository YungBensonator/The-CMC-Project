fast_fall = 0
fast_fall_temp = 0
if cantuse2 > 0 {break;}
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0
        hspeed = 0;
        sprite_index = sideb_sprite;
        image_index=0;
        timer = 0;
        time = 32;
        timer_speed=1;
		vspeed=0
        gravity_lock=0;
		air_move = 0
        gravity=1;
		
    }

if ( timer < time )
    {
    switch ( timer )
    {
	case 4: image_index = 1; hspeed=4*(1-facing*2)*size; break;
	case 17: image_index = 2; hspeed = 2.355*(1-facing*2)*size; break;
	case 21: image_index = 3; hspeed= 0 break;
	case 28: image_index = 4; break;
	case 30: image_index = 5; break;	
	case 32: image_index = 6; break;
    }

if timer = 1 {
after_image(6,c_red,0.25)
}
if timer = 21 {
 hspeed = 0
}
  if air > 0{
  vspeed=0;
  }
  if timer = 5{
  sound_play(attack_snd2);
sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4,attack_voice4))
}
if timer >= 5 and timer <18 {

  create_hitbox(0.1, angle_correct(12), 7.55,0.1, 5, 2, cutfk1, obj_spark_slash3, 1.9,1.4,26,20, self.id, 2, 1);
  hitbox.di = -1

}

if timer = 1 ||    timer = 4 ||  timer = 8 ||  timer = 12 ||  timer = 15   {
		duster = instance_create(x-8*(1-facing*2),y,obj_dust_effect_bold);
		duster.image_xscale *= 0.7
		duster.image_speed=0.45
		duster.image_yscale *= 0.6
		duster.facing = facing
		}



if timer = 19 {
sound_play(attack_snd2);
sound_play(choose(attack_voice1,attack_voice2,attack_voice3,attack_voice4,attack_voice4))
  create_hitbox(5, angle_correct(353), 5,4.455, 5, 4, cutfk1, obj_spark_slash3, 1.9,1.4,26,20, self.id, 2, 1);
}






}
if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
	//fall_speed = 0.4
    attack_type = "none";
	//sidebtemp = 1;
    if air > 0
    state_type = "jump";
    else
    state_type = "stand";
    timer = 0;
    time =-1;
		cantuse2 = 30}