if(air = 0 || ((sprite_index = jump_sprite || sprite_index = mid_jump_sprite) && timer = 0 ) || attack_type = "b" || attack_type = "upb" || attack_type = "sideb" || attack_type = "downb")
{
	fairset = 1;
}

if(attack_type = "none")
{
	b_temp = 1;
	offense = 1;
	defense = 1;
}
else
{
	
//hitbox.visible = 1;
//hitbox2.visible = 1;
}

if ( air = 0 || state_type = "edge" || state_type = "flinch" || state_type = "air_flinch" || state_type = "out" )
{
zairtemp = 1 + kaioken;
}

if ( solar_flare_timer > 0 && attack_type != "hold" && attack_type != "fthrow" && attack_type != "dthrow" && attack_type != "bthrow" && attack_type != "uthrow" )
{
solar_flare_timer -= 1;
}
if (enemy.state_type = "respawn"){
	temp_spawn += 1
}
if (instance_exists(kameproj)){
		if (target.state_type = "air_flinch" || target.state_type = "flinch") && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1)) && target.percent > 115{
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}	
				
				}
//--------------------------------------------------------------------------------CROUCH-----------------------------------------------------------
if ( state_type = "crouch" ){
    
    sprite_index = crouch_sprite;
    image_speed = 0;
    crouchgetuptimer = min(9,timer);
    switch (timer){
        case 0: image_index = 0; break;
        case 2: image_index = 1; break;
        case 4: image_index = 2; break;
        case 6: image_index = 3; break;
		case 8: image_index = 4; break;
    }
}

if ( state_type = "stand" && crouchgetuptimer > 0 ){
    image_speed = 0;
    crouchgetuptimer -= 1;
    sprite_index = crouch_sprite;
    crouchtemp = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 0 && crouchtemp = 1 ){
    sprite_index = stand_sprite;
    image_index = 0;
    crouchtemp = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 1 ){
    image_index = 0;
}

if ( state_type = "stand" && crouchgetuptimer = 4 ){
    image_index = 1;
}

if ( state_type = "stand" && crouchgetuptimer = 6 ){
    image_index = 2;
}

if ( state_type = "stand" && crouchgetuptimer >= 9 ){
    image_index = 3;
}


if ( state_type != "stand" && state_type != "crouch" && crouchgetuptimer > 0 ){
    crouchgetuptimer = 0;
    crouchtemp = 0;
}


/////////////////Meter Start/////////////////
if(percent >= 100)
{
	if(powerup_check = 0)
	{
		sound_play(powerup_sound);
		powerup_check = 1;
	}
	if(powerup_check > 0 && powerup_check < 20){powerup_check += 1;}
	if(powerup_check = 20)
	{
		if instance_exists(MeterHudS2) with (MeterHudS2) 
		{ instance_destroy(); }
		powerup_check += 1;
	}
	
	if (!instance_exists(MeterHud) && !ktime)
	{
		if instance_exists(MeterHudS)
				with MeterHudS instance_destroy();
		if instance_exists(MeterHudS2)
				with MeterHudS2 instance_destroy();
		MeterHud = instance_create ( hud_x+40, hud_y, obj_custom_gfx);
		MeterHud.step_script = hudThing_step_script;
		MeterHud.draw_script = hudThing_draw_script;
		MeterHud.owner = self.id;
		MeterHud.keepmain = self.keepmain;
		MeterHud.image_xscale = 1;
		MeterHud.image_yscale = 1;
		MeterHud.hudalpha = 1;
	}
	if(instance_exists(MeterHudS2) && MeterHudS2.image_index >= 3.6 && ktime)
	{MeterHudS2.image_index = 0}
	if (!instance_exists(MeterHudS) && ktime )
	{
		if instance_exists(MeterHud)
				with MeterHud instance_destroy();
		MeterHudS = instance_create ( hud_x+40, hud_y, obj_custom_gfx);
		MeterHudS.step_script = hudThing_step_script;
		MeterHudS.draw_script = hudThing_draw_script;
		MeterHudS.owner = self.id;
		MeterHudS.keepmain = self.keepmain;
		MeterHudS.image_xscale = 1;
		MeterHudS.image_yscale = 1;
		MeterHudS.hudalpha = 1;
		MeterHudS2 = instance_create ( hud_x+40, hud_y, obj_custom_gfx);
		MeterHudS2.sprite_index = meter_spriteS2;
		MeterHudS2.step_script = hudThing_step_script;
		MeterHudS2.draw_script = hudThing_draw_script;
		MeterHudS2.owner = self.id;
		MeterHudS2.keepmain = self.keepmain;
		MeterHudS2.image_xscale = 1;
		MeterHudS2.image_yscale = 1;
		MeterHudS2.image_speed = 0.9
		MeterHudS2.hudalpha = 1;
	}
	if (!instance_exists(MeterHudS2) && powerup_check > 0 && powerup_check < 20)
	{
		MeterHudS2 = instance_create ( hud_x+40, hud_y, obj_custom_gfx);
		MeterHudS2.sprite_index = meter_spriteS2;
		MeterHudS2.step_script = hudThing_step_script;
		MeterHudS2.draw_script = hudThing_draw_script;
		MeterHudS2.owner = self.id;
		MeterHudS2.keepmain = self.keepmain;
		MeterHudS2.image_xscale = 1;
		MeterHudS2.image_yscale = 1;
		MeterHudS2.image_speed = 0.9
		MeterHudS2.hudalpha = obj_game_control.hud_cover[number-1];
	}
	if (instance_exists(MeterHud))
	{
		MeterHud.sprite_index = meter_sprite;
		MeterHud.image_index = (charge/280)*100*(57/100)
		MeterHud.image_speed = 0;
		MeterHud.hudalpha = obj_game_control.hud_cover[number-1];
		if (charge < 0) {MeterHud.image_index = 0}
	}
	if (instance_exists(MeterHudS))
	{
		MeterHudS.sprite_index = meter_spriteS;
		MeterHudS.image_index = (ktimer/ktime)*100*(57/100);
		MeterHudS.image_speed = 0;
		MeterHudS.hudalpha = obj_game_control.hud_cover[number-1];
		if (ktimer < 0) {MeterHudS.image_index = 0}
	}
}
else
{
	if instance_exists(MeterHudS2) with (MeterHudS2) 
	{instance_destroy();}
	if instance_exists(MeterHudS) with (MeterHudS) 
	{instance_destroy();}
	if instance_exists(MeterHud) with (MeterHud) 
	{instance_destroy();}
	powerup_check = 0;
}
/////////////////Meter Stop/////////////////

if state_type = "shielding"{
if image_index >= 2{
image_speed = 0
image_index = 2
}

}

if(attack_type = "none" || state_type = "flinch" || state_type = "air_flinch")
{
	snapvanish = 0;	
	if instance_exists(ligma_spark)
	{
		ligma_spark.image_xscale = 0
		ligma_spark.image_yscale = 0
		ligma_spark.image_speed = 10
	}
	if instance_exists(balls_spark)
	{
		balls_spark.image_xscale = 0
		balls_spark.image_yscale = 0
		balls_spark.image_speed = 10
	}
	if instance_exists(youwa_spark)
	{
		youwa_spark.image_xscale = 0
		youwa_spark.image_yscale = 0
		youwa_spark.image_speed = 10
	}
}
if ( air = 0 || state_type = "flinch" || state_type = "edge" || state_type = "respawn" || state_type = "air_flinch" )
{
	if snapvanish = 2
	snapvanish = 0
	UpbTemp = 0;
}
if (attack_type != "downb" && !ktime && charge > 0)
charge -= 0.01
if (sprite_index = stand_sprite || sprite_index = stand_spriteS)
	image_speed = .15
if (state_type = "flinch" || state_type = "air_flinch")
sound_stop(spiritbomb_charge_sound);
if ( sprite_index = roll_sprite && state_type = "dodge" && !ktime)
{
	image_speed = 0;
	if ( timer >= 23 && timer <=30 )
	{
		sprite_index = crouch_sprite; image_index = 0;
	}
	switch ( timer )
	{
	case 0: image_index = 0; break;
	case 2: shakex=-5*size*(1-facing*2); sprite_angle=45*(1-facing*2);  break;
	case 4: shakex=-6*size*(1-facing*2); shakey=4*size; sprite_angle=90*(1-facing*2);  break;
	case 6: shakex=-4*size*(1-facing*2); shakey=6*size; sprite_angle=135*(1-facing*2);  break;
	case 8: shakex=-1*size*(1-facing*2); shakey=4*size; sprite_angle=180*(1-facing*2);  break;
	case 11: shakex=4*size*(1-facing*2); shakey=2*size; sprite_angle=225*(1-facing*2);  break;
	case 14: shakex=4*size*(1-facing*2); shakey=1*size; sprite_angle=270*(1-facing*2);  break;
	case 17: shakex=4*size*(1-facing*2); shakey=0*size; sprite_angle=315*(1-facing*2);  break;
	case 20: shakex=0; shakey=0; sprite_angle=0;  break;
	}
}
else
{
	if (state_type = "dodge" && ktime)
	{
		image_speed = 0
		sprite_index = upb_spriteS
		switch ( timer )
		{
		case 0: image_index = 0; sound_play(upb_sound); break;
		case 2: image_index = 1; break;
		case 4: image_index = 2; break;
		case 6: image_index = 3; break;
		case 8: image_index = 4; break;
		case 10: image_index = 5; break;
		case 20: image_index = 4; break;
		case 22: image_index = 3; break;
		case 24: image_index = 2; break;
		case 26: image_index = 1; break;
		case 28: image_index = 0; break;
		}
	}
}
/*if ( sprite_index == jump_sprite )
{
	image_index = 2;
	image_speed = 0;
}*/
if(ragetime = 0)
{
	if(ktime = 0 ){exit;}
	ktimer += 1;
	if ( ktimer >= ktime  || state_type = "respawn" )
	{
		sound_play (powerdown_sound);
		sound_play (powerdown_sound);
		effect_create_above(ef_ring,x,y-16,0,c_yellow);
		kaioken = 0;
		image_blend = c_white;
		ktime = 0;
		ktimer = 0;
		offense = 1;
		transform = 1;
	}
	
	//if abs(sin(ktimer*pi/2))>=0.5 
	//    image_blend = c_yellow
	//else
	//    image_blend = c_white
	//if frac(ktimer/15)=0
	//    percent+=1
	if (ktime != 0)
	{offense = 1.25}
	//if (state_type = "respawn")
	//{percent = 0}
	if (sprite_index != final_smash_sprite2 && instance_exists(dragon_spark) && dragon_spark.image_index != 13)
	{
		dragon_spark.image_index = 13
		dragon_spark.image_speed = 10
	}
}

/////////////////Super Saiya-jin Start/////////////////
if ( transform = 1 )
{
char_custom4();
}

if ( ktime = 0 )
{
	if(ragetime = 0){exit;}
	ragetimer += 1;
	if ( ragetimer >= ragetime  || state_type = "out" ) 
	{
		rage = 0;
		image_blend = c_white;
		ragetime = 0;
		ragetimer = 0;
		ktime = 0;
		ktimer = 0;
		offense = 1;
	}
	if (abs(sin(ragetimer*pi/2))>=0.5) 
	{image_blend = c_red;}
	else
	{image_blend = c_white;}
	if (frac(ragetimer/10)=0)
	{percent += 1;}
	if (ragetime != 0 )
	{offense = 2;}
	if (state_type = "out")
	{ percent = 0;}
}
/////////////////Super Saiya-jin Stop/////////////////


if sideb_timer < 10 && attack_type =="sideb"{
	sideb_timer += 1
}

if sideb_timer >= 10{
	sideb_timer -= 1
}

//FUCK this niggas code fr