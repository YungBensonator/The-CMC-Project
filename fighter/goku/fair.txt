if ( state_type == "jump" )
{
	state_type = "air_attack";
	attack_type = "fair";
	image_speed = 0;
	image_index = 0;
	
	smash = 0;
	attacking = 0;
	timer_speed = 1;
	temp = 0;
	has_hit = 0;
	canceltemp = 0;
	targetLock = -1;
	
	if(fairset = 1)
	{
		
		if (!ktime){sprite_index = fair_sprite1;}
		else
		{sprite_index = fair_sprite1S;}
		timer = 0;
		time = 25;
		fairset += 1;
	}
	else if(fairset = 2)
	{
		if (!ktime)
		{
			time = 146;
			timer = 100;
			sprite_index = fair_sprite2;
		image_index = 0;
		}
		else 
		{
			time = 337;
			timer = 300;
			sprite_index = fair_sprite3S;
		image_index = 1;
		}
		//image_index = 0;
		fairset += 1;
	}
	else if(fairset = 3)
	{
		if (!ktime)
		{
			time = 240;
			timer = 200;
			sprite_index = fair_sprite;
		}
		else
		{
			time = 437;
			timer = 400;
			sprite_index = fair_sprite4S;
		}
		image_index = 0;
		fairset += 1;
	}
	else if(fairset = 4)
	{
		if (!ktime)
		{
			time = 240;
			timer = 200;
			sprite_index = fair_sprite;
		}
		else
		{
			time = 240;
			timer = 200;
			sprite_index = fair_sprite4S;
		}
		image_index = 0;
	}
	

	
	
	
	
	
	
	
	
	
}

//If it were 100% up to me. I'd already wipe this code from the face of the Earth to make this already convoluted move less of a headache to work with. - ogg was here, don't ask me to do this again.

if( canceltemp = 1 && ( ( smashup && !smashdown && !smashleft && !smashright ) || ( smashdown && !smashup && !smashup && !smashleft && !smashright ) || ( smashleft = 1 && facing = 0 && !smashright && !smashup && !smashdown ) || ( smashright && facing = 1 && !smashleft && !smashup && !smashdown ) || ( attacking && ( ( moveup = 1 && !movedown && !moveright && !moveleft ) || ( movedown = 1 && !moveup && !moveright && !moveleft ) || ( moveleft = 1 && facing = 0 && !movedown && !moveup && !moveright ) || ( moveright = 1 && facing = 1 && !movedown && !moveup && !moveleft ) ) ) || special || (movejump && air < max_jumps -1) ) )
{
	interrupt = 1;
	has_hit = 0;
}

	switch (timer) 
	{
		case 5: image_index = 1; break;
		case 7: image_index = 2; break;
		case 9: image_index = 3; break;
		case 11: image_index = 4; break;
		case 13: if !ktime sprite_index = nair_sprite; else sprite_index = nair_spriteS; image_index = 0; break;
		
		case 100: image_index = 0; break;
		case 102: image_index = 1; break;
		case 104: image_index = 2; break;
		case 106: image_index = 3; break;
		case 120: image_index = 4; break;
		case 123: image_index = 5; break;
		
		case 200: image_index = 0; break;
		case 201: image_index = 1; break;
		case 202: image_index = 2; break;
		case 203: image_index = 3; break;
		case 208: image_index = 4; break;
		case 210: image_index = 5; break;
		case 213: image_index = 6; break;
		case 225: image_index = 0; break;
		
		/*case 302: image_index = 1; break;
		case 304: image_index = 2; break;
		case 309: image_index = 3; break;
		case 312: if !ktime sprite_index = nair_sprite; else sprite_index = nair_spriteS; image_index = 0; break;*/

		case 301: image_index = 2; break;
		case 302: image_index = 3; break;
		case 303: image_index = 4; break;
		case 304: image_index = 5; break;
		case 309: image_index = 6; break;
		case 312: if !ktime sprite_index = nair_sprite; else sprite_index = fair_sprite3S; image_index = 0; break;
		
		case 404: image_index = 1; break;
		case 409: image_index = 2; break;
		case 414: if !ktime sprite_index = nair_sprite; else sprite_index = nair_spriteS; image_index = 0; break;
	}

	if (timer > 100){ hover = 0; }
	if (timer = 5) 
	{
		sound_play(choose(attack_voice2,attack_voice6));
		sound_play(attack_sound1);
		create_hitbox(3,angle_correct(60),5.2,0,6,6,kick2,obj_spark_hit1,0.9,0.7,13,18,self.id,5,1); 
		hitbox.di = -1;
		hitbox.sdi = -1;
		hitbox.hit_stun = 7
		hitbox.weight_kb = 1;
		hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.canceltemp = 1; attacker.targetLock = attacked.id;"
		vspeed = 0;
		vspeed -= 2;
	}
	if ((attacking || smash) && timer > 10 && timer < 30 ) 
	{
		temp = 0
		smash = 0
		attacking = 0
		if (!ktime)
		{
		time = 146
		timer = 100
		sprite_index = fair_sprite2;
		}
		else
		{
			time = 337
			timer = 300
			sprite_index = fair_sprite3S;
		}
		image_index = 0;
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////
	if (timer = 304) 
	{
		sound_play(choose(attack_voice2,attack_voice6));
		sound_play(attack_sound2);
		create_hitbox(3,angle_correct(15),5.2,0,6,6,goku_hit,obj_spark_hit1,0.9,1.2,13,25,self.id,5,2); 
		hitbox.di = -1;
		hitbox.sdi = -1;
		hitbox.hit_stun = 7;
		hitbox.weight_kb = 1;
		hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.canceltemp = 1; attacker.targetLock = attacked.id;"
		vspeed = 0;
		vspeed -= 2;
	}
	if ((attacking || smash) && timer > 309 && timer < 350  )
	{
		temp = 0
		smash = 0
		attacking = 0
		if (!ktime)
		{
			time = 146
			timer = 100
			sprite_index = fair_sprite2;
		}
		else
		{
			time = 437
			timer = 400
			sprite_index = fair_sprite4S;
		}
		image_index = 0;
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////
	if (timer = 404) 
	{
		sound_play(choose(attack_voice2,attack_voice6));
		sound_play(attack_sound2);
		create_hitbox(3,angle_correct(15),5.2,0,6,6,kick2,obj_spark_hit2,0.8,0.5,11,18,self.id,5,2); 
		hitbox.di = -1;
		hitbox.sdi = -1;
		hitbox.hit_stun = 7
		hitbox.weight_kb = 1;
		hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.canceltemp = 1; attacker.targetLock = attacked.id;"
		vspeed = 0;
		vspeed -= 2;
	}
	if ((attacking || smash) && timer > 409 && timer < 450  )
	{
		temp = 0
		smash = 0
		attacking = 0
		time = 146
		timer = 100
		if (!ktime)
		sprite_index = fair_sprite2;
		else
		sprite_index = fair_sprite2S;
		image_index = 0;
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////
	if (timer = 104)
	{
		sound_play(choose(attack_voice2,attack_voice6));
		sound_play(attack_sound2);
		if (!ktime) {
		create_hitbox(3,angle_correct(30),5.2,0,6,6,goku_hit,obj_spark_hit2,0.8,1.5,3,18,self.id,5,1); 
		hitbox.di = -1;
		hitbox.sdi = -1;
		hitbox.hit_stun = 7
		hitbox.weight_kb = 1;
		hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.canceltemp = 1; attacker.targetLock = attacked.id;"
                }
                else {
		create_hitbox(3,angle_correct(30),5.2,0,6,6,goku_hit,obj_spark_hit2,0.8,1.5,4,18,self.id,5,1); 
		hitbox.di = -1;
		hitbox.sdi = -1;
		hitbox.hit_stun = 7
		hitbox.weight_kb = 1;
		hitbox.execute_on_hit = "attacker.has_hit = 1; attacker.canceltemp = 1; attacker.targetLock = attacked.id;"
                }
		vspeed = 0;
		vspeed -= 4;
	}
	if ((attacking || smash) && timer > 109 && timer < 150  )
	{
		smash = 0
		temp = 0
		attacking = 0
		time = 240
		timer = 200
		if (!ktime)
		sprite_index = fair_sprite;
		else
		sprite_index = fair_sprite3S;
		image_index = 0;
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////
	if (timer = 210) 
	{
		sound_play(attack_sound2);
		if (!ktime) 
		{
			sound_play(choose(attack_voice5,attack_voice7,attack_voice1));
			create_hitbox(7,270,4,5.5,10,18,heavy_spike,obj_spark_impact,1.05,0.95,13,17,self.id,6,3);
		} 
		else 
		{
			sound_play(attackS_voice8);
			sound_play(attackS_voice8);
			create_hitbox(9,270,4,5.2,10,18,heavy_spike,obj_spark_impact,0.8,1.2,17,25,self.id,6,3);
		}
		hitbox.hit_stun = 10;
	}
		if (timer >= 210){ 
			if (attack_success && hit > 3) && (dontrepeat = 0 && temp_spawn >= 2) && (!ktime && target.percent > 100 || ktime && target.percent > 85) && target.offstage {
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
			
				}	

				}
	if (air = 0) 
	{
		state_type="land";
		attack_type="none";
		sprite_index = land_sprite;
		vspeed = 0;
		timer=0;
		time=13;
	}

if ( has_hit = 1 and targetLock.custom_boss != 1 and ( ( timer > 5 and timer < 15 ) || ( timer > 104 and timer < 119 ) || ( timer >= 200 and timer < 210 ) || ( timer > 304 and timer < 319 ) || ( timer > 404 and timer < 419 ) ) )
{
targetLock.direction = point_direction( targetLock.x , targetLock.y , x + 23 * (1-facing*2) * size , y - 10 * size );
}


if ( has_hit = 1 && moveup && special && air < max_jumps && ktime && !snapvanish )
{
	dontrepeat = 0
	snapvanish = 1;
	timer = 0;
	time = -1;
	state_type = "jump";
	attack_type = "none";
	char_upb();
}

if ( timer >= time - 1 )
{
	if snapvanish = 2
	snapvanish = 0
	dontrepeat = 0;
	attack_type = "none";
	if ( air > 0 )
	state_type = "jump";
	else
	state_type = "stand";
	timer = 0;
	time = -1;
}