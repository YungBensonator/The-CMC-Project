if ( state_type == "crouch" || state_type == "stand" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "dsmash";
  image_speed = 0;
  image_index = 1;
if !ktime
  sprite_index = dsmash_sprite;
else
  sprite_index = dsmash_spriteS;
  timer = 0;
  time = 58
  timer_speed = 1;
  charge_frame = 7;
  }
if timer < time {
	switch (timer)
	{
	case 2: image_index = 2; break;
	case 4: image_index = 3; break;
	case 6: image_index = 4; break;
	case 12: image_index = 5; break;
	case 14: image_index = 6; eff = create_blur(x,y,self.id);
                         eff.sprite_index = dsmash_effect;
                         eff.image_xscale = size*0.25*(1-facing*2);
                         eff.image_yscale = size*0.25;
                         eff.x = x + 25*size*(1-facing*2);
                         eff.y = y - 20*size;
                         eff.image_speed = 0;
                         eff.image_index = 0;
                         eff.alarm[0] = 50;
                         eff.snap = self.id;
                         eff.sprite_angle = 0;
                         eff.depth = depth - 0.1;
                         eff.visible = 1;
                         eff2 = create_blur(x,y,self.id);
                         eff2.sprite_index = dsmash_effect;
                         eff2.image_xscale = size*-0.25*(1-facing*2);
                         eff2.image_yscale = size*0.25;
                         eff2.x = x - 20*size*(1-facing*2);
                         eff2.y = y - 20*size;
                         eff2.image_speed = 0;
                         eff2.image_index = 0;
                         eff2.alarm[0] = 50;
                         eff2.snap = self.id;
                         eff2.sprite_angle = 0;
                         eff2.depth = depth - 0.1;
                         eff2.visible = 1; break;
	case 15: eff.image_index = 1; eff2.image_index = 1; break;
	case 16: image_index = 7; eff.image_index = 2; eff2.image_index = 2; break;
	case 18: eff.image_index = 3; eff2.image_index = 3; break;
	case 19: image_index = 8; break;
	case 21: eff.image_index = 4; eff2.image_index = 4; break;
	case 24: eff.image_index = 5; eff2.image_index = 5; break;
        case 27: with(eff) instance_destroy(); with(eff2) instance_destroy(); break;
	case 33: image_index = 9; break;
	case 45: image_index = 0; break;
	}
if timer = 8 {
	//sound_play(ground_hit_sound);
	sound_play(ha_voice); }
if timer = 14 {
        sound_play(blast_sound);
	//create_hitbox(16,30+facing*120,5,7+kaioken*0.5,25,20,smash_up,obj_spark_hit4,0.45,0.7,13,15,self.id,10,3);
	//create_hitbox2(16,150-facing*140,6,7+kaioken*0.5,25,20,smash_up,obj_spark_hit4,0.45,0.7,-10,15,self.id,10,3)
	create_hitbox(16,30+facing*120,6,6.4+kaioken*0.5,25,20,smash_up,obj_spark_hit4,0.8,0.9,35,23,self.id,10,3);
	create_hitbox2(16,150-facing*140,6,6.4+kaioken*0.5,25,20,smash_up,obj_spark_hit4,0.8,0.9,-30,23,self.id,10,3)
	}
if timer = 18 {
	hitbox.damage = 15
	hitbox.kbg = 6+kaioken
	hitbox.hitlag = 12
	hitbox.shield_damage = 15
	hitbox.sfx = smash_up
	hitbox.gfx = obj_spark_hit3
	hitbox.image_xscale = 1.5 //1,3
	hitbox.hitbox_x = 45-facing*90 //26
	hitbox.hitbox_y = 20
	hitbox2.damage = 12
	hitbox2.kbg = 6.2+kaioken
	hitbox2.hitlag = 8
	hitbox2.shield_damage = 15
	hitbox2.sfx = smash_up
	hitbox2.gfx = obj_spark_hit3
	hitbox2.image_xscale = 1.5 //1.3
	hitbox2.hitbox_x = -40+facing*80 //-26
	hitbox2.hitbox_y = 20;
	}
}
if (timer >= 14){ 
if (attack_success || target.object_index == obj_enemy) && dontrepeat = 0 && (obj_score_control.stocks[target.number-1] == 1){	
				if ((target.weight <= .22 && (!ktime && target.percent > 100 || ktime && target.percent > 85)) || (target.weight > .22 && target.weight < .3 && (!ktime && target.percent > 125 || ktime && target.percent > 110)) || (target.weight > .3 && (!ktime && target.percent > 135 || ktime && target.percent > 115))){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   
if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  dontrepeat = 0;
  }