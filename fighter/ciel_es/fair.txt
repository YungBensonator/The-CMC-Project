if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 53;
        timer_speed=1;
	sound_play(choose(dtilt3_voice,dtilt3_voice2,dtilt3_voice3,dtilt3_voice4))
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 3: image_index = 1; break;
	case 6: image_index = 2; break;
	case 9: image_index = 3; break;
	case 11: image_index = 4; break;
	case 15: image_index = 5; break;
	case 19: image_index = 6; break;
	case 23: image_index = 7; break;
	case 28: image_index = 8; break;
	case 33: image_index = 9; break;
	case 38: image_index = 10; break;
	case 41: image_index = 11; break;
	case 45: image_index = 12; break;
	case 49: image_index = 13; break;

      }
	  
	if timer = 6
	{
	sound_play(stiltswing_sound)
	}	
	  
	if timer = 11
	{
	fairvfx = create_spark ( 0 , 0 , fairvfx_sprite , 0 , .24*(1-facing*2) , .24  );
	fairvfx.alarm[0] = 6
	fairvfx.snap = self.id;
	fairvfx.owner = self.id;
	fairvfx.keepmain = self.keepmain;
	fairvfx.script = char_custom10;
	fairvfx.identifier = "utiltvfx"
	
	
	create_hitbox(9,angle_correct(350),3,6,18,9,es_slashhitsound2,obj_spark_slash4,2,1,-abs(place_x(125)),-place_y(210),self.id,4,3);
	hitbox.image_angle = angle_correct(330)
	hitbox.hitstun = 6
	
	create_hitbox2(9,angle_correct(325),2,6,18,9,es_slashhitsound4,obj_spark_slash4,1.8,1.5,abs(place_x(326)),-place_y(222),self.id,4,3);
	hitbox2.image_angle = angle_correct(0)
	hitbox.hitstun = 5

	}
	
	if (timer >= 14 and timer < 24) and special and moveup and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	attacking = 0;
    timer = 0;
    time = -1;
    char_upb();
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
	
	if air = 0 {
		state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=19; }
  }

if (timer < 15){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && target.offstage && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 45) || (target.weight > .22 && target.weight < .3 && target.percent > 55) || (target.weight > .3 && target.percent > 65)){
			    killspark = instance_create(enemy.x-120,enemy.y-115,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.5;
				killspark.image_yscale = size * 0.5;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 90
				freezer2.alarm[0] = 130
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x + 45;
				spark.camera_r = enemy.x - 45;
				spark.camera_u = enemy.y - 15;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
dontrepeat = 0;
  state_type = "jump";
  attack_type = "none";
  sprite_index = jump_sprite;

  image_index = 9;
  timer = 0;
  time = -1;
  }		

