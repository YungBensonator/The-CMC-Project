fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "run" || state_type = "stand" || state_type = "crouch" {
        state_type = "air_attack"
        attack_type = "downb"
        image_speed = 0
        sprite_index = downb_sprite
		
		if air = 0
		{
		timer = 0
        image_index=0
		sound_play(choose(downb_voice,downb_voice2,downb_voice3))
		}
		
		if air != 0
		{
		timer = 2
		image_index = 2
		sound_play(choose(downb_voice,downb_voice2,downb_voice3))
		}
		
		
        time = 36
		hspeed = 0
		vspeed = 0
		air_move = 0
		loopcounterdownb = 0
		special = 1
}

if ( timer < time )
    {
	
    switch ( timer )
    {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 4: image_index = 3; break;
	case 5: image_index = 4; break;
	case 8: image_index = 5; break;
	case 12: image_index = 6; break;
	case 16: image_index = 7; break;
	case 19: image_index = 8; break;
	case 22: image_index = 7; break;
	case 25: image_index = 8; break;
	case 28: image_index = 7; break;
	case 31: image_index = 8; break;
	
	case 52: image_index = 1; break;
	case 54: image_index = 2; break;
	case 58: image_index = 3; break;
	case 61: image_index = 4; break;	
	case 64: image_index = 3; break;
	case 67: image_index = 4; break;	
	case 70: image_index = 3; break;
	case 73: image_index = 4; break;	
	case 76: image_index = 3; break;
	case 79: image_index = 4; break;	
	case 82: image_index = 3; break;
	case 85: image_index = 4; break;	
	case 88: image_index = 3; break;
	
	case 153: image_index = 1; break;
	case 156: image_index = 2; break;
	case 159: image_index = 3; break;
	case 162: image_index = 4; break;
	case 165: image_index = 5; break;
    }
	
	if (timer <= 4) and air != 0
	{
	gravity_lock=2; 
	vspeed=0;
	}
	
	if timer = 5
	{
	hspeed=2*(1-facing*2)
	vspeed=-5;
	sound_play(jump_sound);
	
		if air = 0
		{
		duster = instance_create(x+7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale = -.1*(1-facing*2)
		duster.image_yscale = .1;
		
		duster = instance_create(x-7*(1-facing*2),y,obj_dust_effect);
		duster.image_xscale = .1*(1-facing*2)
		duster.image_yscale = .1;
		}
		
		else
		{
		spark = instance_create(x*size,y-7*size,obj_spark_shockwave);
		spark.image_xscale *= 0.5*size;
		spark.image_yscale *= 0.1*size;
		spark2 = instance_create(x*size,y-7*size,obj_spark_shockwave);
		spark2.image_xscale *= 0.7*size;
		spark2.image_yscale *= 0.2*size;
		}
	}
	
	
	
	//START OF MOVE LOGISTICS
	if timer = 34 and special
	{
	timer = 15
	loopcounterdownb +=1
	}
	
	if (timer >= 6 and timer < 35 ) and air = 0
	{
	sprite_index = downbland_sprite
	image_index = 0
	timer = 150
	time = 168
	state_type = "attack"
	sound_play(usmashland_sound);
	gfx_land_effect ( x , y , actual_width );
	}
	
	if (timer = 33 or (timer >= 15 and timer < 35 and loopcounterdownb >= 1)) and !special
	{
	sprite_index = downb_sprite2
	image_index = 0
	timer = 50
	time = 91
	}
	//END OF MOVE LOGISTICS
	
	
	
	//UNCHARGED GAWAIN
	
	if timer = 54
	{
	sound_play(stiltswing_sound);
	
	downbvfx = create_spark ( 0 , 0 , downbvfx_sprite , 0 , .24*(1-facing*2) , .24  );
	downbvfx.alarm[0] = 30
	downbvfx.owner = self.id;
	downbvfx.keepmain = self.keepmain;
	downbvfx.depth = depth-1;
	
	sound_play(crestspikesappear_sound);
	
	create_hitbox(12,angle_correct(330),6,5,24,12,es_slashhitsound3,obj_spark_slash4,1.2,1.8,abs(place_x(215)),-place_y(170),self.id,4,3);
	hitbox.image_angle = angle_correct(0)	
	}
	
	if (timer >= 50 and timer < 90) and air = 0
	state_type = "attack"
	
	if timer = 61
	{
	downbvfx.script = char_custom10;
	downbvfx.identifier = "regularvfx"
	}
	
	if timer = 64
	air_move = 1
	
	
	
	//CHARGED GAWAIN
	
	if timer = 151
	{
	downbvfx = create_spark ( 10 , 0 , downbvfx_sprite , 0 , .24*(1-facing*2) , .24  );
	downbvfx.alarm[0] = 40
	downbvfx.owner = self.id;
	downbvfx.keepmain = self.keepmain;
	downbvfx.depth = depth-1;
	sound_play(combinedbreunor_sound);
	
	
	create_hitbox(15,angle_correct(315),7,6,50,15,es_slashhitsound4,obj_spark_slash4,1.4,2,abs(place_x(270)),-place_y(80),self.id,4,3);
	hitbox.image_angle = angle_correct(0)	
	}
	
	if timer = 158
	{
	downbvfx.script = char_custom10;
	downbvfx.identifier = "regularvfx"
	}
	  
	  
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/
	
	if (timer >= 73 and timer < 90) and air = 0 {
        dontrepeat = 0;
		state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=13; }

}

if (timer >= 54){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && target.offstage && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 45) || (target.weight > .22 && target.weight < .3 && target.percent > 50) || (target.weight > .3 && target.percent > 60)){
			    killspark = instance_create(enemy.x-120,enemy.y-115,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.5;
				killspark.image_yscale = size * 0.5;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 90
				freezer2.alarm[0] = 130
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x + 45;
				spark.camera_r = enemy.x - 45;
				spark.camera_u = enemy.y - 15;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 

if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none";
    if air > 0
        {
		state_type = "jump";
		sprite_index = jump_sprite;
		image_index = 5;
		}
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
