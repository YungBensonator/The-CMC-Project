if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "dthrow";
image_speed = 0;
  sprite_index = down_attack_sprite;
  image_index = 0;
  timer = 1;
  time = 25;
  timer_speed = 1;
target.timer_speed = 0;
target.alarm[0] = 70
}

if timer < time {
		switch (timer) 
		{
  case 3: image_index = 1; break;
  case 6: image_index = 2; break;
  case 9: image_index = 3; break;
  case 12: image_index = 4; break;
  case 15: image_index = 5; break;
  case 19: image_index = 6; break;
  case 23: image_index = 7; break;
  case 27: image_index = 8; break;
  case 30: image_index = 9; break;
  case 33: image_index = 10; break;
  case 36: image_index = 11; break;
  }
  
	if timer = 3
	{
	downattackvfx = create_spark ( 0 , 0 , down_attack_spritevfx , .5 , .24*(1-facing*2) , .24  );
	downattackvfx.alarm[0] = 50
	downattackvfx.snap = self.id;
	downattackvfx.owner = self.id;
	downattackvfx.keepmain = self.keepmain;
	downattackvfx.identifier = "regularvfx"
	 
	sound_play(choose(fthrow_voice1,fthrow_voice2,fthrow_voice3))
	
	}
	
	if timer = 6
	{
	sound_play(stiltswing_sound);
	}
	
	if timer = 11
	{
	downattackvfx.image_speed = 0
	downattackvfx.script = char_custom10;
	}
  
	if timer = 12
	{
	create_hitbox(12,angle_correct(70),5,1.5,24,12,es_slashhitsound3,obj_spark_slash4,1.6,.7,abs(place_x(318)),-place_y(83),self.id,7,5);
	hitbox.image_angle = angle_correct(0)
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	vfxthing.snap = self.id;
	vfxthing.owner = self.id;
	vfxthing.keepmain = self.keepmain;
	vfxthing.script = char_custom10;
	}
	*/

}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
