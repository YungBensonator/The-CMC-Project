slide = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 1;
  attack_type = "sideb";
  time = 40;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = run_sprite;
  image_index = 0;
  image_speed = 0.5;
  timer_speed = 1;
  temp = 0;
  charge = 0;
  }

if ( timer < 11 && air == 0 )
  hspeed *= 0.5;
if timer >= 11 && air = 0
hspeed = 0
if timer > 30
force_edge_grab = 1
if ( timer == 11 )
  {
  if ( special || ( ai && charge < 100 && random ( 10 ) < 1 ) )
    timer = 6;
  }


switch ( timer )
  {
  case 2:
    sound_play ( sideb_voice );
    instance_create ( x - 7 * size * ( 1 - facing * 2 ) , y - 15 * size , obj_spark_effect );
    break;
  case 6:
    if ( stop_sounds[0] )
      sound_stop ( stop_sounds[0] );
    var a;
    a = size;
    size = 1.5 - charge * 0.1;
    sound_play ( sideb2_sound );
    size = a;
    image_speed = 0.5;
    charge += 1;
    if ( charge > 10 )
      { 
      instance_create ( x - ( 9 - random ( 3 ) ) * size * ( 1 - facing * 2 ) , y - 17 * size + random ( 3 ) , obj_spark_effect );
      image_blend = c_red;
      flashing = 1;
      alarm[7] = 3;
      charge = 10;
      }
    //if ( ( facing == 1 && moveright ) || ( facing == 0 && moveleft ) )
    //  charge = 0;
    spark = instance_create(x-6+facing*12,y,obj_spark);
    spark.snap = self.id;
    spark.sprite_index = spr_dust2;
    spark.image_xscale = 0.6-facing*1.2;
    spark.image_yscale = 0.45;
    spark.image_speed = 1;
    spark.image_alpha = 0.75;
    spark.depth = 0;
    break;
  case 11:
    sound_stop ( stop_sounds[0] );
    air_move = 0;
    sound_play ( sideb_sound );
    sprite_index = sideb_sprite;
    image_speed = 1;
    temp = ( 5 + charge * 0.5 ) * size * ( 1 - facing * 2 );
    time = 28 + charge * 4;
    create_hitbox ( 3 + charge , angle_correct (50), 5.1 + charge * 0.25 , 2.1 + charge * 0.55 , 14 , 4 , punch4 , obj_spark_hit4 , 0.63 , 0.66 , 0 , 8.53 , self.id , time - 16 , 0 );
    break;
  }

if ( timer >= 11 && timer < time - 10 )
  {
  if ( ( facing == 1 && moveright ) || ( facing == 0 && moveleft ) )
    temp *= 0.99;
    else
    temp *= 1;
  hspeed = temp;
  if ( timer mod 4 == 0 && air == 0 )
    {
    duster = instance_create ( x , y , obj_dust_effect );
    if ( hspeed > 0.25 )
      duster.facing = 0;
      else
    if ( hspeed < -0.25 )
      duster.facing = 1;
      else
      duster.facing = facing;
    duster.image_xscale *= 0.4;
    duster.image_yscale *= 0.4;
    }
  if ( attack_success )
    {
    image_speed = 0;
    shieldup = 0;
    sprite_index = dair2_sprite;
    attack_type = "dair";
    air_move = 0;
    with ( hitbox ) instance_destroy();
    hspeed = 0;
    vspeed = 0;
    air_move = 0;
    timer = 0;
    time = 22;
    temp = 1;
    exit;
    }
  if ( ( next_to_rwall && hspeed > 0 ) || ( next_to_lwall && hspeed < 0 ) )
    {
    sound_play ( thud1_sound );
    if ( air == 0 )
      state_type = "stand";
      else
      state_type = "jump";
    attack_type = "none";
    screen_shake ( 2 , 4 );
    if ( hspeed > 0 )
      instance_create ( x + actual_width , y - actual_height * 0.5 , obj_right_impact );
    if ( hspeed < 0 )
      instance_create ( x - actual_width , y - actual_height * 0.5 , obj_left_impact );
    timer = 0;
    time = -1;
    exit;
    }
  }

if ( timer >= time - 15 && timer < time - 10 )
  {
  temp *= 0.5;
  hspeed = temp;
  image_speed = 0.25;
  }
if ( timer == time - 10 )
  {
  with ( hitbox ) instance_destroy();
  hspeed = 0;
  sprite_index = land_sprite;
  }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 3;
	image_speed = 0;
	}
	image_blend = c_white;
    timer = 0;
    time =-1;
    }