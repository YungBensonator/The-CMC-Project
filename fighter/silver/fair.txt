if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "fair";
  image_speed = 0;
  image_index = 0;
  sprite_index = fair_sprite;
  timer = 0;
  time = 27;
  timer_speed = 1;
  lcancel = 1;
  }

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 7: image_index = 3; break;
  case 10: image_index = 4; play_attack_voice(); sound_play(attack_sound2); break;
  case 13: image_index = 5; break;
  case 16: image_index = 6; break;
  case 19: image_index = 7; break;
  }

switch ( timer )
      {
    case 4:  
    blur = create_itmpnt_blur(/*Attacker*/self.id, /*Texture*/blur_texture, /*Start frame*/2, /*Apex Frame*/4, /*End frame*/6, /*CCW*/0, /*girth*/8.5, 15);
    blur.index = 0;
    blur.image_index = 1;
    blur.depth -= 0.1;
    blur.push_x = 9 *size*(1-facing*2);
    blur.v_squish = 4;
    break;
	case 7:  
    blur.index = 1;
    blur.image_index = 2;
    break;
    case 10:
    blur.index = 2;
    blur.image_index = 2;
    break;
    case 13:
    blur.index = 3;
    blur.image_index = 2;
    break;
	case 16: 
    blur.index = 4;
    blur.image_index = 2;
    break;
    case 17:   
    blur.image_index = 2;
    break;
    case 18: 
    blur.start_index = 1;
    blur.image_index = 3;
    break;
    case 19:
    blur.index = 5;
    blur.image_index = 3; 
    break;
	case 20: 
    blur.start_index = 2;
    blur.image_index = 3; 
    break;
    case 21:  
    blur.start_index = 2;
    blur.image_index = 4; 
    break;
	case 22:
    blur.start_index = 3;
    blur.image_index = 4; 
    break;
    case 23:
    blur.start_index = 4;
    blur.image_index = 4; 
    break;
    case 24: with (blur) instance_destroy(); break;
      }

if timer = 10
{
    create_hitbox ( 8 , 25 + facing * 130 , 4.5 , 5.5 , 10 , 7 , magic2 , obj_spark_hit2 , 0.92 , 0.55 , 16.65 , 17.55 , self.id , 6 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}

if air = 0 {
	  dontrepeat = 0;
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    timer=0;
    time=10;
}

if (timer >= 10 && obj_score_control.stocks[target.number-1] == 1){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 120) || (target.weight > .22 && target.weight < .3 && target.percent > 130) || (target.weight > .3 && target.percent > 140)){
			    killspark = instance_create(enemy.x-120,enemy.y-125,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.5;
				killspark.image_yscale = size * 0.5;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 90
				freezer2.alarm[0] = 130
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x + 45;
				spark.camera_r = enemy.x - 45;
				spark.camera_u = enemy.y - 15;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	 



if ( timer >= time - 1 )
  {
  dontrepeat = 0
  attack_type = "none";
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }