if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "uair";
  image_speed = 0;
  image_index = 0;
  sprite_index = uair_sprite;
  timer = 0;
  time = 25;
  timer_speed = 1;
  lcancel = 1;
  has_hit = 0;
  canceltemp = 0;
  }
  
if has_hit = 1 and timer >= 8 and timer < 100 
    canceltemp = 1    
	
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 6: image_index = 3; sound_play(swingsound4); sound_play(choose(attack_voice5,attack_voice6,attack_voice7,attack_voice8,attack_voice8,attack_voice8)); break;
  case 8: image_index = 4; break;
  case 11: image_index = 5; break;
  case 15: image_index = 6; break;
  case 20: image_index = 7; break;
  }

if timer = 8
{
    create_hitbox ( 8 , 60 + facing * 60 , 4.5 , 6.5 , 8 , 6 , solhit2 , obj_spark_hit3 , 0.97 , 0.58 , 15.20 , 33.63 , self.id , 3 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 23.20;
	hitbox.execute_on_hit = "attacker.has_hit = 1;"
}

if (timer >= 8 and canceltemp = 1 and (special = 1)){
		if special = 1 and attacking{
    		state_type = "jump"
    		timer = 0
    		time = -1
    		exit;
    	}else if special = 1 and !attacking{
    		state_type = "jump"
    		timer = 0
    		time = -1
    		exit;
    	}
	} 

if (air == 0) 
{
    state_type = "land";
    attack_type = "none";
    sprite_index = land_sprite;
    timer=0;
    time = 12; 
}  

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }