fast_fall = 0;
fast_fall_temp = 0;
gravity = 0;
gravity_lock = 1;
vspeed = 0;

if ( state_type == "stand" || state_type == "run" || state_type == "jump" || state_type == "shielding" )
  {
  hspeed = 0;
  size = csize;
  state_type = "air_attack";
  attack_type = "c9";
  image_speed = 0;
  image_index = 0;
  sprite_index = b_sprite;
  timer = 0;
  time = 118;
  timer_speed = 1;
  intangible = 1;
  final_smashes += 1;
  smash_power = 0;
  air_move = 0;
  sound_play(chadfs_voice1);
  sound_play(super_sound);
  freezer = instance_create(x,y,obj_freeze);
  freezer.alarm[0] = 64;
  freezer.dontpause = self.id;
  }

switch ( timer )
  {
  case 1: image_index = 1; break;
  case 3: image_index = 2; break; 
  case 65: image_index = 3; sound_play(chadfs_voice2); break;
  case 67: image_index = 4; break;
  case 70: image_index = 5; break;
  case 73: image_index = 6; break;
  case 77: image_index = 7; break;
  case 81: image_index = 8; break;
  case 85: image_index = 9; break;
  case 89: image_index = 10; break;
  case 109: image_index = 11; break;
  case 112: image_index = 12; break;
  case 115: image_index = 13; break;
  }


if timer = 67
{
pillar = create_projectile (2,15+facing*150,4.5,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar.type = 1;
pillar.tempx = 30;
pillar.hit_stun = 7;
pillar.di = 0;
pillar.weight_kb = 1;
pillar.priority += 4;
pillar.owner = self.id;
pillar.sprite_index = gunflame_spriteD;
pillar.image_xscale = 0.2 * (1-facing*2) * size;
pillar.image_yscale = 0.2 * size;
sound_play(fafnir_sound);
}

if timer = 77
{
pillar2 = create_projectile (2,15+facing*150,4.5,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar2.type = 1;
pillar2.tempx = 50;
pillar2.hit_stun = 7;
pillar2.di = 0;
pillar2.weight_kb = 1;
pillar2.priority += 4;
pillar2.owner = self.id;
pillar2.sprite_index = gunflame_spriteD;
pillar2.image_xscale = 0.2 * (1-facing*2) * size;
pillar2.image_yscale = 0.2 * size;
sound_play(fafnir_sound);
}

if timer = 87
{
pillar3 = create_projectile (2,15+facing*150,4.5,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar3.type = 1;
pillar3.tempx = 70;
pillar3.hit_stun = 7;
pillar3.di = 0;
pillar3.weight_kb = 1;
pillar3.priority += 4;
pillar3.owner = self.id;
pillar3.sprite_index = gunflame_spriteD;
pillar3.image_xscale = 0.2 * (1-facing*2) * size;
pillar3.image_yscale = 0.2 * size;
sound_play(fafnir_sound);
}

if timer = 97
{
pillar4 = create_projectile (2,15+facing*150,4.5,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar4.type = 1;
pillar4.tempx = 90;
pillar4.hit_stun = 7;
pillar4.di = 0;
pillar4.weight_kb = 1;
pillar4.priority += 4;
pillar4.owner = self.id;
pillar4.sprite_index = gunflame_spriteD;
pillar4.image_xscale = 0.2 * (1-facing*2) * size;
pillar4.image_yscale = 0.2 * size;
sound_play(fafnir_sound);
}

if timer = 107
{
pillar5 = create_projectile (2,15+facing*150,4.5,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar5.type = 1;
pillar5.tempx = 110;
pillar5.hit_stun = 7;
pillar5.di = 0;
pillar5.weight_kb = 1;
pillar5.priority += 4;
pillar5.owner = self.id;
pillar5.sprite_index = gunflame_spriteD;
pillar5.image_xscale = 0.2 * (1-facing*2) * size;
pillar5.image_yscale = 0.2 * size;
lockedx = pillar5.x;
lockedy = pillar5.y;
sound_play(fafnir_sound);
}

if timer >= 107 and timer < 200 and pillar5.hit = 1
{

timer = 200;
time = 513;
sprite_index = dash_attack_start_sprite;
image_index = 0;

target1 = pillar5.target;
target1.depth = -17;
target1.time = 510;
target1.timer = 0;
target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
target1.x = x + 150 * (1-facing*2) * size + hspeed;
target1.y = self.y;
target.y = self.y;

dummy = create_spark(0,0,self.id);
dummy.depth = -17;
dummy.number = -number;
dummy.image_xscale = image_xscale;
dummy.image_yscale = image_yscale;
dummy.x = self.x;
dummy.y = self.y;
dummy.alarm[0] = 225;

targetclone = create_spark(0,0,self.id);
targetclone.depth = -16;
targetclone.sprite_index = target.sprite_index;
targetclone.image_index = target.image_index;
targetclone.number = -target.number;
targetclone.image_xscale = target.image_xscale;
targetclone.image_yscale = target.image_yscale;
targetclone.x = target.x;
targetclone.y = target.y;
targetclone.alarm[0] = 225;
targetclone.image_alpha = 1;

nightmare = create_spark(0,0,self.id);
nightmare.depth = -15;
nightmare.image_alpha = 0;
nightmare.alarm[0] = 225;
nightmare.x = view_xview - 70;
nightmare.y = view_yview - 70;
nightmare.sprite_index = black_screen_sprite;
nightmare.image_yscale = view_hview * 70;
nightmare.image_xscale = view_hview * 70;

zoom = instance_create ( 0 , 0 , obj_camerazoom );
zoom.camera_l = x - 8;
zoom.camera_r = x + 8;
zoom.camera_u = y - 4 - actual_height;
zoom.camera_d = y + 4;
zoom.camera_boundary_zoom = 200;
zoom.alarm[0] = 225;

duster = instance_create ( 0 , 0 , obj_freeze );
duster.dontpause = self.id;
duster.dontpause = dummy;
duster.dontpause = targetclone;
duster.dontpause = nightmare;
duster.dontpause = self.id;
duster.alarm[0] = 225;
}

if timer > 200 and timer < 211
{
nightmare.image_alpha += 0.1;
}

if timer > 200 and timer < 426
{
vspeed = 0;
target1.time = 510;
target1.timer = 0;
target1.sprite_index=target1.flinch_sprite
target1.state_type = "flinch"
target1.speed = 0;
target1.gravity_lock = 1;
target1.ignore_physics = 1;
target1.x = x + 150 * (1-facing*2) * size + hspeed;
target1.y = self.y;
target1.depth = -16;
}

dummy.sprite_index = sprite_index;
dummy.image_index = image_index;
dummy.x = self.x;
dummy.y = self.y;

zoom.camera_l = x - 8;
zoom.camera_r = x + 8;
zoom.camera_u = y - 4 - actual_height;
zoom.camera_d = y + 4;

if timer > 210 and timer < 426
{

 aaa = after_image ( 3 , c_red , 0.5 );
 aaa.image_xscale *= 1.15;
 aaa.image_yscale *= 1.15;
 aaa.depth = -16
 aaa.x += -1 + floor ( random ( 3 ) );
 aaa.y += -1 + floor ( random ( 3 ) );
}

switch(timer)
{
case 213: image_index = 1; sound_play(chadfs_voice3); break;
case 321: sprite_index = chadfs_sprite; image_index = 2; break;
case 323: image_index = 3; sound_play(fafnir_sound); break;
case 323: case 324: case 325: case 326: case 327: case 328: case 329: case 330: case 331: case 332: case 333: case 334: case 335: case 336: case 337: case 338: case 339: case 340: case 341: case 342: case 344: case 346: case 348: case 350: x += 5 * (1-facing*2) * size; break;
case 343: sprite_index = usmash_sprite; image_index = 2; x += 5 * (1-facing*2) * size; break;
case 345: image_index = 3; x += 5 * (1-facing*2) * size; break;
case 347: image_index = 4; x += 5 * (1-facing*2) * size; break;
case 349: image_index = 5; x += 2 * (1-facing*2) * size; break;
case 351: image_index = 6; break;
case 353: image_index = 7; sound_play(chadfs_voice4); break;
case 355: image_index = 8; sound_play(tyrantrave_sound); break;
case 357: image_index = 9; break;
case 507: image_index = 10; break;
case 510: image_index = 11; break;
}

if timer = 213
{
       dragoninstallfx = create_blur(x,y,self.id);
       dragoninstallfx.sprite_index = dragoninstall_fx;
       dragoninstallfx.image_index = 0;
       dragoninstallfx.image_speed = 0;
       dragoninstallfx.image_xscale = 0.5 * (1-facing*2) * size;
       dragoninstallfx.image_yscale = 0.5 * size;
       dragoninstallfx.depth = -16;
	   dragoninstallfx.x = x * size;
	   dragoninstallfx.y = y + 2 * size;
	   
	   sound_play(super_sound2);
	   
}

if timer = 355
{
duster = instance_create(x,y,obj_dust_effect);
duster.facing = facing; 
duster.image_xscale = 0.67 * (1 - facing * 2) * size;
duster.image_yscale = 0.60 * size;
duster.depth = -17.5;
duster.image_blend = c_red;

screen_shake(0.8,12)

pillar6 = create_projectile(2,361,4.8,0,-1,3,solhit3,obj_spark_fire1,1.0,1.0,tempx,0,self.id,150,char_custom10);
pillar6.type = 1;
pillar6.tempx = 10;
pillar6.hit_stun = 7;
pillar6.di = 0;
pillar6.weight_kb = 1;
pillar6.priority += 4;
pillar6.depth = 17.5;
pillar6.owner = self.id;
pillar6.sprite_index = gunflame_spriteD;
pillar6.image_xscale = 0.2 * (1-facing*2) * size;
pillar6.image_yscale = 0.2 * size;

    tyrantravefx1 = create_blur(x,y,self.id);
    tyrantravefx1.sprite_index = tyrantrave_fx;
    tyrantravefx1.image_index = 0;
    tyrantravefx1.image_speed = 0.26;
    tyrantravefx1.image_xscale = 0.6 * (1-facing*2) * size;
    tyrantravefx1.image_yscale = 0.6 * size;
    tyrantravefx1.depth = -17.5;
    tyrantravefx1.x = target.x;
	tyrantravefx1.y = target.y - target.actual_height * 0.5;

}

if timer >= 323 and timer <= 350
{
if timer mod 4 = 0
{
       grandviper_fx = create_blur(x,y,self.id);
       grandviper_fx.sprite_index = chadfs_fx2;
       grandviper_fx.image_index = 0;
       grandviper_fx.image_speed = 0.5;
       grandviper_fx.image_xscale = 0.2 * (1-facing*2) * size;
       grandviper_fx.image_yscale = 0.2 * size;
       grandviper_fx.depth = -17.5;
	   grandviper_fx.x = x * size;
	   grandviper_fx.y = y + 2 * size;
}
}

 switch ( timer )
      {
	case 215: dragoninstallfx.image_index = 0; break;
	case 217: dragoninstallfx.image_index = 1; break;
	case 219: dragoninstallfx.image_index = 2; break;
	case 221: dragoninstallfx.image_index = 3; break;
	case 223: dragoninstallfx.image_index = 4; break;
	case 225: dragoninstallfx.image_index = 5; break;
	case 227: dragoninstallfx.image_index = 0; break;
	case 229: dragoninstallfx.image_index = 1; break;
	case 231: dragoninstallfx.image_index = 2; break;
	case 233: dragoninstallfx.image_index = 3; break;
	case 235: dragoninstallfx.image_index = 4; break;
	case 237: dragoninstallfx.image_index = 5; break;
	case 239: dragoninstallfx.image_index = 0; break;
	case 241: dragoninstallfx.image_index = 1; break;
	case 243: dragoninstallfx.image_index = 2; break;
	case 245: dragoninstallfx.image_index = 3; break;
	case 247: dragoninstallfx.image_index = 4; break;
	case 249: dragoninstallfx.image_index = 5; break;
	case 251: dragoninstallfx.image_index = 0; break;
	case 253: dragoninstallfx.image_index = 1; break;
	case 255: dragoninstallfx.image_index = 2; break;
	case 257: dragoninstallfx.image_index = 3; break;
	case 259: dragoninstallfx.image_index = 4; break;
	case 261: dragoninstallfx.image_index = 5; break;
	case 263: dragoninstallfx.image_index = 0; break;
	case 265: dragoninstallfx.image_index = 1; break;
	case 267: dragoninstallfx.image_index = 2; break;
	case 269: dragoninstallfx.image_index = 3; break;
	case 271: dragoninstallfx.image_index = 4; break;
	case 273: dragoninstallfx.image_index = 5; break;
	case 275: dragoninstallfx.image_index = 0; break;
	case 277: dragoninstallfx.image_index = 1; break;
	case 279: dragoninstallfx.image_index = 2; break;
	case 281: dragoninstallfx.image_index = 3; break;
	case 283: dragoninstallfx.image_index = 4; break;
	case 285: dragoninstallfx.image_index = 5; break;
	case 287: dragoninstallfx.image_index = 0; break;
	case 289: dragoninstallfx.image_index = 1; break;
	case 291: dragoninstallfx.image_index = 2; break;
	case 293: dragoninstallfx.image_index = 3; break;
	case 295: dragoninstallfx.image_index = 4; break;
	case 297: dragoninstallfx.image_index = 5; break;
	case 299: dragoninstallfx.image_index = 0; break;
	case 301: dragoninstallfx.image_index = 1; break;
	case 303: dragoninstallfx.image_index = 2; break;
	case 305: dragoninstallfx.image_index = 3; break;
	case 307: dragoninstallfx.image_index = 4; break;
	case 309: dragoninstallfx.image_index = 5; break;
	case 311: dragoninstallfx.image_index = 0; break;
	case 313: dragoninstallfx.image_index = 1; break;
	case 315: dragoninstallfx.image_index = 2; break;
	case 317: dragoninstallfx.image_index = 6; break;
	case 319: dragoninstallfx.image_index = 7; break;
	case 321: dragoninstallfx.image_index = 8; break;
	}

if timer = 323
{
with (dragoninstallfx) {instance_destroy();}
}

if timer = 423
{

spark = instance_create(x+size*(1-facing*2)*(30),y-size*39,obj_spark_explode1);
spark.image_xscale *= 4.5*size
spark.image_yscale *= 4.5*size

duster = instance_create(x,y,obj_dust_effect);
duster.facing = facing; 
duster.image_xscale = 0.3 * (1 - facing * 2) * size;
duster.image_yscale = 0.3 * size;
duster.depth = -17.5;
duster.image_blend = c_red;

screen_shake(0.8,12);

sound_play(boom_sound);
}

if timer = 427
{
    create_hitbox ( 35 , 15 + facing * 150 , 8.8 , 9.3 , -1 , 30 , solhit3 , obj_spark_fire1 , 2 , 2 , 30 , 39 , self.id , 4 , 4 );
}


if timer = 436
{
with (chadfsfx2) {instance_destroy();}
}

if ( timer >= time - 1 )
  {
  smash_power = 0;
  attack_type = "none";
  intangible = 0;
  if ( air > 0 )
    state_type = "jump"; 
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }