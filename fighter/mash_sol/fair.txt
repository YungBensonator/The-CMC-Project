if ( state_type == "jump" )
  {
  vspeed -= 0.1;
  state_type = "air_attack";
  attack_type = "fair";
  image_speed = 0;
  image_index = 0;
  sprite_index = fair_sprite;
  timer = 0;
  time = 34;
  timer_speed = 1;
  lcancel = 1;
  has_hit = 0;
  canceltemp = 0;
  }

if has_hit = 1 and timer >= 9 and timer < 100 
    canceltemp = 1  

switch ( timer )
  {
  case 3: image_index = 1; break;
  case 6: image_index = 2; sound_play(swingsound3); sound_play(choose(attack_voice2,attack_voice4,attack_voice7,attack_voice8)); break;
  case 9: image_index = 3; break;
  case 12: image_index = 4; break;
  case 15: image_index = 5; break;
  case 23: image_index = 6; break;
  case 27: image_index = 7; break;
  case 31: image_index = 8; break;
  }

if timer = 9
{
    create_hitbox ( 8 , 25 + facing * 130 , 4.6 , 5.8 , 10 , 8 , solslash1 , obj_spark_slash2 , 1.36 , 0.73 , 12.16 , 14.63 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.execute_on_hit = "attacker.has_hit = 1;"
    create_hitbox2 ( 8 , 25 + facing * 130 , 4.6 , 5.8 , 10 , 8 , solslash1 , obj_spark_slash2 , 0.48 , 0.71 , 28.31 , 34.01 , self.id , 3 , 3 );
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox2.execute_on_hit = "attacker.has_hit = 1;"
}

if (timer >= 9 and canceltemp = 1 and (special = 1)){
		if special = 1 and attacking{
    		state_type = "jump"
    		timer = 0
    		time = -1
    		exit;
    	}else if special = 1 and !attacking{
    		state_type = "jump"
    		timer = 0
    		time = -1
    		exit;
    	}
	} 


if (air == 0) 
{
    state_type = "land";
    attack_type = "none";
    sprite_index = land_sprite;
    timer=0;
    time = 10; 
}

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
    state_type = "jump";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }