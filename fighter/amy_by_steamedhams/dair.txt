if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0;
        sprite_index = dair_sprite;
        image_index=-0;
        timer = 0;
        time = 50;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 14: image_index = 4; break;
	case 16: image_index = 5; break;
	case 18: image_index = 6; break;
	case 20: image_index = 0; break;
	case 22: image_index = 1; break;
	case 24: image_index = 2; break;
	case 26: image_index = 3; break;
	case 28: image_index = 4; break;
	case 30: image_index = 5; break;
	case 32: image_index = 6; break;
	case 34: image_index = 0; break;
	case 36: image_index = 1; break;
	case 38: image_index = 2; break;
	case 40: image_index = 3; break;
	case 42: image_index = 4; break;
	case 44: image_index = 5; break;
	case 46: image_index = 6; break;
	case 48: image_index = 0; break;

      }

    if ( timer = 12 ) 
      {
    play_attack_voice()
	//sound_play(swingsnd2);
	create_hitbox(11,265+facing*10,5.1,5.3,12,6,kick2,obj_spark_hit4,1.5,0.8,0,7,self.id,22,1);
      }

    if timer = 12 or timer = 17 or timer = 22
	sound_play(hammerswing2)

    if ( timer = 16 )
	{
	hitbox.damage = 7
	hitbox.bkb = 4.3
	hitbox.kbg = 4.1
	hitbox.dir = 35+facing*110
	}


    if ( timer >=12 ) and ( timer <= 38 ){
	vspeed = 6
	after_image(4,c_red,0.3)
	after_image(4,c_white,0.3)
	}

    if hitbox.hit = 1{
        sprite_index = dair_rebound_sprite;
    	timer = 47
	if timer = 47
	vspeed = -3
	}
	
	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=18; }
  }

  if (timer >= 12 && timer != 16){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0 && target.offstage){
				if ((target.weight <= .22 && target.percent > 30) || (target.weight > .22 && target.weight < .3 && target.percent > 40) || (target.weight > .3 && target.percent > 50)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	    

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
	if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		
        
