if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "uair";
        image_speed = 0.;
        sprite_index = uair_sprite;
        image_index=0;
        timer = 0;
        time = 20;
        timer_speed=1;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 6: image_index = 1; break;
	case 8: image_index = 2; break;
	case 10: image_index = 3; break;
	case 12: image_index = 4; break;
	case 14: image_index = 5; break;
	case 16: image_index = 6; break;
	case 18: image_index = 7; break;
	case 20: image_index = 8; break;


      }

    if ( timer = 10 ) 
      {
    play_attack_voice()
	sound_play(hammerswing3);
	create_hitbox(11,75+facing*30,5.6,5.65,15,8,kick2,obj_spark_hit4,0.8,0.8,18,10,self.id,13,2);
	if vspeed > -1
	vspeed = -2
      }

    if ( timer = 12 ) 
      {

	hitbox.hitbox_x = size*(20-facing*40)
	hitbox.hitbox_y = 23*size
	}

    if ( timer = 14 ) 
      {
	hitbox.hitbox_x = size*(18-facing*36)
	hitbox.hitbox_y = 28*size
	}

    if ( timer = 16 ) 
      {
	hitbox.hitbox_x = size*(15-facing*30)
	hitbox.hitbox_y = 36*size
	}

    if ( timer = 18 ) 
      {
	hitbox.hitbox_x = size*(10-facing*20)
	hitbox.hitbox_y = 39*size
	}

    if ( timer = 20 ) 
      {
	hitbox.hitbox_x = size*(-2+facing*4)
	hitbox.hitbox_y = 41*size
	}

	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=9; }
  }
if (timer >= 10){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 140) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 160)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	    
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		
        
