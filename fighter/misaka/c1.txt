

if hit = 1{
	time = 60
	if timar = 0
	timar = 6
	hspeed = lehspeed-facing*(lehspeed*2)
}

if timar > 0
timar -= 1

if timar = 1
hit = 0



on_floor = 0;
on_platform = 0;
next_to_lwall = 0;
next_to_rwall = 0;

while ( collision_line ( x , y , x + actual_width , y - ac2 , obj_leftwall , 1 , 1 ) || collision_line ( x , y - actual_height , x + actual_width , y - ac2 , obj_leftwall , 1 , 1 ) )
    x -= 1;
while ( collision_line ( x , y , x - actual_width , y - ac2 , obj_rightwall , 1 , 1 ) || collision_line ( x , y - actual_height , x - actual_width , y - ac2 , obj_rightwall , 1 , 1 ) ) 
    x += 1;
while ( collision_rectangle ( x - 2 , y - 2 , x + 2 , y , obj_floor , 1 , 1 ) )
    y -= 1;
if ( vspeed >= 0 )
    while ( collision_rectangle ( x - 2 , y - 2 , x + 2 , y , obj_platform , 1 , 1 ) )
	y -= 1;

if ( collision_rectangle ( x - 2 , y - 2 , x + 2 , y + 1 , obj_floor , 1 , 1 ) )
    on_floor = 1;
if ( vspeed >= 0 && collision_rectangle ( x - 2 , y - 2 , x + 2 , y + 1 , obj_platform , 1 , 1 ) )
    on_platform = 1;
if ( collision_line ( x + 1 , y , x + actual_width + 1 , y - ac2 , obj_leftwall , 1 , 1 ) || collision_line ( x + 1 , y - actual_height , x + actual_width + 1 , y - ac2 , obj_leftwall , 1 , 1 ) ) 
  next_to_rwall = 1;
if ( collision_line ( x - 1 , y , x - actual_width - 1 , y - ac2 , obj_rightwall , 1 , 1 ) || collision_line ( x - 1 , y - actual_height , x - actual_width - 1 , y - ac2 , obj_rightwall , 1 , 1 ) )  
  next_to_lwall = 1;



if ( timer >= 1 )
    vspeed += 0.15;
	
if ( vspeed > 3.5 )
    vspeed = 3.5;

if ( on_floor || on_platform )
  {
    vspeed = 0;
  }


if ( hspeed != 0 && ( next_to_lwall || next_to_rwall ) ){
	    hspeed = -hspeed;
		image_xscale = -image_xscale
		}






