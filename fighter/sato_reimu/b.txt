if (state_type = "stand" || state_type = "crouch" || state_type = "run" || state_type = "jump")
{
		special = 1;
		hspeed = 0;
        state_type = "air_attack";
        attack_type = "b";
        image_speed = 0;
        sprite_index = b_sprite2;
        //sprite_index = card_sprite;
        image_index=0;
        timer = 0;
        time = 25;
        timer_speed=1;
		use_ball = 1
		if instance_exists(china_ball){
			use_ball = 0
		special = 1
		charge_bonus = 4
		
		vspeed *= 0.15
		hspeed = 0
		time = 51
		sprite_index = b_sprite3
		}
		
if timer <= 5 && ((moveleft && !facing) || (moveright && facing)) {
            facing = 1-facing;
        hspeed *= -1;
          }		
		 
}

if ( timer < time )
{
	
if use_ball = 0{

    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 28: image_index = 2; break;
	case 31: image_index = 3; break;
	case 34: image_index = 4; break;
	case 42: image_index = 5; break;
	case 44: image_index = 6; break;
	case 46: image_index = 7; break;
	  }
    
	if timer = 8 and special = 0{
		timer = 27
		charge_bonus = 0
	}
	
	if timer = 9{
		sound_play(charge_sound);
		charge_eff = create_spark(0,22,self.id);
		charge_eff.sprite_index = card_eff_sprite;
		charge_eff.image_speed = 0;
		charge_eff.image_alpha = 1;
		charge_eff.image_xscale = image_xscale * 0.35 ;
		charge_eff.image_yscale = image_yscale * 0.35 ;
		charge_eff.depth = depth - 3;
		charge_eff.xscale_add = 0.02 * (1-facing*2);
		charge_eff.yscale_add = 0.02
		charge_eff.alarm[0] = 12;	
		charge_eff.alpha_add = -0.1
	}
	
	
	if timer < 36{
		gravity = 0
		gravity_lock = 1
		air_move = 0
		if moveright and air > 0{
			hspeed = 0.5
		}else if moeveleft and air > 0{
			hspeed = -0.5
		}else{
			hspeed = 0
		}
	}
	
	if timer = 32
	play_attack_voice()
	if timer = 32 or timer = 34 or timer = 36 or timer = 38 or (charge_bonus = 4 and (timer = 40 or timer = 42 or timer = 44 or timer = 46)){
		//play_attack_voice()
	    sound_play(b_sound)

		screw = create_projectile(1,0+facing*180,3,1,4,1,reimuhit2,obj_spark_hit1,0,0,0,20,self.id,45+ charge_bonus*4,-1);//char_custom1);
		screw.sprite_index = card_sprite;
		screw.image_speed = 0
		screw.image_xscale = max(image_xscale* 1,image_xscale* 1 * (-1));
		screw.image_yscale = image_yscale* 1;
		screw.image_alpha = 0.9
		screw.hit = 0
		screw.depth = depth - 1
		screw.facing = facing
		screw.moving_object = 0
		screw.ignore_yin_yang_ball = 1
		if air = 0
			screw.direction = 0 + facing*180
		else{
			screw.dir = 90
			if timer mod 4 = 0
			screw.direction = 330-facing*120
			else
			screw.direction = 300-facing*60
		}
		screw.speed = 4 + charge_bonus*0.25
		screw.image_angle = screw.direction
		if charge_bonus = 0
		screw.dir = 361
		
		
	}
}


if use_ball = 1{

switch (timer)
		{
		case  00: image_index =  0; break;
		case  03: image_index =  1; break;
		case  06: image_index =  2; break;
		case  09: image_index =  3; break;
		case  12: image_index =  4; break;
		case  15: image_index =  5; break;
		case  18: image_index =  6; break;
		case  21: image_index =  7; break;
		}
		
	if ( timer = 12)
		{
			if (!instance_exists(china_ball)) and floattime >= maxfloattime*0.05
			{   
			
			sound_play(cardub_voice)
			sound_play(yinyang_sound)
			
		floattime -= maxfloattime*0.5
    china_ball = create_projectile(5,90,2,6,40,14,reimuenergy,obj_spark_hit4,0,0,30,30,self.id,60 * 30,char_custom11);
	china_ball.sprite_index = yingyang_sprite;
	//china_ball.mask_index = ball_mask;
	china_ball.image_speed = 0
	china_ball.image_index = 0
	china_ball.image_xscale = max(image_xscale,-image_xscale)
	china_ball.image_yscale = image_yscale * 1
	china_ball.hit = 2
	china_ball.image_alpha = 1
	china_ball.depth = depth + 5
	china_ball.facing = facing
	china_ball.alarm[0] = 60 *30
	china_ball.leTimer = 0
	china_ball.speed = 2
	china_ball.direction = 45+facing*90
	china_ball.is_yin_yang_ball = 1
	china_ball.reimu = self.id
	//china_ball.lePlatform.alarm[0] = 600;
				
				//yingyang = create_projectile(5,90,4,4,4,10,reimuenergy,obj_spark_hit4,0.8,0.8,18,28,self.id,9999,yinyang_c4);
				//yingyang.sprite_index = yingyang_sprite;
				//yingyang.vspeed = -6;
				//yingyang.image_xscale = 0.5;
				//yingyang.image_yscale = 0.5;
				//yingyang.hit = 0;
				//yingyang.max_hits = 2;
			}
			else 
			{
				instance_create ( x+(18-facing*36) , y-28 , obj_smoke );
			}
		}
	
}
	
}

   
if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 4;
	}
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }