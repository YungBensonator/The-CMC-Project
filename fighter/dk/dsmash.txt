if state_type = "stand" || state_type = "run" || state_type = "crouch"  {
        hspeed = 0;
        state_type = "attack";
        attack_type = "dsmash";
        image_speed = 0;
        sprite_index = dsmash_sprite;
        image_index=0;
        timer = 0;
        time = 47;
        timer_speed=1;
        charge_frame = 7
}
        if timer < time {
             state_type = "attack";
			 switch ( timer ) {
	case 2: image_index = 1; break;
	case 5: image_index = 2; break;
	case 7: image_index = 3; break;
	case 9: image_index = 4; break;
	case 12: image_index = 5; break;
	case 16: image_index = 6; break;
	case 19: image_index = 7; break;
	case 22: image_index = 8; break;
	case 25: image_index = 11; break;
	case 28: image_index = 12; break;
	case 31: image_index = 13; break;
	case 34: image_index = 14; break;
	case 38: image_index = 15; break;
	case 42: image_index = 16; break;
	case 45: image_index = 17; break;

			 }
            if timer = 12 {
                sound_play(dsmash_voice);
                sound_play(dsmash_sound1);
                create_hitbox(17,110-facing*40,7.55,7,23,10,punch4,obj_spark_hit2,0.9,0.9,27,38,self.id,7,3); 
                hitbox.shield_stun = 1.2
                create_hitbox2(17,70+facing*40,7.55,7,23,10,punch4,obj_spark_hit2,0.9,0.9,-29,38,self.id,7,3); 
                hitbox2.shield_stun = 1.2
            }
            if timer = 16 {
                sound_play(dsmash_sound2);
                duster = instance_create(x+(8 - facing*16)*size,y,obj_dust_effect);
                duster.facing = 1-facing;
                duster = instance_create(x-(8 - facing*16)*size,y,obj_dust_effect);
                duster.facing = facing; 
                screen_shake(0.8,12)
                hitbox.damage = 16*size;
                hitbox.kbg = 6.75*size;
                hitbox.hitbox_x = size*(-35 + facing*70);
                hitbox.hitbox_y = 11*size;
                hitbox.shield_damage = 21;
                hitbox.shield_stun = 1;
                hitbox2.damage = 16*size;
                hitbox2.kbg = 6.75*size;
                hitbox2.hitbox_x = size*(31 - facing*62);
                hitbox2.hitbox_y = 11*size;
                hitbox2.shield_damage = 21;
                hitbox2.shield_stun = 1;
            }
        }

 if (timer >= 12){
if (attack_success || target.object_index == obj_enemy) && ( dontrepeat = 0) && target.object_index == obj_enemy && (obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 110) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 140)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}

}

      
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
