if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "bair";
        image_speed = 0;
        sprite_index = bair_sprite;
        image_index=0;
        timer = 0;
        time = 31;
        timer_speed=1;
}
if timer < time && state_type = "air_attack" {
            attacking = 0;
            state_type = "air_attack";
			switch ( timer ) {
			case 1: image_index = 1; break;
			case 3: image_index = 2; break;
			case 5: image_index = 3; break;
			case 7: image_index = 4; break;
			case 9: image_index = 5; break;
			case 14: image_index = 6; break;
			case 17: image_index = 7; break;
			case 20: image_index = 8; break;
			case 23: image_index = 9; break;
			case 26: image_index = 10; break;
			case 29: image_index = 11; break;
			}
            if timer = 7 {
                sound_play(swing_sound2);
                play_attack_voice()
                create_hitbox(11,144-facing*108,5,6.4,16,9,kick3,obj_spark_hit2,1.15,0.75,-26,13,self.id,10,2);
				var burst;
    //78, 36
	burst = instance_create(place_x(5)+x,place_y(20)+y,obj_jab_burst);
    burst.snap = self.id;
	burst.image_xscale = xsize * 0.4;
    burst.image_yscale = ysize * 0.4;
		hitbox.hit_stun = 12
            }
			if timer = 9
            {
            hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -28
            hitbox.hitbox_y = size * 24
            }
            if timer = 11 {
                image_speed = 0
                hitbox.damage = 7*size;
                hitbox.kbg = 2.4*size;
                hitbox.shield_damage = round(10*size);
                hitbox.hitlag_frames = round(7*size);
                hitbox.sfx = kick2;
            }
        if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=9; 
        }
}  

if (timer <= 10){
if (attack_success || target.object_index == obj_enemy) && ( dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 130) || (target.weight > .22 && target.weight < .3 && target.percent > 140) || (target.weight > .3 && target.percent > 155)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }


if timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
        
