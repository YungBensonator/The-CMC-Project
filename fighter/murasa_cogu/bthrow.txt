if time = -1 {
hspeed = 0;
state_type = "air_attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = ssmash_sprite;
image_index=0;
timer = 0;
time = 45;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 50
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 0: image_index = 0; break;
	case 3: image_index = 1; break;
	case 16: image_index = 2; break;
	case 17: image_index = 3; break;
	case 19: image_index = 4; break;
	case 21: image_index = 5; break;
	case 23: image_index = 6; break;
	case 25: image_index = 7; break;
	case 27: image_index = 8; break;
	case 29: image_index = 9; break;
	case 31: image_index = 10; break;
	case 33: image_index = 11; break;
	case 35: image_index = 12; break;
	case 37: image_index = 13; break;
      }
	  
	  if timer = 17 {
		  sound_play(swingsnd3);
		  target.x = x + 47.19 * (1-facing*2)
		  target.y = y - 34.32
	  }
	  
	  if timer = 19 {
	target.x = x + 67.08 * (1-facing*2)
	target.y = y - 24.57
	  }
	  
	  if timer = 21 {
    target.x = x + 95.16 * (1-facing*2)
	target.y = y - 9.75
	create_hitbox ( 6 , 90 , 0 , 0 , 1 , 11 , anchorhard , obj_spark_hit4 , 1.20 , 1.21 , 47.19 , 34.32 , self.id , 6 , 1 );
    hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 95.16
    hitbox.hitbox_y = size * 9.75
    hitbox.image_xscale = size * 1.12
    hitbox.image_yscale = size * 1.25
	screen_shake(5,-7);
	sound_play(shakeheavy_sound);
	hitbox.di = 0
	  }
	  
	  if timer = 23 {
	target.x = x + 89.31 * (1-facing*2)
	target.y = y - 15.21
	sound_play(swingsnd3);
	  }
	  
	  if timer = 25 {
		  target.x = x + 72.54 * (1-facing*2)
		  target.y = y - 27.30 
	  }
	  
	  if timer = 27 {
		  target.x = x + 55.77 * (1-facing*2)
		  target.y = y - 31.20
	  }
	  if timer = 29 {
	  target.x = x + 33.54 * (1-facing*2)
	  target.y = y - 50.31
	  }
	  
	  if timer = 30 {
	  create_throw_box( 8 , 165-facing*150 , 6.2 , 5.7 , 1 , 1 , anchorhard , obj_spark_hit4 , 0.81 , 0.87 , 33.54 , 50.31 , self.id , 2 , 2 );
	  }
	  
    
  }

  
        if (timer >= 30){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1  && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 125) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 145)){
killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  
    

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	facing = 1-facing
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
