	air_move = 0;
	fast_fall = 0;
    fast_fall_temp = 0;
if ((state_type = "stand" || state_type = "run" || state_type = "crouch" || state_type = "jump" ) && cansideb = 0)
{
		if cansideb = 1 {exit;}
        hspeed = 0;
        state_type = "air_attack";
        attack_type = "sideb";
        image_speed = 0;
        sprite_index = sideb_sprite;
        image_index=0;
        timer = 0;
		time = 53;
		target = 0;
		timermod1 = 0;
		timermod2 = 0;
}
////////////////Grab and Whiff////////////////

if timer >= 32 and timer <= 46 and timermod1 = 1 {
    image_index += 1;
    if image_index >= 5 {
        image_index = 1;}
}
if timer >= 203 and timer <= 209 and timermod2 = 1 {
    image_index += 1;
    if image_index >= 3 {
        image_index = 1; }
}
	
if(timer < time )
{
	switch ( timer )
	{
		case 0: image_index = 1; break;
		case 4: image_index = 0; break;
		case 8: image_index = 2; break;
		case 10: image_index = 3; break;
		case 13: image_index = 4; break;
		case 18: image_index = 5; break;
		case 23: image_index = 6; break;
		case 27: image_index = 7; break;
		case 30: sprite_index = bthrow_sprite; image_index = 2; break;
		case 32: image_index = 1; break;
		case 47: image_index = 0; break;
		case 49: image_index = 6; break;
		case 55: sprite_index = sideb_sprite; image_index = 1; break;
		case 58: sprite_index = down_sprite; image_index = 5; break;
		case 61: image_index = 6; break;
		case 64: image_index = 7; break;
	}

if  (timer > 13 && timer < 27) 
{
            if air = 0 
			{
				hspeed *= 0.87;
				shieldup = 0;
				attacking = 0;
				special = 0;
				movejump = 0;
				grab = 0;
				smash = 0;
				state_type = "tumble";
				attack_type = "none";
				timer = 0;
				time = -1;
				shakex = 0;
				sprite_index = down_sprite;
				exit;
            }
}
	if timer = 50 { spriteP = 0;}
	if timer >= 100 { spriteP = 1;}
	if timer = 31 { timermod1 = 1; }
	if ( timer >= 31 && timer < 49 ) and air = 0 { state_type = "attack"; }
	if timer = 48 and air = 0 { timer = 55; time = 69;}
	if timer > 54 and timer < 71 {  state_type = "attack"; }
	
	if timer > 9 && timer < 26 {
	force_edge_grab = 1 }
	
	if timer = 9 {
	duster = instance_create(x+1.7*size,y-0.37*size,obj_dust_effect);
	duster.facing = 1;
	duster.image_xscale = 0.17*size*(1-facing*2);
	duster.image_yscale = 0.14*size;
	duster.image_alpha = 0.53;
	duster2 = instance_create(x-1.7*size,y-0.37*size,obj_dust_effect);
	duster2.facing = 0;
	duster2.image_xscale = 0.17*size*(1-facing*2);
	duster2.image_yscale = 0.14*size;
	duster2.image_alpha = 0.53;	}
	
	if timer = 10 {
	vspeed = -2.4*size;
	hspeed = 3.2*size*(1-facing*2); }
	
	if timer = 19 {
	vspeed += 1.5*size;
	hspeed = 3.9*size*(1-facing*2); }
	
	if timer = 11 {
		cograb = create_homing_bubble(0.79,1.16,14.25,19,self.id,11);
		cograb.snap = self.id;
	}
	if ( instance_exists(proj) ) {
		cograb.x = x+size*(14.25-facing*28.5)+hspeed;
		cograb.y = y-17*size;
	}

	if timer = 27 {sound_play(spin_sound);}
    if timer = 33 {
	create_hitbox(7,33+facing*114,6.8,3.7,14,6,punch2,obj_spark_hit2,0.79,0.82,3.80,14.25,self.id,9,1);
    }
	if ( timer > 35 && timer < 56 ) and air = 0 {
	hspeed = 4.5*size*(1-facing*2); }
	if timer = 60 { hspeed = 0;}

	if(timer >= 13 && timer < 23)
	{
	if ( target > 0 )
	if ( target.intangible = 0 && target.attack_type != "final_smash" && target.state_type != "down" )
	      {
				sound_play(catchsnd);
				sound_play(catch_sound);
				instance_create(x+4.7-facing*9.4*size,y+3*size,obj_grab_spark);
				target.state_type = "air_flinch";
				target.attack_type = "none";
				target.timer = 0;
				target.time = 4;
				target.timer_speed = 0;
				target.sprite_index = target.flinch3_sprite;
				target.ignore_physics = 1;
				target.alarm[0] = 2;
				target.facing = 1-facing*1;
				timer = 100;
				time = 165;
	      }
	}
	
////////////////Flight////////////////

	if(timer < 100)
	{
		special = 0;
	}
	if timer >= 100 {
		target.ignore_physics = 1;
		target.state_type = "air_flinch";
		target.timer = 0;
		target.time = 4;
		target.depth=3;
		target.sprite_index = target.flinch3_sprite;
			target.alarm[0] = 2;
		}

if (timer = 100)
{
	sprite_index = sideb2_sprite;
	
	image_speed = 0.5;
}

if timer >= 100 && timer <= 165 {
	target.x = x+4.75*size*(1-facing*2);
	target.y = y+12.95*size;
	
	vspeed = -2*size;
	if moveright
	hspeed += 2.50
	if moveleft
	hspeed += -2.50
	if hspeed < -2*size
    hspeed = -1.50*size
    if hspeed > 2*size
    hspeed = 1.50*size
	if moveup
	vspeed = -2.24
	if movedown
	vspeed = -1.6
	
	if timer = 104 || timer = 112 || timer = 118 || timer = 124 || timer = 130 || timer = 136 || timer = 142 || timer = 148 || timer = 154 || timer = 160 {
	sound_play(fly_sound); }
	
	
	if ((timer > 120 && timer < 152 && (special or attacking)) || timer = time-2 ) {
			timer = 200;
			time = 223; }
}

////////////////Stomp////////////////

if(timer = 200)
{
	sprite_index = sideb3_sprite;
	image_index = 0;
	image_speed = 0;
}

if(timer >= 200)
{

		switch ( timer )
		{
		case 200: image_index = 0; break;
		case 203: image_index = 1; break;
		case 210: image_index = 3; break;
		case 213: image_index = 4; break;
		case 216: image_index = 5; break;
		case 219: image_index = 6; break;
		}

	if image_index = 0 {
		target.x = x+5.70*size*(1-facing*2);
		target.y = y+6.80*size; }
	if image_index = 1 {
		target.x = x+12.35*size*(1-facing*2);
		target.y = y-3.20*size; }
	if image_index = 2 {
		target.x = x+12.35*size*(1-facing*2);
		target.y = y-3.20*size; }


	if timer = 200 {
	timermod2 = 1;
	sound_stop(fly_sound); }
	
	if timer >= 203 && timer <= 209 {
	vspeed = 9.9*size
	if (moveright && !facing) || (moveleft && facing) {
	hspeed = 1.5*size*(1-facing*2); }
	if (moveleft && !facing) || (moveright && facing) {
	hspeed = -1.5*size*(1-facing*2); }
	if air = 0 {
	timer = 210; } 
	}
	
	if(timer = 210) {
		target.x = x+12.35*size*(1-facing*2);
		target.y = y-3.20*size;
		create_throw_box(10,64+facing*52,5.3,1.1,1,1,kick3,obj_spark_hit3,0.59,0.67,7.60,7.60,self.id,3,2);
		hitbox.weight_kb = 1;
		hitbox.hit_stun = 40;
	}
	if attack_success {
	vspeed = -2.77*size;
	hspeed = -0.33*size*(1-facing*2);} }

}


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
		attack_type = "none";
		cansideb = 1
		if air > 0 {
        state_type = "jump";
		if spriteP = 1 {sprite_index = mid_jump_sprite;} else if spriteP = 0 {sprite_index = jump_sprite;} }
    else {
        state_type = "stand"; }
		timer = 0;
		time =-1;
		if ai
			special = 0;
    } 



