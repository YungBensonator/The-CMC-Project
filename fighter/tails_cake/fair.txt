temp_no_hurtbox = 1
if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 40;
        timer_speed=1;
}
        if timer < time {
		switch ( timer )
{
  case 1: image_index = 1; shakex=-0.50*size*(1-facing*2); image_yscale *= 1.02; break;
  case 2: shakex=-0.75*size*(1-facing*2); image_yscale *= 1.04; break;
  case 3: image_index = 2; shakex=-0.50*size*(1-facing*2); image_yscale *= 1.04; break;
  case 4: image_index = 3; shakex=0*size*(1-facing*2); image_yscale *= 1.02; break;
  case 5: image_index = 4; break;
  case 6: image_index = 5; shakex=0.50*size*(1-facing*2); break;
  case 7: image_index = 6; shakex=2*size*(1-facing*2); image_xscale *= 1.12; image_yscale *= 1.02; break;
  case 8: shakex=1*size*(1-facing*2); image_xscale *= 1.02; break;
  case 9: image_index = 7; shakex=0*size*(1-facing*2); break;
  case 10: shakex=-0.25*size*(1-facing*2); break;
  case 11: image_index = 8; shakex=0*size*(1-facing*2); break;
  case 14: image_index = 7; break;
  case 17: image_index = 8; break;
  case 20: image_index = 7; break;
  case 21: image_xscale *= 0.96; break;
  case 22: image_xscale *= 0.92;  break;
  case 23: image_index = 5; image_xscale *= 0.96; image_yscale *= 0.98; break;
  case 25: image_index = 14; image_xscale *= 0.98;  break; break;
  case 27: image_index = 15; break;
  case 29: image_index = 16; break;
  case 31: image_index = 17; break;
  case 33: image_index = 18; break;
  case 50: image_index = 9; break;
  case 53: image_index = 10; shakex=2*size*(1-facing*2); image_xscale *= 1.12; image_yscale *= 1.02; break;
  case 54: shakex=1*size*(1-facing*2); image_xscale *= 1.02; break;
  case 56: image_index = 11; break;
  case 59: image_index = 12; break;
  case 62: image_index = 13; break;
  case 65: image_index = 11; break;
  case 68: image_index = 12; break;
  case 71: image_index = 13; break;
  case 74: image_index = 14; break;
  case 76: image_index = 15; break;
  case 78: image_index = 16; break;
  case 80: image_index = 17; break;
  case 82: image_index = 18; break;
}
            if timer = 7 {
                if random(10) > 1.5
                    play_attack_voice()
					sound_play(attacksnd1);
					create_hitbox(4,90,3.05,0,14,4,punch2,obj_spark_hit2,1.05,0.67,19,7,self.id,4,2);
					hitbox.di = 0.3;
					hitbox.weight_kb = 1;
					hitbox.hit_stun = 8;
					}
			if timer > 6 && timer < 19 and attack_success {
					vspeed += -0.07*size;
					if timer >= 14 && timer <= 18 {
					timer = 50
					time = 89 } }
			if timer = 31 or timer = 80 {
					spark = instance_create(x-0.65+facing*1.30*size,y-10*size,obj_spark_effect);
					spark.snap = self.id;}
			if timer = 54 {
					sound_play(attacksnd1);
					create_hitbox(7,32+facing*116,4.8,7.5,14,10,punch4,obj_spark_hit4,1.09,0.72,18,5,self.id,3,2);
					hitbox.hitlag_frames = 10;
					hitbox.di = 0.5;
					}

            if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=12; }

        }  
        temp_no_hurtbox = 1
if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 40;
        timer_speed=1;
}
        if timer < time {
		switch ( timer )
{
  case 1: image_index = 1; shakex=-0.50*size*(1-facing*2); image_yscale *= 1.02; break;
  case 2: shakex=-0.75*size*(1-facing*2); image_yscale *= 1.04; break;
  case 3: image_index = 2; shakex=-0.50*size*(1-facing*2); image_yscale *= 1.04; break;
  case 4: image_index = 3; shakex=0*size*(1-facing*2); image_yscale *= 1.02; break;
  case 5: image_index = 4; break;
  case 6: image_index = 5; shakex=0.50*size*(1-facing*2); break;
  case 7: image_index = 6; shakex=2*size*(1-facing*2); image_xscale *= 1.12; image_yscale *= 1.02; break;
  case 8: shakex=1*size*(1-facing*2); image_xscale *= 1.02; break;
  case 9: image_index = 7; shakex=0*size*(1-facing*2); break;
  case 10: shakex=-0.25*size*(1-facing*2); break;
  case 11: image_index = 8; shakex=0*size*(1-facing*2); break;
  case 14: image_index = 7; break;
  case 17: image_index = 8; break;
  case 20: image_index = 7; break;
  case 21: image_xscale *= 0.96; break;
  case 22: image_xscale *= 0.92;  break;
  case 23: image_index = 5; image_xscale *= 0.96; image_yscale *= 0.98; break;
  case 25: image_index = 14; image_xscale *= 0.98;  break; break;
  case 27: image_index = 15; break;
  case 29: image_index = 16; break;
  case 31: image_index = 17; break;
  case 33: image_index = 18; break;
  case 50: image_index = 9; break;
  case 53: image_index = 10; shakex=2*size*(1-facing*2); image_xscale *= 1.12; image_yscale *= 1.02; break;
  case 54: shakex=1*size*(1-facing*2); image_xscale *= 1.02; break;
  case 56: image_index = 11; break;
  case 59: image_index = 12; break;
  case 62: image_index = 13; break;
  case 65: image_index = 11; break;
  case 68: image_index = 12; break;
  case 71: image_index = 13; break;
  case 74: image_index = 14; break;
  case 76: image_index = 15; break;
  case 78: image_index = 16; break;
  case 80: image_index = 17; break;
  case 82: image_index = 18; break;
}
            if timer = 7 {
                if random(10) > 1.5
                    play_attack_voice()
					sound_play(attacksnd1);
					create_hitbox(4,90,3.05,0,14,4,punch2,obj_spark_hit2,1.05,0.67,19,7,self.id,4,2);
					hitbox.di = 0.3;
					hitbox.weight_kb = 1;
					hitbox.hit_stun = 8;
					}
			if timer > 6 && timer < 19 and attack_success {
					vspeed += -0.07*size;
					if timer >= 14 && timer <= 18 {
					timer = 50
					time = 89 } }
			if timer = 31 or timer = 80 {
					spark = instance_create(x-0.65+facing*1.30*size,y-10*size,obj_spark_effect);
					spark.snap = self.id;}
			if timer = 54 {
					sound_play(attacksnd1);
					create_hitbox(7,32+facing*116,4.8,7.5,14,10,punch4,obj_spark_hit4,1.09,0.72,18,5,self.id,3,2);
					hitbox.hitlag_frames = 10;
					hitbox.di = 0.5;
					}

            if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=12; }

        }  

if (timer >= 54){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 120) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 145)){
		    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    if air > 0 {
        state_type = "jump"; }
    else {
        state_type = "stand"; }
    timer = 0;
    time =-1;
    }
        
