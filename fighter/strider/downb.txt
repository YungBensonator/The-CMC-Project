if downbtemp = 1 {exit;}
if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  attack_type = "downb";
  time = 35;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = b_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  }

fast_fall = 0
fast_fall_temp = 0
  
switch (timer)
{
    case 10: sprite_index = downb_sprite; image_index = 0; break;
	case 12: image_index = 1; break;
    case 14: image_index = 2; break;
    case 16: image_index = 3; break;
    case 18: image_index = 4; break;
    case 20: image_index = 5; break;
    case 22: image_index = 6; intangible = 1; break;
	case 24: sprite_index = downb_sprite2; image_index = 0; break;
	case 26: image_index = 1; break;
	case 28: image_index = 2; break;
	case 30: image_index = 3; break;
	case 32: image_index = 4; break;
	case 34: image_index = 5; intangible = 0; break;
}

if timer = 1 && air!=0 
        vspeed = -0.9
    if vspeed > 0.1 && (timer < 22 || timer > 24 && timer < 100) {
        vspeed = 0.1
        temp_fall_speed = 0
    }

if timer = 22
{
if ai = 1 && ai_state = "recover" {
            movedown = 0
            moveup = 1
            if !(abs(obj_edge_right.x-x)<8) && !(abs(obj_edge_left.x-x)<8) && !collision_point(x+8-facing*16,y-5,obj_wall,1,1) {
            if x < room_width/2 {
                moveright = 1
                moveleft = 0 }
            else {
                moveright = 0
                moveleft = 1 } 
                }
            }
        if moveright = 1 //&& !collision_point(x+1,y,obj_wall,1,1) 
            hspeed=56
        if moveleft = 1//&& !collision_point(x-1,y,obj_wall,1,1)
            hspeed=-56
        if moveup = 1 //&& !collision_point(x,y-1,obj_ceiling,1,1) 
            vspeed=-56
        else if movedown {
            vspeed = 56
            temp_fall_speed = vspeed - fall_speed
            }
	  spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_white
        spark.image_alpha = 0.8
		sound_play(warp_sound);
}

if timer = 24 {
        speed=0;
	air_move = 1;
	spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_white
        spark.image_alpha = 0.8
		sound_play(downb_voice);
	}

if (timer >= 5 && timer <= 10 )
{
if (special = 1)
{
timer = 100;
time = 142;
sprite_index = downb_sprite3;
}
}

if (timer >=100 && timer <=121 || timer >=114 && timer < 116)
{
if air > 0
		{
		air_move = 0;
		speed = 0;
		gravity = 0;
        gravity_lock = 1;
		}
}

switch (timer)
{
    case 100: image_index = 0; break;
	case 102: image_index = 1; break;
    case 104: image_index = 2; break;
    case 106: image_index = 3; y = y - 5 * size; break;
	case 107: y = y - 5 * size; break;
    case 108: image_index = 4; y = y - 5 * size; break;
	case 109: y = y - 5 * size; break;
    case 110: image_index = 5; y = y - 5 * size; break;
	case 111: y = y - 5 * size; break;
    case 112: image_index = 6; y = y - 5 * size; break;
	case 113: y = y - 5 * size; break;
	case 114: sprite_index = downb_kick_sprite; image_index = 0; case 107: y = y - 5 * size; break;
	case 115: y = y - 5 * size; break;
	case 116: image_index = 1; vspeed = 4; break;
	case 118: image_index = 2; break;
	case 120: image_index = 3; break;
	case 122: image_index = 4; intangible = 0; break;
	case 124: kickfx.image_index = 0; break;
	case 126: kickfx.image_index = 1; break;
	case 128: kickfx.image_index = 2; break;
	case 130: kickfx.image_index = 3; break;
	case 132: kickfx.image_index = 0; break;
	case 134: kickfx.image_index = 1; break;
	case 136: kickfx.image_index = 2; break;
	case 138: kickfx.image_index = 3; break;
	case 140: kickfx.image_speed = 1; break;
}

if timer = 106
{
clone1 = instance_create(x,y-25*size,obj_spark);
clone1.sprite_index = downb_clonedisappear2_sprite;
clone1.image_index = 0;
clone1.image_speed = 0.4;
clone1.image_xscale = 0.4*(1-facing*2)*size;
clone1.image_yscale = 0.4*size;
clone1.number = -number;
clone1.hspeed = 4*(1-facing*2)*size;
clone1.vspeed = -2;

clone2 = instance_create(x,y-25*size,obj_spark);
clone2.sprite_index = downb_clonedisappear2_sprite;
clone2.image_index = 0;
clone2.image_speed = 0.4;
clone2.image_xscale = -0.4*(1-facing*2)*size;
clone2.image_yscale = 0.4*size;
clone2.number = -number;
clone2.hspeed = -4*(1-facing*2)*size;
clone2.vspeed = -2;
sound_play(warpkick_sound);
}

if timer = 112
{
if ai = 1 && ai_state = "recover" {
            movedown = 0
            moveup = 1
            if !(abs(obj_edge_right.x-x)<8) && !(abs(obj_edge_left.x-x)<8) && !collision_point(x+8-facing*16,y-5,obj_wall,1,1) {
            if x < room_width/2 {
                moveright = 1
                moveleft = 0 }
            else {
                moveright = 0
                moveleft = 1 } 
                }
            }
        if moveright = 1 //&& !collision_point(x+1,y,obj_wall,1,1) 
            hspeed=112
        if moveleft = 1//&& !collision_point(x-1,y,obj_wall,1,1)
            hspeed=-112
        else if moveup = 1 //&& !collision_point(x,y-1,obj_ceiling,1,1) 
            vspeed=-112
	  spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_white
        spark.image_alpha = 0.8
}

if timer = 114 {
	spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_white
        spark.image_alpha = 0.8
		sound_play(downb_voice2);
	}

if timer = 116
{
clone3 = instance_create(x+95*(1-facing*2)*size,y-10*size,obj_spark);
clone3.sprite_index = downb_clone2_sprite;
clone3.image_index = 0;
clone3.image_speed = 0.4;
clone3.image_xscale = -0.4*(1-facing*2)*size;
clone3.image_yscale = 0.4*size;
clone3.number = -number;
clone3.hspeed = -4*(1-facing*2)*size;
clone3.vspeed = 2;

clone4 = instance_create(x,y-10*size,obj_spark);
clone4.sprite_index = downb_clone3_sprite;
clone4.image_index = 0;
clone4.image_speed = 0.4;
clone4.image_xscale = 0.4*(1-facing*2)*size;
clone4.image_yscale = 0.4*size;
clone4.number = -number;
clone4.hspeed = 4*(1-facing*2)*size;
clone4.vspeed = 2;
}

if timer = 122
{
create_hitbox ( 10 , 290 - facing * 40 , 3.5 , 5.2 , 10, 7 , kick3 , obj_spark_hit4 , 0.6 , 0.6 , 5 , 5 , self.id , 18 , 3 ); 
create_hitbox2 ( 10 , 290 - facing * 40 , 3.5 , 5.2 , 10, 7 , kick3 , obj_spark_hit4 , 0.5 , 0.5 , 0 , 20 , self.id , 18 , 3 ); 
kickfx = instance_create(x,y,obj_spark);
kickfx.sprite_index = kickfx_sprite;
kickfx.image_index = 0;
kickfx.image_speed = 0;
kickfx.image_xscale = 0.4*(1-facing*2)*size;
kickfx.image_yscale = 0.4*size;
kickfx.snap = self.id
kickfx.depth = depth - 1;
kickfx.x = x + 1 * (1 - facing * 2) *size;
kickfx.y = y - 20*size ; 
}

if timer > 122
{
if air = 0 
			    {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
                time=14; 
				}
}

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air == 0 )
  {
    state_type = "stand";
	}
    else
	{
	if attack_success = 1
	{
    state_type = "jump";
	}
	else
	{
	state_type = "jump";
	}
    }
  timer = 0;
  time = -1;
  temp_fall_speed = 0
  downbtemp = 1;
  can_die = 1
  }