if ( state_type == "stand" || state_type == "run" )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "ssmash";
  image_speed = 0;
  image_index = 0;
  sprite_index = elephant_ssmash_sprite;
  timer = 0;
  time = 70;
  charge_frame = 8;
  transformspark = instance_create(x,y-13 * size,obj_spark);
  transformspark.sprite_index = b_transform_effect_sprite;
  transformspark.image_index = 0
  transformspark.image_speed = 1.5
  transformspark.depth = -6;
  transformspark.snap = self.id
  transformspark.image_xscale = 0.37 * size
  transformspark.image_yscale = 0.37 * size
  }
switch ( timer )
  {
  case 4: image_index=1;  break;
  case 18: image_index=2;  break;
  case 20: image_index=3;  break;
  case 21: image_index=4;  break;
  case 35: image_index=3;  break;
  case 40: image_index=2;  break;
  case 45: image_index=1;  break;
  case 51: image_index=0;  break;
  }
if ( timer = 19 )
{
duster = instance_create(x,y,obj_dust_effect)
duster.facing = facing
duster.image_xscale = 0.35
duster.image_yscale = 0.3
dasheffect = instance_create(x-6*(1-facing*2),y-20,obj_spark)
dasheffect.sprite_index = elephant_dash_sprite;
dasheffect.image_index = 0
dasheffect.image_speed = 0.5
dasheffect.alarm[0] = 16
dasheffect.image_xscale = 0.25*(1-facing*2)
dasheffect.image_yscale = 0.3
}
if ( timer = 20 )
{
sound_play(attacksnd3);
sound_play(elephant_ssmash_voice);
create_hitbox(20,25+facing*130,7.15,5.5,40,18,kick3,obj_spark_special1,0.75,1.5,26,19,self.id,15,3);
hitbox.charge_dmg = 1.3;
hitbox.charge_kb = 0.7;
}
if timer >= 20 {
dasheffect.x = x-6*(1-facing*2)
dasheffect.y = y-20
}
if timer = 14
heavy_armor = 12
if timer = 35
heavy_armor = 0
if timer >= 20 && timer < 35 && timer mod 3 = 0 {
	hspeed = 4*(1-facing*2)*size
        after_image(3,c_blue,0.55)
        spark = instance_create(x*size,y-15*size,obj_spark_shockwave)
        spark.image_xscale *= 0.5*size
        spark.image_yscale *= 0.5*size
        spark.image_blend = c_white
        spark.image_alpha = 0.65
duster = instance_create(x,y,obj_dust_effect)
duster.facing = facing
duster.image_xscale = 0.35
duster.image_yscale = 0.25
duster.image_alpha = 0.9
	}
if ( timer = 42 )
{
hspeed = 1.5 * (1-facing*2) * size;
}
if ( timer = 43 )
{
hspeed = 1 * (1-facing*2) * size;
}
if ( timer = 44 )
{
hspeed = 0.5 * (1-facing*2) * size;
}
if ( timer = 45 )
{
hspeed = 0;
}
if (timer >= 20 && obj_score_control.stocks[target.number-1] == 1){
if (attack_success || target.object_index == obj_enemy && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 135)){
								                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
}

if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  transformspark = instance_create(x - 1 + facing * 2 * size,y-13 * size,obj_spark);
  transformspark.sprite_index = b_transform_effect_sprite;
  transformspark.image_index = 0
  transformspark.image_speed = 1.5
  transformspark.depth = -6;
  transformspark.snap = self.id
  transformspark.image_xscale = 0.3 * size
  transformspark.image_yscale = 0.3 * size
  }