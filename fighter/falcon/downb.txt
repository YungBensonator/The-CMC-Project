air_move = 0
if state_type = "jump"  {
    hspeed = 0
    state_type = "air_attack";
    attack_type = "downb";
    image_speed = 0.25;
    sprite_index = downb_air_sprite;
    image_index=0;
    timer = 0;
    time = 57;
    timer_speed=1;
    air = 1
}
else if state_type = "stand" || state_type = "crouch" || state_type = "run" {
    hspeed = 0
    state_type = "air_attack";
    attack_type = "downb";
    image_speed = 0;
    sprite_index = downb_sprite;
    image_index=0;
    timer = 0;
    time = 61;
    timer_speed=1;
}
if timer = 2
    sound_play(downb_voice)
if sprite_index = downb_air_sprite {
    state_type = "air_attack";
    if timer = 12
    image_speed = 0
    if timer = 14
    image_speed = 0.25
    if timer < 13
        vspeed = -0.1
    if timer = 15 {
        image_index = 4
        sound_play(downb_sound1);
        temp_fall_speed = 3
        create_hitbox(15,362,5.2,6.6,20,9,kick3,obj_spark_fire1,0.9,1.1,12,3,self.id,15,3);
        hitbox.hit_stun = 3;
        hitbox.armor_break = 1;
        vspeed = 3*size
        hspeed = (1.75-facing*3.5)*size
        image_speed = 0
        image_index = 4.25
        spark = instance_create(x + size*(1-facing*2)*8, y + size, obj_spark)
        spark.sprite_index = downb_effect_sprite
        spark.image_xscale = size*0.45
        spark.image_yscale = size*0.45
        spark.image_speed = 0.75
        spark.image_angle = direction
    }
    if timer = 18 && instance_exists(hitbox) {
        hitbox.damage = 13*size
        hitbox.kbg *= 0.9
        set_hitlag(hitbox,8)
    }
    if timer > 16 && timer < 45 && timer_speed > 0 {
        vspeed = 6*size
	temp_fall_speed = 6
        hspeed = (1.75-facing*3.5)*size
        if instance_exists(spark) {
            spark.x += hspeed
            spark.y += vspeed
        }
    }
	if timer = 45
		temp_fall_speed = 0
    if air = 0 {
        vspeed = 0
        duster = instance_create(x+5-facing*10,y,obj_dust_effect);
        duster.facing = 1-facing;
        duster.image_alpha = 0.6
        duster = instance_create(x-5+facing*10,y,obj_dust_effect);
        duster.facing = facing;
        duster.image_alpha = 0.6
        sound_play(downb_sound2)
        state_type="land";
        hspeed = 0;
        attack_type="none";
        sprite_index = land_sprite;
        sound_play(land_sound);
        temp_fall_speed = 0
        timer=7;
        time=34; 
        shaker = instance_create(x,y,obj_shakescreen2);
        shaker.ampl = 2;
        shaker.xampl = 0;
        shaker.time = 12;
    }
}  
if timer = 7 {
    instance_create(x+2-facing*4,y-13*size,obj_spark_effect)
    spark = instance_create(x,y,obj_spark_shockwave)
    spark.image_xscale *= 0.7*size
    spark.image_yscale *= 0.1*size
    spark.image_blend = c_red
    spark.image_alpha = 0.8
}
if sprite_index = downb_sprite {
    state_type = "air_attack";
    temp_fall_speed = 0;
    if timer = 2
        image_speed = 0.25
    if timer <= 40 && vspeed > 0
        vspeed = 0
    if timer = 14 {
        image_index = 4
        image_speed = 0
        sound_play(downb_sound1);
        create_hitbox(15,80+facing*20,5.2,6.6,20,9,kick3,obj_spark_fire1,1.1,0.65,18,13,self.id,19,2);
        hitbox.hit_stun = 3;
        hitbox.armor_break = 1;
        hitbox.shield_stun = 1.65
        hspeed = (3-facing*6)*size
        spark = instance_create(x + size*(1-facing*2)*14, y - size*11, obj_spark)
        spark.sprite_index = downb_effect_sprite
        spark.image_xscale = size*0.45
        spark.image_yscale = size*0.45
        spark.image_speed = 0.8
        spark.image_angle = direction
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing; 
    }
    if timer = 18 && instance_exists(hitbox) {
        hitbox.damage = 12*size;
        hitbox.kbg *= 0.9;
        hitbox.shield_damage = 17;
        hitbox.dir = 68+facing*44;
        set_hitlag(hitbox,8);
    }
    if timer = 26 && instance_exists(hitbox) {
        hitbox.damage = 9*size;
        hitbox.kbg *= 0.9;
        hitbox.dir = 50+facing*80;
        set_hitlag(hitbox,7);
    }
    if timer > 15 && timer < 29 && timer_speed > 0 {
        vspeed = 0
        if timer < 25
            hspeed =  (6-facing*12)*size
        else
            hspeed = (6-facing*12)*size 
        if instance_exists(spark) {
            spark.x = x + 15*size*(1-facing*2)
            spark.y = y - size*11
        }
        if collision_point(x + hspeed + size*5*(1-facing*2),y-size*6,obj_wall,1,1) {
            timer = 100
            time = 135
            sprite_index = upb_end_sprite
            image_index = 2
            image_speed = 0.25
            vspeed = -size*6
            hspeed = size*3*(-1 + facing*2)
            if facing {
                instance_create(x + hspeed - 5, y - size*6, obj_left_impact)
                instance_create(x + hspeed - 5, y - size*6, obj_spark_explode1)
            }
            else {
                instance_create(x + hspeed + 5, y - size*6, obj_right_impact)
                instance_create(x + hspeed + 5, y - size*6, obj_spark_explode1)
            }
            if instance_exists(spark)
                with spark instance_destroy()
            shaker = instance_create(x,y,obj_shakescreen2);
            shaker.ampl = 2;
            shaker.yampl = 0;
            shaker.time = 11;
        }
    }
    if timer = 22 {
        image_index = 7
        image_speed = 0.2
        duster = instance_create(x + size*(1-facing*2)*6,y,obj_dust_effect);
        duster.facing = 1-facing; 
    }
    if timer >= 40
    {
        if(!facing)
        {
            if ( air = 0 )
                hspeed -= 0.8; 
            else
                hspeed -= 0.4;
            if hspeed < 0
                hspeed = 0;
        }
        else
        {
            if ( air = 0 )
                hspeed += 0.8;
            else
                hspeed += 0.4;
            if hspeed > 0
                hspeed = 0;
        }
    }
} 
 
if timer > 100 && timer < 115 {
    vspeed -= grav*GRAV_MUL*size*0.3
    air_move = 0
}
if image_index >= image_number-image_speed
    image_speed = 0 


 if (timer >= 14){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 135) || (target.weight > .22 && target.weight < .3 && target.percent > 150) || (target.weight > .3 && target.percent > 175)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    temp_fall_speed = 0
    attack_type = "none";
	state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 7;
	image_speed = 0;
	}
    timer = 0;
    time =-1;
}
        
