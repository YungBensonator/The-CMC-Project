if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "fair";
    timer = 0;
    time = 39;
    sprite_index = fair_sprite;
    image_speed = 0;
    image_index = 0;
    vspeed -= 0.14;
  }

if ( timer < time )
  {
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 6: image_index = 3; break;
	case 8: image_index = 4; break;
	case 10: image_index = 5; break;
	case 11: image_index = 6; break;
	case 12: image_index = 7; break;
	case 13: image_index = 8; break;
	case 14: image_index = 9; break;
	case 31: image_index = 10; break;
	case 32: image_index = 11; break;
	case 33: image_index = 12; break;
	case 34: image_index = 13; break;
	case 35: image_index = 14; break;
      }
    if timer > 8 && timer < 11
	shakex += 1*(1-facing*2)
    if timer > 10 && timer < 13
	shakex += 1.35*(1-facing*2)
    if timer > 12 && timer < 15
	shakex += 2.1*(1-facing*2)
    if ( timer = 14 )
      {
	play_attack_voice();
	sound_play(attack_sound3);
	create_hitbox(19,25+facing*130,4.2,9.6,21,18,kick3,obj_spark_shock,0.5,0.5,20,16,self.id,17,3);
	hitbox.shake_type = 0;
	hitbox.shake_ampl = 1.15;
    hitbox.shield_stun = -1;
  create_hitbox2(19,155-facing*130,4.2,9.6,21,18,kick3,obj_spark_shock,0.36,0.36,15,17,self.id,17,3);
  hitbox2.shake_type = 0;
  hitbox2.shake_ampl = 1.15;
  hitbox2.shield_stun = -1;
  var burst;
    //78, 36
	burst = instance_create(place_x(48)+x,place_y(29)+y,obj_jab_burst);
    burst.snap = self.id;
	burst.image_xscale = xsize * 0.4;
    burst.image_yscale = ysize * 0.4;
      }
    if ( timer = 17 )
    {
      hitbox.damage = 6*size;
      hitbox.shield_damage = 5*size;
      hitbox.bkb = 4.6*size;
      hitbox.kbg = 3*size;
      hitbox.dir = 35+facing*110;
	  hitbox.hit_stun = 4.8;
      hitbox.hitlag_frames = 4*size;
      hitbox.gfx = obj_spark_hit1;
      hitbox.sfx = kick1;
      //hitbox.time = 15
      hitbox2.damage = 6*size;
      hitbox2.shield_damage = 10*size;
	  hitbox.hit_stun = 4.8;
      hitbox2.bkb = 4.6*size;
      hitbox2.kbg = 3*size;
      hitbox2.dir = 145-facing*110;
      hitbox2.hitlag_frames = 5*size;
      hitbox2.gfx = obj_spark_hit1;
      hitbox2.sfx = kick1;
    }
    if timer > 30 && timer < 33
	shakex -= 2.1*(1-facing*2)
    if timer > 32 && timer < 35
	shakex -= 1.35*(1-facing*2)
    if timer > 34 && timer < 37
	shakex -= 1*(1-facing*2)

    if ( air = 0 )
      {
  state_type = "land";
	attack_type = "none";
	hspeed *= 0.85;
	timer = 0;
	time = 10;
	shakex = 0
	sprite_index = land_sprite;
      }
  }
if (timer < 17){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 80) || (target.weight > .22 && target.weight < .3 && target.percent > 90) || (target.weight > .3 && target.percent > 100)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   



if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0
    attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 7;
	image_speed = 0;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time = 4;
    }