fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump" {
    attacking = 0;
    special = 0;
	cbtemp = 0;
    timer = 0;
    temp4 = 0;
    attack_type = "upb"
    hspeed = 0
	
		if air = 0 {
			state_type = "air_attack";
			hspeed = 0;
			duster = instance_create(x,y,obj_dust_effect);
			duster.facing = facing; 
		}
	
		else {
			state_type = "air_attack";
        }
		
        image_speed = 0.2;
        sprite_index = upb_sprite;
		
        if moveup[1] > 0 || (ai && temp = 0 && random(5)>3.8) {
            temp = 2 
            sound_play(ex_sound)
            ex = 1
        }
		
        else{
            temp = 0
		}
		
        image_index=0;
        time = 50 + temp*3;
        timer_speed=1;
        heavy_armor = 10*(temp>=2)
        if moveright = 1 facing = 0
        if moveleft = 1 facing = 1
	}
	
        if temp < 2 {
			if timer = 0{
				image_index = 6
			}
			
            if timer = 4 {
                vspeed = -size*5.15
            }
			
            if timer > 4 && timer < 32 {
                vspeed -= size*0.1*GRAV_MUL;
                hspeed = (1.2 - facing*2.4)*size;
            }
			
            if timer = 6 {
                sound_play(upb_voice);
                sound_play(upb_sound);
                create_hitbox(2,370,7.6,0,6,5,sf_kick2,obj_spark_special2,0.8,1.5,14,25,self.id,9,3);
				hitbox.execute_on_hit = "attacker.has_hit = 1"
                hitbox.di = -1
				hitbox.weight_kb = 1
                hitbox.shake_ampl = 0
                instance_create(x + (1-facing*2)*size*(7),y-size*11,obj_spark_effect)
                //hspeed = 4 - facing*8;
                //vspeed = -6;
				image_speed = 0.34;
            }
			
            if timer = 16 || timer = 24 {
                create_hitbox(2,370,5.7,0,4,2,sf_kick2,obj_spark_special2,0.6,1,18,32,self.id,6,2);
				hitbox.execute_on_hit = "attacker.has_hit = 1"
                hitbox.di = -1
				hitbox.weight_kb = 1
            }
			if attack_success and timer <= 30 {
				target.direction = point_direction(target.x, target.y, x+ 10 * size * (1-facing*2), y - 12)
			}
			
            if timer = 32 {
                create_hitbox(6.6,angle_correct(40),6.3,5,4,7.5,sf_kick2,obj_spark_special2,0.7,1,18,32,self.id,7,2);
                hitbox.di = -1
				hitbox.weight_kb = 1
            }
        }
		
        else {
            if timer = 4 {
                vspeed = -size*5.5
			}
			
            if timer > 4 && timer < 32 {
                vspeed -= size*0.12*GRAV_MUL;
                hspeed = (1.8 - facing*3.6)*size;
            }
			
            if timer = 5 {
                sound_play(upb_voice);
                sound_play(upb_sound);
                create_hitbox(2,370,7.6,0,6,4,sf_kick2,obj_spark_special2,0.8,1.5,14,25,self.id,4,4);
				hitbox.execute_on_hit = "attacker.has_hit = 1"
                hitbox.di = -1
				hitbox.weight_kb = 1
                hitbox.shake_ampl = 0
                instance_create(x + (1-facing*2)*size*(7),y-size*11,obj_spark_effect)
                //hspeed = 4 - facing*8;
                //vspeed = -6;
				image_speed = 0.6;
				image_index = 1;
			}
				
            if timer = 11 || timer = 15 || timer = 20 || timer = 25 {
                create_hitbox(2,370,5.7,0,6,5,sf_kick2,obj_spark_special2,0.75,1,14,32,self.id,4,2);
				hitbox.execute_on_hit = "attacker.has_hit = 1"
				
				if timer < 31 {
					hitbox.di = -1
					hitbox.weight_kb = 1
				}
				
				else {
					hitbox.di = 1
					hitbox.weight_kb = 0
				}
				
                heavy_armor = 0;
			}
			if attack_success and timer <= 28 {
				target.direction = point_direction(target.x, target.y, x+ 10 * size * (1-facing*2), y - 12)
			}
			
            if timer = 30 {
                create_hitbox(7.2,angle_correct(40),6.3,5.7,4,12,sf_kick2,obj_spark_special2,0.75,1,14,32,self.id,4,3);
                hitbox.di = -1
				hitbox.weight_kb = 1
			}
				
			if timer = 31 {
				image_xscale *= 1.05;
				image_yscale *= 1.05;
			}
			
			if timer = 32 {
				image_xscale *= 1.1;
				image_yscale *= 1.1;
			}
			
            if timer < 15 && frac(timer/2) = 0{
                after_image(4,c_white,0.5)
			}
			
				if frac(timer/4) <= 1 && timer < 34 {
                image_blend=c_yellow
				alarm[7] = 4 
			}
			
            else image_blend=c_white 
        }
		
        if image_index >= image_number - image_speed {
            image_speed = 0 
            ex = 0
        }
		
        if timer = 34 + temp*6 {
            air_move = 1
            image_blend = c_white
        }
		
	if timer > 25{
	    force_edge_grab = 1
		}
		
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0 {
            state_type = "fall";
            y-=2.5
        }
        else
        state_type = "stand";
        timer = 0;
        time =-1;
        ex = 0
	sftemp2 = 0	
}
