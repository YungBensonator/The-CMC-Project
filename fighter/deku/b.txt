fast_fall = 0
fast_fall_temp = 0
if ( state_type == "stand" || state_type == "run" || state_type == "jump" ) {
	state_type = "air_attack";
    attack_type = "b";
    if limitbreak == 0 {
		cowling = 0;
		special = 1;
		timer = 0;
		time = 100;
		sprite_index = b_sprite;
		image_speed = 0;
		image_index = 6;
		charge = 0;
		charge2 = 0;
		last_shakex = shakex;
		last_shakey = shakey;
		charge_timer = 0;
		image_blend = c_white;
    }
    else {
		cowling = 1;
		special = 0;
		timer = 0;
		time = 64;
		sprite_index = b_sprite2;
		image_speed = 0;
		image_index = 0;
		temp = 0;
    }
    hspeed = 0;
    air_move = 0;
}

if ( timer < time ) {
	if cowling = 0 {
		switch ( timer )
		{
			case 10: image_index = 1; break;
			case 105: image_index = 2; break;
			case 110: image_index = 3; break;
			case 127: image_index = 4; break;
			case 138: image_index = 5; break;
		}
		
		if timer = 10 {
			impactspark = instance_create(x,y,obj_down_impact)
			impactspark.image_blend = c_aqua
		}
		
		if timer >= 10 && timer <= 65 {
			shakex = last_shakex - lengthdir_x ( charge_timer * 0.01 , charge_timer * 55 ) * ( 1 - facing * 2 );
			image_blend = merge_color ( c_white , c_aqua , 0.5 + lengthdir_x ( 0.5 , charge_timer * 80 ) );
			charge_timer += 1
		}
		
		if ( sin ( charge_timer * pi /6 ) == 1 ) {
			spark = instance_create(x-5*(1-facing*2),y-15,obj_spark_shockwave);
			spark.image_blend = c_aqua
			spark.image_xscale *= 0.4
			spark.image_yscale *= 0.4
			part_particles_create ( psys_front , x - 2 + random ( 4 ) , y - 7 - random ( 5 ) , ptype_smashspark , 1 );
		}
		
		if timer <= 65 {                   
			if (timer >= 10 && ((special = 0 && !ai) || (ai && ((random(10)>8.1 && temp) || (random(10)<0.33))))) || timer = 65 {
				charge = timer / 4
				if timer = 65
				charge2 = 1
				special = 0;
				image_blend = c_white;
				time = 156
				timer = 100
				charge_timer = 0
			}
		}
		if timer = 105 sound_play(b_voice);
		
		if timer = 110 {
			if temp = 0 {
				duster = instance_create(x,y,obj_dust_effect)
				duster.image_xscale = 0.35
				duster.image_yscale = 0.35
				duster.facing = facing;
			}
			sound_play(attack_sound1)
			create_hitbox(8+(charge/2)+(charge2*2),60+facing*60,7+(charge2),4.5+(charge2*2),30+charge+(charge2*20),15+(charge/2)+(charge2*4),punch4,obj_spark_hit4,0.45,0.35,25,15,self.id,20,4);
			hspeed = (5+(charge*0.6))*(1-facing*2)
			
			if air > 0 {
				hspeed *= 0.9
			}
		}
		if timer >= 110 && timer <= 125 after_image(2,c_aqua,0.75);
		
		if timer > 115 hspeed *= 0.9
		
		if air > 0 && vspeed > 0 && timer <= 147 vspeed *= 0.6
	}
	else if ( cowling = 1 ) {
		switch ( timer )
		{
			case 10: image_index = 1; break;
			case 18: image_index = 2; break;
			case 22: image_index = 3; break;
			case 26: image_index = 4; break;
			case 34: image_index = 5; break;
			case 42: image_index = 6; break;
			case 52: image_index = 7; break;
		}
		if timer = 8 hspeed = 5.95*(1-facing*2);
		
		if timer = 10 {
			sound_play(attack_voice1);
			sound_play(attack_sound5);
			limitgauge = 0
			limitbreak = 0
			if air = 0 {
				duster = instance_create(x,y,obj_dust_effect)
				duster.image_xscale = 0.35
				duster.image_yscale = 0.35
				duster.facing = facing
			}
			create_hitbox(20,20+facing*140,7,7.8,120,12,strong_punch,obj_spark_impact,0.45,0.45,17,21,self.id,8,4);
		}
		if timer >= 10 {
			if (attack_success || target.object_index == obj_enemy) && temp = 0 {
				sound_play(b_sound);
				screen_shake(20,20);
				effect_create_above(ef_ellipse,x,y,1,c_green)
				freezer  = instance_create(x,y,obj_freeze)
				freezer.alarm[0] = 53
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = x - 25;
				spark.camera_r = x + 25;
				spark.camera_u = y - 40;
				spark.camera_d = y;
				spark.camera_boundary_zoom = 100;
				spark.alarm[0] = 40;
				spark2 = instance_create(x+8*(1-facing*2),y-26,obj_spark_hit3)
				spark2.alarm[0] = 40
				time = 60
				temp = 1
			}
		}
		
		if timer >= 8 && timer <= 20 after_image(2,c_aqua,0.75);
		
		if timer >= 16 hspeed *= 0.9;
		if air > 0 && vspeed > 0 && timer <= 52 vspeed *= 0.6
	}
}

if (timer >= 10 && temp = 0){
if (attack_success || target.object_index == obj_enemy) && ( dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 75) || (target.weight > .22 && target.weight < .3 && target.percent > 85) || (target.weight > .3 && target.percent > 95)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" ) {
	dontrepeat = 0;
	if ( air = 0 ) state_type = "stand";
	else state_type = "jump";
	attack_type = "none";
	timer = 0;
	time = -1;
}