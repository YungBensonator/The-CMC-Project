fast_fall = 0;
fast_fall_temp = 0;
gravity = 0;
gravity_lock = 1;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  attacking = 0;
  special = 0;
  attack_type = "upb";
  time = 40;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  vspeed = 0;
  sprite_index = upb_sprite;
  image_index = 0;
  image_speed = 0.25;
  timer_speed = 1;
  air_move = 0;
  }
  
switch (timer)
{
case 01: image_index = 1; intangible = 1; sound_play(teleport_sound); sound_play(choose(upb_voice, upb_voice2)); break;
case 02: image_index = 2; break;
case 03: image_index = 3; break;
case 04: image_index = 4; break;
case 05: image_index = 5; break;
case 06: image_index = 6; break;
case 07: image_index = 7; break;
case 08: image_index = 8; break;
case 09: image_index = 9; break;
case 10: visible = 0; break;
case 16: image_index = 10; visible = 1; speed = 0; break;
case 17: image_index = 11; break;
case 18: image_index = 12; break;
case 19: image_index = 13; break;
case 20: image_index = 14; break;
case 21: image_index = 15; break;
case 22: image_index = 16; intangible = 0; break;
case 23: image_index = 17; break;
case 24: image_index = 18; break;
case 25: image_index = 19; break;
}

if timer > 10
{
force_edge_grab = 1;
}

if timer = 13
{
if ai = 1 && ai_state = "recover" {
            movedown = 0
            moveup = 1
            if !(abs(obj_edge_right.x-x)<8) && !(abs(obj_edge_left.x-x)<8) && !collision_point(x+8-facing*16,y-5,obj_wall,1,1) {
            if x < room_width/2 {
                moveright = 1
                moveleft = 0 }
            else {
                moveright = 0
                moveleft = 1 } 
                }
            }
        if moveright = 1 //&& !collision_point(x+1,y,obj_wall,1,1) 
            hspeed=30
        if moveleft = 1//&& !collision_point(x-1,y,obj_wall,1,1)
            hspeed=-30
        if moveup = 1 //&& !collision_point(x,y-1,obj_ceiling,1,1) 
            vspeed=-30
        else if movedown {
            vspeed = 30
            temp_fall_speed = vspeed - fall_speed
            }
	    spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_purple
        spark.image_alpha = 0.8
		sound_play(warp_sound);
}

if timer = 16
{
        spark = instance_create(x,y-19*size,obj_spark_shockwave)
        spark.image_xscale *= 0.8*size
        spark.image_yscale *= 0.8*size
        spark.image_blend = c_purple
        spark.image_alpha = 0.8
}

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air > 0 )
    state_type = "fall";
    else
    state_type = "stand";
  timer = 0;
  time = -1;
  }