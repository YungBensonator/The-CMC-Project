if sidebtemp = 0
{
fast_fall = 0;
fast_fall_temp = 0;
gravity = 0;
gravity_lock = 1;
}

if sidebtemp = 1 {exit;}

if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 0;
  if sidebtemp = 0
  {
  vspeed = 0;
  hspeed = 0;
  }
  attack_type = "sideb";
  time = 78;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  sprite_index = sideb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  air_move = 0;
  }
  
switch (timer)
{
case 01: image_index = 1; break;
case 02: image_index = 2; break;
case 03: image_index = 3; break;
case 04: image_index = 4; break;
case 05: image_index = 5; break;
case 06: image_index = 6; break;
case 07: image_index = 7; break;
case 08: image_index = 8; break;
case 09: image_index = 9; break;
case 10: image_index = 7; break;
case 11: image_index = 8; break;
case 12: image_index = 9; break;
case 13: image_index = 7; break;
case 14: image_index = 8; break;
case 15: image_index = 9; break;
case 16: image_index = 10; break;
case 17: image_index = 11; break;
case 18: image_index = 12; break;
case 19: image_index = 10; break;
case 20: image_index = 11; break;
case 21: image_index = 12; break;
case 22: image_index = 10; break;
case 23: image_index = 11; break;
case 24: image_index = 12; break;
case 25: image_index = 10; break;
case 26: image_index = 11; break;
case 27: image_index = 12; break;
case 28: image_index = 10; break;
case 29: image_index = 11; break;
case 30: image_index = 12; break;
case 31: image_index = 10; break;
case 32: image_index = 11; break;
case 33: image_index = 12; break;
case 34: image_index = 10; break;
case 35: image_index = 11; break;
case 36: image_index = 12; break;
case 37: image_index = 10; break;
case 38: image_index = 11; break;
case 39: image_index = 12; break;
case 30: image_index = 10; break;
case 41: image_index = 11; break;
case 42: image_index = 12; break;
case 43: image_index = 10; break;
case 44: image_index = 11; break;
case 45: image_index = 12; break;
case 46: sprite_index = sideb_sprite2; image_index = 0; sound_play(swingsnd3); break;
case 47: image_index = 1; break;
case 48: image_index = 2; break;
case 49: image_index = 3; break;
case 52: image_index = 4; break;
case 55: image_index = 5; break;
case 56: image_index = 6; break;
case 57: image_index = 7; break;
case 58: image_index = 8; break;
case 59: image_index = 6; break;
case 60: image_index = 7; break;
case 61: image_index = 8; break;
case 62: image_index = 6; break;
case 63: image_index = 7; break;
case 64: image_index = 8; break;
case 65: image_index = 6; break;
case 66: image_index = 7; break;
case 67: image_index = 8; break;
case 68: image_index = 30; break;
case 69: image_index = 31; break;
case 70: image_index = 32; break;
case 71: image_index = 36; break;
case 72: image_index = 37; break;
case 73: image_index = 38; break;
case 76: image_index = 39; break;

case 147: image_index = 1; break;
case 148: image_index = 2; break;
case 149: image_index = 3; break;
case 152: image_index = 4; break;
case 155: image_index = 5; break;
case 156: image_index = 6; break;
case 157: image_index = 7; break;
case 158: image_index = 8; break;
case 159: image_index = 6; break;
case 160: image_index = 7; break;
case 161: image_index = 8; break;
case 162: image_index = 6; break;
case 163: image_index = 7; break;
case 164: image_index = 8; break;
case 165: image_index = 6; break;
case 166: image_index = 7; break;
case 167: image_index = 8; break;
case 168: image_index = 30; break;
case 169: image_index = 31; break;
case 170: image_index = 32; break;
case 171: image_index = 36; break;
case 172: image_index = 37; break;
case 173: image_index = 38; break;
case 176: image_index = 39; break;
}

if timer >= 16 and timer <= 45
{
hspeed = 7 * (1-facing*2) * size;
if cos(timer*pi)>0.5
after_image(5,c_purple,0.5)
if special = 1
{
timer = 46;
sprite_index = sideb_sprite2; 
image_index = 0; 
hspeed = 0;
sound_play(swingsnd3); 
with (sidebfx)
{
instance_destroy();
}
}
}

if ai and timer <= 15 {special = 0;}

if ai and (timer >= 16 and timer <= 45) and attack_success {special = 1}

if timer = 16
{
    create_hitbox ( 4 , 20 + facing * 140 , 6.5 , 0 , 15 , 5 , kick3 , obj_spark_hit3 , 0.88 , 1.44 , 1.16 , 23.20 , self.id , 29 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.weight_kb = 0;
    sidebfx = create_blur(x,y,self.id);
    sidebfx.sprite_index = sidebfx_sprite;
    sidebfx.image_index = 0;
    sidebfx.image_speed = 0;
    sidebfx.snap = self.id;
    sidebfx.image_xscale = 0.37*(1-facing*2)*size;
    sidebfx.image_yscale = 0.37*size;
    sidebfx.depth = depth - 1;
    sidebfx.x = x - 2 * (1-facing*2) *size;
    sidebfx.y = y - 26.68 *size;
	sound_play(dash_sound);
	sound_play(choose(sideb_voice1, sideb_voice2));
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.4*size;
	duster.image_yscale = 0.4*size;
}

switch ( timer )
    {
	case 19: sidebfx.image_index = 1; break;
	case 20: sidebfx.image_index = 2; break;
	case 21: sidebfx.image_index = 3; break;
	case 22: sidebfx.image_index = 4; break;
	case 23: sidebfx.image_index = 5; break;
	case 24: sidebfx.image_index = 0; break;
	case 26: sidebfx.image_index = 1; break;
	case 28: sidebfx.image_index = 2; break;
	case 29: sidebfx.image_index = 3; break;
	case 30: sidebfx.image_index = 4; break;
	case 31: sidebfx.image_index = 5; break;
	case 32: sidebfx.image_index = 0; break;
	case 33: sidebfx.image_index = 1; break;
	case 34: sidebfx.image_index = 2; break;
	case 35: sidebfx.image_index = 3; break;
	case 36: sidebfx.image_index = 4; break;
	case 37: sidebfx.image_index = 5; break;
	case 38: sidebfx.image_index = 0; break;
	case 39: sidebfx.image_index = 1; break;
	case 40: sidebfx.image_index = 2; break;
	case 41: sidebfx.image_index = 3; break;
	case 42: sidebfx.image_index = 4; break;
	case 43: sidebfx.image_index = 5; break;
	case 44: sidebfx.image_index = 0; break;
	case 45: sidebfx.image_index = 1; break;
	}

if timer = 46
{
with (sidebfx)
{
instance_destroy();
}
}


if timer = 49
{
    create_hitbox ( 10 , 20 + facing * 140 , 5 , 5.5 , 18 , 13 , slash3 , obj_spark_slash4 , 2.34 , 2.14 , 38.86 , 34.22 , self.id , 3 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
    scythefx = create_blur(x,y,self.id);
    scythefx.sprite_index = scythefx_sprite;
    scythefx.image_index = 0;
    scythefx.image_speed = 0;
	scythefx.snap = self.id;
    scythefx.image_xscale = 0.65 * image_xscale;
    scythefx.image_yscale = 0.65 * image_yscale;
    scythefx.depth = depth - 1;
    scythefx.x = x + 34.80 * (1-facing*2) *size;
    scythefx.y = y - 66.70 *size;
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.4*size;
	duster.image_yscale = 0.4*size;
}

  if (timer >= 49){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 115) || (target.weight > .22 && target.weight < .3 && target.percent > 125) || (target.weight > .3 && target.percent > 140)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   
switch (timer)
{
case 51: scythefx.image_index = 1; break;
case 53: scythefx.image_index = 2; break;
case 55: scythefx.image_index = 3; break;
case 57: scythefx.image_index = 4; break;
}

if timer = 58
{
with (scythefx)
{
instance_destroy();
}
}

if timer = 46 or timer = 176
{
hspeed = 0;
sound_play(swingsnd3); 
}

if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  sidebtemp = 1;
  attack_type = "none";
  if ( air == 0 )
    state_type = "stand";
    else
    state_type = "jump";
  timer = 0;
  time = -1;
  }