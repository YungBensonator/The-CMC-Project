fast_fall = 0
fast_fall_temp = 0
if (state_type = "run" || state_type = "stand" || state_type = "jump") {
    attacking = 0;
    special = 0;
    timer = 0;
    attack_type = "upb"
        sound_stop(sideb_voice)
        sound_stop(smashb_voice)
    if air = 0 {
        temp =0
        state_type = "air_attack";
        hspeed = 0;
        duster = instance_create(x,y,obj_dust_effect);
        duster.facing = facing; }
    else {
        state_type = "air_attack";
        temp = 1
        }
    image_speed = 0;
    sprite_index = upb2_sprite;
    image_index=1;
    time =43 //48+temp*3;
    timer_speed=1;
    if moveright = 1 facing = 0
    if moveleft = 1 facing = 1
    air_move=0
	canceltemp = 0;
    if moveup[1] > 0 || (ai && random(5)>3.8) || sftemp = -1  {
        temp = 2
	heavy_armor = 10
	if sftemp2 = 1
	facing = 0
	if sftemp2 = 2
	facing = 1
    }
    sftemp2 = 0
}
if timer < time {
if ( temp < 2 )
{
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 3: image_index = 2; break;
  case 4: image_index = 3; break;
  case 5: image_index = 4; break; 
  case 7: image_index = 5; break;
  case 32: image_index = 6; break;
  
  case 34: image_index = 7; break;
  case 37: image_index = 8; break;
  case 41: image_index = 9; break;
  case 43: image_index = 10; break;

  }
}
if ( temp >= 2 )
{
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 3: image_index = 2; break;
  case 4: image_index = 3; break;
  case 5: image_index = 4; break;
  case 7: image_index = 5; break;
  case 32: image_index = 6; break;
  
  case 34: image_index = 7; break;
  case 37: image_index = 8; break;
  case 41: image_index = 9; break;
  case 43: image_index = 10; break;
  }
}
		
	if timer > 25
	force_edge_grab = 1
	if timer > 1 {
	attacktemp = 0
	sftemp_timer = 0
	}
	if attack_success || attack_shielded
	canceltemp = 1
if timer < 5 {
    if moveup[1] > 0 || (ai && temp = 0 && random(5)>3.8) || ( sftemp = 13 || sftemp = 18 || sftemp = 22 || sftemp = 27 )  {
        temp = 2
	heavy_armor = 10
	if sftemp = 13 || sftemp = 27
	facing = 0
	if sftemp = 18 || sftemp = 22
	facing = 1
    }
}
	if temp = 2 && timer < 3
            if timer < 7 {
                vspeed = 0
                gravity = 0 }
            if timer = 6 && temp = 2 {
		image_xscale *= 1.1;
		image_yscale *= 1.1;
                sound_play(ex_up_b_voice);
                sound_play(upb_sound);
                sound_play(attack_sound3);
		sound_play(ex_sound);
                create_hitbox(7,angle_correct(76),6,6,10,14,sf_punch3,obj_spark_special2,0.7,0.75,13,28,self.id,1,5)
                hitbox.shake_ampl = 0.4
                hitbox.shake_kb = size*2
                hitbox.hit_stun = 3
            }
            if timer = 5 && temp < 2 {
		image_xscale *= 1.1;
		image_yscale *= 1.1;
                sound_play(up_b_voice);
                sound_play(upb_sound);
                sound_play(attack_sound3);
                create_hitbox(11,45+facing*90,6,6.2,19,9,sf_punch3,obj_spark_special2,0.7,0.75,13,28,self.id,19,4)
                hitbox.shake_type = 1
                hitbox.shake_ampl = 0.5
                hitbox.shield_stun = 1.3
			}
            if timer = 7 || timer = 8 {
                if temp < 2
                if instance_exists(hitbox) && temp >= 2
                    hitbox.hit = 2
                hspeed = (3 - facing*6)*size*(1+(temp>=2)*0.3)
                vspeed = -6.5*size*(1+(temp>=2)*0.2)
                air_move = 0
            }
            if timer = 7 && temp = 2 {
                create_hitbox(12,angle_correct(76),7,7.5,10,11,sf_punch3,obj_spark_special2,0.7,1,13,45,self.id,10,5)
                hitbox.shake_ampl = 0.45
		temp = 3
            }
            if temp >= 2 && frac(timer/2) == 0 {
                image_blend=c_yellow
		alarm[7] = 8;
		}
            else image_blend=c_white
            if (timer = 8 || timer = 9 || timer = 11) {
                if temp < 2 {
                    hitbox.damage = 9*size
                    hitbox.image_xscale = 0.55*size
                    hitbox.bkb = 5.5*size
                    hitbox.kbg = 5.5*size
                    hitbox.hitlag_frames = round(size*9)
                    hitbox.shield_damage = round(size*16)
                    hitbox.hitbox_y = 51*size
			hitbox.hitbox_x = 7 * (1-facing*2) * size
                    hitbox.dir=75+facing*30
                }
                if timer = 9 {
		if temp >= 2 {
		hitbox.hitbox_y = 42*size
		hitbox.hitbox_x = 4*(1-facing*2)*size }
                hspeed = (2.5 - facing*5)*size*(1+(temp>=2)*0.4) }
                vspeed -= 0.25*size*(1+(temp>=2)*0.1)
            }
		if timer = 8 && temp >= 2 {
			heavy_armor = 0; }
            if timer = 19 {
                if abs(hspeed) > 1
                 hspeed -= 1-facing*2
                 air = max_jumps }
            if timer = 32 + temp
                air_move = 1
	if timer > 4 && timer < 10 && temp = 2 && canceltemp {
	if sftemp != -1 && sftemp != 5 && sftemp != 10 && sftemp != 43 && sftemp != 57 && sftemp != 5 && sftemp != 13 && sftemp != 18 && sftemp != 22 && sftemp != 27 && sftemp != 47 && sftemp != 52 {
	if special > 0 && movedown = 1
	  {
	    state_type = "jump";
	    attack_type = "none";
	    image_blend=c_white
	    timer = 0;
	    time = -1;
	    char_downb();
	  }
	if special > 0 && movedown != 1 && moveup != 1 && moveleft != 1 && moveright != 1 && ( smash_power >= global.gs_fs_charge )
	  {
		interrupt = 1
	    image_blend=c_white
	  }
}
}
        }  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    air=max_jumps
    hspeed = 1 - facing*2;
    attack_type = "none";
    state_type = "fall";
    timer = 0;
    time =-1;
    sftemp2 = 0
    canceltemp = 0
}
        
/*
switch ( timer )
  {
  case 2: image_index = 2; break;
  case 3: image_index = 3; break;
  case 4: image_index = 4; break;
  case 7: image_index = 5; break;
  case 32: image_index = 6; break;
  case 34: image_index = 7; break;
  case 36: image_index = 8; break;
  case 38: image_index = 9; break;
  case 40: image_index = 10; break;
  }
}
if ( temp >= 2 )
{
switch ( timer )
  {
  case 2: image_index = 2; break;
  case 4: image_index = 3; break;
  case 6: image_index = 4; break;
  case 7: image_index = 5; break;
  case 32: image_index = 6; break;
  case 34: image_index = 7; break;
  case 36: image_index = 8; break;
  case 38: image_index = 9; break;
  case 40: image_index = 10; break;
  }
}
*/