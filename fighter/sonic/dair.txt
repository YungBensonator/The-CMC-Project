
fast_fall = 0;
fast_fall_temp = 0;

if ( state_type = "jump" )
  {
    state_type = "air_attack";
    attack_type = "dair";
    timer = 0;
	time = 52;
	sprite_index = stomp_sprite;
 	image_speed = 0;
    image_index = 0;
    hspeed *= 0.8;
   	air_move = 0;
  }
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 5: image_index = 2; break;
	//case 8: image_index = 4; break;
	case 7: image_index = 4; break;
      }

	if ( timer < 4 )
	  {
	    vspeed = 0;
	    gravity = 0;
	  }
	  if timer=1 
	  {sound_play(stomp_dive_sound)}
	if ( timer = 10 )
	  {
	  stompfxdive = instance_create( x,y,obj_spark );
		stompfxdive.image_angle=270
		stompfxdive.sprite_index = boost_sprite
		stompfxdive.image_xscale = xsize*size
		stompfxdive.image_yscale = ysize*size
		stompfxdive.image_speed = 0.3;
		stompfxdive.image_alpha=0.6;
		stompfxdive.depth=-10
		stompfxdive.number=number
	    create_hitbox( 5 , 290-(facing*40) , 6 , 1.7 , 15 , 2/size , kick3 , obj_spark_hit3 , 0.56 , 0.91 , 4 , 0.95 , self.id , 25 , 0 );
	    hitbox.hit_stun = 1;
	    vspeed = 8.25*size;
	    temp_fall_speed = 5.25*size;
		stompfxdive.x =x-(14 + facing*7)*size;
		stompfxdive.y=y-size*10;
	  }
	  if timer>10
	  {
		stompfxdive.image_alpha-=0.057
		stompfxdive.x =x-(14 + facing*7)*size;
		stompfxdive.y=y-size*10;
	  }
	if ( timer = 7 )
	    vspeed = fall_speed + temp_fall_speed;
  if ( timer = 20 )
	{
    hitbox.damage = 4;
	hitbox.dir = 50+facing*80;
	hitbox.hit_stun = 0.5;
	hitbox.bkb = 8;
	}
	
  
 if ( air = 0 )
      {
	  sound_stop(stomp_dive_sound)
	  sound_play(stomp_land_sound)
	  if ( instance_exists ( stompfxdive ) ) { with ( stompfxdive ) instance_destroy(); }
	  stompfxland = instance_create( x,y,obj_spark );;
		stompfxland.image_angle=270
		stompfxland.sprite_index = stomp_fx_sprite
		stompfxland.image_xscale = 0.15*size
		stompfxland.image_yscale = 0.3*size
		stompfxland.image_speed = 0.3;
		stompfxland.depth=-10
		stompfxland.x = x;
		stompfxland.y = y;
	state_type = "land";
	attack_type = "none";
	hspeed*=0.3
	timer = 0;
	time = 20;
	sprite_index = land_sprite;
  }
  
 if ( (target.air = 0 and attack_success) and air = 0  )
 {

	state_type = "land";
	attack_type = "none";
	hspeed*=0.3
	timer = 0;
	time = 10;
	sprite_index = land_sprite;
  }



if ( air > 0 && timer >= 30 && temp != -1 && (shieldup || special ||(attacking && !movedown ) || movejump || grabbing || taunt) && hitbox.hit = 1)
      {
	air_move = 1;
	interrupt = 1;
      }
      
 if (timer >= 10){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0) && target.offstage{
				if ((target.weight <= .22 && target.percent > 10) || (target.weight > .22 && target.weight < .3 && target.percent > 15) || (target.weight > .3 && target.percent > 20)){
				    killspark = instance_create(enemy.x-200,enemy.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 5 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 120
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 50;
				spark.camera_r = enemy.x + 50;
				spark.camera_u = enemy.y - 80;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
    if ( air = 0 )
	state_type = "stand";
    else
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
  }