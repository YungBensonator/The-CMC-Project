moving_object = 1;
image_angle = direction+facing*180
proj_destroy = 0
if timer = 0
hit = 2
absorb2 = 1
if timer = 1 && hit = 0 {         // Initialize sprite and speed during frame 1
    hit = 0    
    sprite_index = attacker.id.downb_missile_sprite
    speed = 5
    direction = 180*attacker.facing
    image_speed = 0.2;
    visible =1
    create_homing_bubble(5,5,5,5.5,self.id,5);
    }
if frac((timer+1)/10) =0
effect_create_below(ef_smoke,x,y,0,c_ltgray)
if timer > 1 && timer < time-10 && (target = -1 || target = attacker) && frac(timer/6)=0
    create_homing_bubble(4,4,4,4.5,self.id,5);
if target != -1 && target!= attacker && ((target.x > x && hspeed > 0) || (target.x < x && hspeed < 0)) {
    var prev_hspeed;
    var prev_vspeed;
    prev_hspeed = hspeed;
    prev_vspeed = vspeed;
    var dir_to_target;
    dir_to_target = point_direction(x,y,target.x,target.y-7*target.size);
    if dir_to_target < 0
        dir_to_target += 360
    if dir_to_target >= 360
        dir_to_target -= 360
    if direction >= 360
        direction -= 360;
    if direction < 0
        direction += 360;
    speed = 2.67-(timer>time-15)*0.9
    /*
    if dir_to_target <= direction + 180 || (dir_to_target < 90 && direction >= 270)
        direction += 2.5
    else if abs(dir_to_target - direction) > 3 || (dir_to_target > 270 && direction <= 90)
        direction -= 2.5
    */
    if direction >= 270 || direction < 90 {
        if direction-(direction>270)*360 < dir_to_target-(dir_to_target>270)*360
            direction+=3   
        else if direction != dir_to_target
            direction-=3        
    }
    else {
        if direction < dir_to_target
            direction+=3
        else if direction != dir_to_target
            direction-=3       
    }
    
    
}
if exploded = 0 && (((hit = 0 && (timer = time-2 || collision_point(x+sign(hspeed),y,obj_wall,1,1) || is_on_floor(self))) || (hit > 0 && timer < time-1))) {
    hit=2
    exploded = 1000
    timer = time
    instance_create(x,y,obj_spark_explode1)
    sound_play(explode_small)
}

