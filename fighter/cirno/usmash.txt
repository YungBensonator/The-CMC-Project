if state_type = "stand" || state_type ="run"{
	//hspeed = 0;
        state_type = "air_attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_sprite;
        image_index=0;
        timer = 0;
        time = 85;
        timer_speed=1;
        charge_frame=9;
air_move=1;
}
air = 1;
if timer < time {
  state_type = "air_attack";		 
 switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 16: image_index = 4; break;
	case 20: image_index = 3; break;
	case 24: image_index = 4; break;
	case 28: image_index = 3; break;
	case 32: image_index = 4; break;
	case 36: image_index = 3; break;
	case 40: image_index = 4; break;
	case 44: image_index = 5; break;
	case 47: image_index = 6; break;
	case 50: image_index = 7; break;
	case 53: image_index = 8; break;
	case 56: image_index = 5; break;
	case 59: image_index = 6; break;
	case 62: image_index = 7; break;
	case 65: image_index = 8; break;
	
	case 68: image_index = 9; break;
	case 72: image_index = 10; break;

      }
	if timer = 11{
	sound_play(usmash_voice);
	}	
	if timer = 13 || timer = 21 || timer = 29
	sound_play(swingsnd2);
	
	if timer = 12 || timer = 16 || timer = 20 || timer = 24 || timer = 28 || timer = 32 || timer = 36{
	create_hitbox(0.75*(motivation/100),90,0,0,0,0,punch2,obj_spark_hit4,0.95,0.55,0,15,self.id,3,1);
	hitbox.charge_dmg = 0.25
	hitbox.execute_on_hit = "attacker.has_hit = 1"
	if has_hit >= 1 and timer <= 40{
		target.speed = speed - 1.5;
		target.direction = point_direction(target.x,target.y,x,y)
	}
	
	//projdir = choose(0,15,30,45,60,75,90,105,120,135,150,165,180)
	projdir = random(181)
	
	create_projectile(0.8*(motivation/100)+smash_charge/50,361,2.5,1.5,3,0,ice1,choose(obj_spark_slash2, obj_spark_ice, obj_spark_slash2),1.0,1.0,0,15,self.id,150,char_custom1);
	proj.shootimer = 2
	}
	if timer = 40{
	create_hitbox(max(1,1*(motivation/100)),90 ,3.5,7,22,12,punch2,obj_spark_hit4,0.95,0.55,0,15,self.id,3,1);
			 
			 }
            

            }
			if (timer >= 40){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 120) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }		
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
