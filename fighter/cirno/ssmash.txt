if state_type = "stand" || state_type ="run"{
        hspeed = 0;
        state_type = "attack";
        attack_type = "ssmash";
        image_speed = 0;
        sprite_index = ssmash_sprite;
        image_index=0;
        timer = 0;
        time = 45;
        timer_speed=1;
        charge_frame = 5;
		speed = 0
}
if ( timer < time )
  {
  speed = 0
  state_type = "attack";
    switch ( timer )
      {
	case 4: image_index = 1; break;
	case 8: image_index = 2; break;
	case 12: image_index = 3; break;
	case 16: image_index = 4; break;
	case 20: image_index = 5; break;
	case 36: image_index = 6; break;

      }

    if timer = 4{
	icehammer_instance = create_blur(x,y,self.id);
	icehammer_instance.sprite_index = icehammer_sprite;
	icehammer_instance.x = x - (9-facing*18)*size;
    icehammer_instance.y = y-23*size;
    icehammer_instance.image_speed = 0;
	icehammer_instance.image_alpha = 0.7;
    icehammer_instance.image_xscale = iceweaponscale*(1-facing*2) * size;
    icehammer_instance.image_yscale = iceweaponscale* size;
    icehammer_instance.depth = depth + 0.1;
	//icehammer_instance.snap = self.id
	}
	

    if timer = 11{
	sound_play(smash_voice);
	sound_play(swingsnd2);
	}

    if timer = 12{
	sound_play(icehammer_sound);
	create_hitbox(max(1,6*(motivation/100)),24+facing*132,3.5,6.45,22,13,kick3,obj_spark_hit4,1.2,1.2,22,19,self.id,12,5);
	icehammer_instance.depth = depth - 0.1;
	icehammer_instance.image_index = 1
	icehammer_instance.image_speed = 0.4
	icehammer_instance.x = x + (8-facing*16)*size;
    icehammer_instance.y = y-30*size;
	
	}
	
    
  }

  if (timer >= 12){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 125) || (target.weight > .22 && target.weight < .3 && target.percent > 140) || (target.weight > .3 && target.percent > 155)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }		

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    dontrepeat = 0;
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }
        
