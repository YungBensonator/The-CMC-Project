if time = -1 {
hspeed = 0;
state_type = "attack";
attack_type = "uthrow";
image_speed = 0;
sprite_index = uthrow_sprite;
image_index=0;
timer = 0;
time = 41;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 35
}
if timer < time {
  state_type = "attack";
    switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 4: image_index = 3; break;
	case 7: image_index = 4; break;
	case 10: image_index = 5; sound_play(swingsnd2); break;
	case 11: image_index = 6; break;
	case 12: image_index = 7; break;
	case 13: image_index = 8; break;
	case 14: image_index = 9; break;
	case 16: image_index = 10; break;
	case 20: image_index = 11; break;
	case 23: image_index = 12; break;
	case 26: image_index = 13; break;
	case 29: image_index = 14; break;
	case 32: image_index = 15; break;
	case 35: image_index = 16; break;
	case 38: image_index = 17; break;
      }

if timer < 5
{
hspeed = 1.25 * (1 - facing*2) * size;
}

if timer = 5
{
hspeed = 0;
}
	  
	if timer = 06
{
    utiltfx = create_blur(x,y,self.id);
    utiltfx.sprite_index = utilt_fx;
    utiltfx.image_index = 0;
    utiltfx.image_speed = 0;
	utiltfx.snap = self.id;
    utiltfx.image_xscale = 0.3 * (1-facing*2) * size;
    utiltfx.image_yscale = 0.3 * size;
    utiltfx.x = x + place_x(75);
	utiltfx.y = y + place_y(50);
    utiltfx.depth = depth - 1;
}  

switch (timer)
{

	case 07: utiltfx.image_index = 1; break;
	case 08: utiltfx.image_index = 2; break;
	case 09: utiltfx.image_index = 3; break;
	case 10: utiltfx.image_index = 4; break;
	case 11: utiltfx.image_index = 5; break;
	case 12: utiltfx.image_index = 6; break;
	case 13: utiltfx.image_index = 7; break;
	case 14: utiltfx.image_index = 8; break;
	case 15: utiltfx.image_index = 9; break;
	case 16: utiltfx.image_index = 10; break;
	case 17: utiltfx.image_index = 11; break;
	case 18: utiltfx.image_index = 12; break;
	case 19: utiltfx.image_index = 13; break;
	case 20: utiltfx.image_index = 14; break;
}

if timer = 21
{
with (utiltfx) {instance_destroy();}
}  

if timer = 10
{
    create_hitbox ( 5 , angle_correct(75) , 5 , 6.5 , 12 , 8 , arcueid_hit2 , obj_spark_hit3 , 1.6 , 1.5 , 22.40 , 26.40 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = .2
	hitbox.sdi = .2

	if (random(2) > 1)
	{
	sound_play(choose(utilt_voice,utilt_voice2));
	}
}
}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
}
        
