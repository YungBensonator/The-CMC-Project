if state_type = "stand" || state_type ="run"{
	hspeed = 0;
        state_type = "attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_sprite;
        image_index=0;
        timer = 0;
        time = 34;
        timer_speed=1;
        charge_frame=6;
		air_move = 0;
		soundtemp = 0;
}

if timer < time {
fast_fall = 0;
fast_fall_temp = 0;
  
 switch ( timer )
      {
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 5: image_index = 3; break;
	case 8: image_index = 4; sound_play(jump_sound); break;
	case 10: image_index = 5; break;
	case 13: image_index = 6; break;
	case 16: image_index = 7; break;
	case 19: image_index = 8; break;
	case 22: image_index = 9; break;
	case 26: image_index = 10; break;
	case 30: image_index = 11; break;
      }

if charge_frame = 6 and soundtemp = 0
{
sound_play(uniquecharge_sound);
soundtemp = 1;
}	
	 
    if timer = 7
	{
	state_type = "air_attack"
	}
	
    if timer = 8
	{
	vspeed = -5.5 * size;
	hspeed = 2.5 * (1-facing*2) * size;
	
	if (random(2) > 1)
	{
	sound_play(usmash_voice);
	}
	
	usmashfx = create_blur(x,y,self.id);
    usmashfx.sprite_index = usmash_fx;
    usmashfx.image_index = 0;
    usmashfx.image_speed = 0.75;
    usmashfx.image_xscale = 0.5 * (1-facing*2) * size;
    usmashfx.image_yscale = 0.5 * size;
    usmashfx.x = x + place_x(7);
	usmashfx.y = self.y;
    usmashfx.depth = depth - 1;
	
    create_hitbox ( 5 , angle_correct(55) , 4.5 , 0 , 16 , 4 , arcueid_hit2 , obj_spark_hit3 , 0.56 , 0.65 , 4 , 12.40 , self.id , 2 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	
	}
	 
	if timer = 10
   {
    create_hitbox ( 7 , angle_correct(55) , 5.5 , 7 , 24 , 7 , arcueid_hit2 , obj_spark_hit3 , 0.72 , 0.80 , 3.60 , 18.40 , self.id , 5 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
   }	
	 
	if (timer >= 9 and timer < 19) and attacking and !moveleft and !moveright and !moveup and !movedown and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	air_move = 1
    timer = 0;
    time = -1;
    char_nair();
	} 
	
	if (timer >= 9 and timer < 19) and attacking and ((facing and moveleft) or (!facing and moveright)) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	air_move = 1
    timer = 0;
    time = -1;
    char_fair();
	}
	 
	if (timer >= 9 and timer < 19) and attacking and ((!facing and moveleft) or (facing and moveright)) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	air_move = 1
    timer = 0;
    time = -1;
    char_bair();
	}
	
	if (timer >= 9 and timer < 19) and attacking and moveup and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	air_move = 1
    timer = 0;
    time = -1;
    char_uair();
	}
	
	if (timer >= 9 and timer < 19) and attacking and movedown and attack_success
	{
	state_type = "jump";
    attack_type = "none";
	air_move = 1
    timer = 0;
    time = -1;
    char_dair();
	}
	 
	if (timer >= 9 and timer < 19) and (special) and !moveup and !movedown and !moveleft and !moveright and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_b();
	}
	
	if (timer >= 9 and timer < 19) and (special and moveup) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_upb();
	}
	
	if (timer >= 9 and timer < 19) and (special and movedown) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_downb();
	}
	
	if (timer >= 9 and timer < 19) and (special and ((facing and moveleft) or (!facing and moveright))) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_sideb();
	}
	
	if timer = 12
	air_move = 1

}  
			
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
	{
    state_type = "jump";
	sprite_index = mid_jump_sprite;
	image_index = 12 ;
	}
    else
	{
    state_type = "stand";
	}
    timer = 0;
    time =-1;
}
        
