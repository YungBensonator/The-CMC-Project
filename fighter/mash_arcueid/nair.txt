if state_type = "jump"
  {
    state_type = "air_attack";
    attack_type = "nair";
    sprite_index = nair_sprite;
    image_index = 0;
    image_speed = 0;
    timer = 0;
    time = 16;
    timer_speed=1;
  }

if ( timer < time )
  {
    state_type = "air_attack";
	switch (timer)
	{
	case 2: image_index = 1; break;
	case 3: image_index = 2; sound_play(attacksnd2); break;
	case 4: image_index = 3; break;
	case 7: image_index = 4; break;
	case 10: image_index = 5; break;
	case 13: image_index = 6; break;
	}
	

if timer = 02
{
    nairfx = create_blur(x,y,self.id);
    nairfx.sprite_index = nair_fx;
    nairfx.image_index = 0;
    nairfx.image_speed = 0;
	nairfx.snap = self.id;
    nairfx.image_xscale = 0.4 * (1-facing*2) * size;
    nairfx.image_yscale = 0.4 * size;
    nairfx.x = x + place_x(66);
	nairfx.y = y + place_y(66);
    nairfx.depth = depth - 1;
	
	if (random(2) > 1)
	{
	sound_play(choose(attack_voice1,attack_voice2));
	}
}  

switch (timer)
{

	case 03: nairfx.image_index = 1; break;
	case 04: nairfx.image_index = 2; break;
	case 05: nairfx.image_index = 3; break;
	case 06: nairfx.image_index = 4; break;
	case 07: nairfx.image_index = 5; break;
	case 08: nairfx.image_index = 6; break;
	case 09: nairfx.image_index = 7; break;
	case 10: nairfx.image_index = 8; break;
	case 11: nairfx.image_index = 9; break;
	case 12: nairfx.image_index = 10; break;
	case 13: nairfx.image_index = 11; break;
	case 14: nairfx.image_index = 12; break;
	case 15: nairfx.image_index = 13; break;
}

if timer = 3
{
    create_hitbox ( 4 , angle_correct(44) , 3.5 , 4.3 , 7 , 3 , arcueid_hit1 , obj_spark_hit2 , 0.84 , 1.11 , 9.60 , 17.60 , self.id , 4 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}


    if (timer >= 3 and timer < 11) and attacking and ((facing and moveleft) or (!facing and moveright)) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_fair();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and attacking and ((!facing and moveleft) or (facing and moveright)) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_bair();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and attacking and moveup and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_uair();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and attacking and movedown and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_dair();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and (special) and !moveup and !movedown and !moveleft and !moveright and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_b();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and (special and moveup) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_upb();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and (special and movedown) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_downb();
	with (nairfx) {instance_destroy();}
	}
	
	if (timer >= 3 and timer < 11) and (special and ((facing and moveleft) or (!facing and moveright))) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_sideb();
	with (nairfx) {instance_destroy();}
	}
  
if air = 0 {
	
    state_type="land";
    attack_type="none";
    sprite_index = land_sprite;
    timer=0;
    time=08;
}
	
  }


if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" ) {
  state_type = "jump";
  attack_type = "none";
  sprite_index = jump_sprite;

  image_index = 0;
  timer = 0;
  time = -1;
}