fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" {
        state_type = "air_attack"
        attack_type = "b"
        image_speed = 0
        sprite_index = b_sprite
        image_index=0
        timer = 0
        time = 41
		hspeed = 0
		air_move = 0;
}

if ( timer < time )
    {
    switch ( timer )
    {
	case 2: image_index = 1; break;
	case 4: image_index = 2; break;
	case 7: image_index = 3; break;
	case 10: image_index = 4; sound_play(b_sound); sound_play(b_voice); break;
	case 11: image_index = 5; break;
	case 12: image_index = 6; break;
	case 13: image_index = 7; break;
	case 15: image_index = 8; break;
	case 17: image_index = 9; break;
	case 19: image_index = 10; break;
	case 21: image_index = 11; break;
	case 23: image_index = 12; break;
	case 25: image_index = 13; break;
	case 27: image_index = 14; break;
	case 29: image_index = 15; break;
	case 33: image_index = 16; break;
	case 37: image_index = 17; break;
    }
	  
	 if timer = 10
{
hspeed = 6 * (1-facing*2) * size;
}	 

if timer >10 and timer <= 22
{
if facing = 0 && hspeed > 0 {
		hspeed -= 0.5;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.5;
		}
}

if air > 0
{
			vspeed = 0.5; 
			gravity_lock=1;
}
	  
	if timer = 07
{
    bfx = create_blur(x,y,self.id);
    bfx.sprite_index = b_fx;
    bfx.image_index = 0;
    bfx.image_speed = 0;
	bfx.snap = self.id;
    bfx.image_xscale = 0.25 * (1-facing*2) * size;
    bfx.image_yscale = 0.25 * size;
    bfx.x = x + place_x(102);
	bfx.y = y + place_y(45);
    bfx.depth = depth - 1;
	
hspeed = 0;
}


switch ( timer )
      {
	case 08: bfx.image_index = 1; break;
	case 10: bfx.image_index = 2; break;
	case 12: bfx.image_index = 3; break;
	case 14: bfx.image_index = 4; break;
	case 16: bfx.image_index = 5; break;
	case 18: bfx.image_index = 6; break;
	case 20: bfx.image_index = 7; break;
	case 22: bfx.image_index = 8; break;
	case 24: bfx.image_index = 9; break;
	case 25: bfx.image_index = 10; break;
	case 26: bfx.image_index = 11; break;
	case 27: bfx.image_index = 12; break;
	case 28: bfx.image_index = 13; break;
	case 29: bfx.image_index = 14; break;
	}

if timer = 10
{
    create_hitbox ( 5 , angle_correct(12) , 4.8 , 0 , 38 , 4 , arcueid_slash , obj_spark_slash2 , 1.58 , 1.02 , 27.20 , 22 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0; 
	hitbox.di = 0.4;
}

if timer = 30
{
with (bfx) {instance_destroy();}
}  


if timer >= 14 and timer <= 33 and special
{
timer = 100;
time = 141;
sprite_index = b_sprite2;
special = 0
attacking = 0
image_index = 0;
with (bfx) {instance_destroy();}
}


    switch ( timer )
    {
	case 103: image_index = 1; break;
	case 106: image_index = 2; sound_play(b_sound); sound_play(b_voice2); break;
	case 107: image_index = 3; break;
	case 108: image_index = 4; break;
	case 109: image_index = 5; break;
	case 111: image_index = 6; break;
	case 113: image_index = 7; break;
	case 115: image_index = 8; break;
	case 117: image_index = 9; break;
	case 119: image_index = 10; break;
	case 121: image_index = 11; break;
	case 123: image_index = 12; break;
	case 125: image_index = 13; break;
	case 129: image_index = 14; break;
	case 133: image_index = 15; break;
	case 137: image_index = 16; break;
    }

if timer = 103
{
hspeed = 6 * (1-facing*2) * size;
}

if timer >103 and timer <= 115
{
if facing = 0 && hspeed > 0 {
		hspeed -= 0.5;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.5;
		}
}

	if timer = 103
{
    bfx2 = create_blur(x,y,self.id);
    bfx2.sprite_index = b_fx2;
    bfx2.image_index = 0;
    bfx2.image_speed = 0;
	bfx2.snap = self.id;
    bfx2.image_xscale = 0.25 * (1-facing*2) * size;
    bfx2.image_yscale = 0.25 * size;
    bfx2.x = x + place_x(104);
	bfx2.y = y;
    bfx2.depth = depth - 1;
}


switch ( timer )
      {
	case 104: bfx2.image_index = 1; break;
	case 105: bfx2.image_index = 2; break;
	case 106: bfx2.image_index = 3; break;
	case 107: bfx2.image_index = 4; break;
	case 108: bfx2.image_index = 5; break;
	case 109: bfx2.image_index = 6; break;
	case 110: bfx2.image_index = 7; break;
	case 112: bfx2.image_index = 8; break;
	case 114: bfx2.image_index = 9; break;
	case 116: bfx2.image_index = 10; break;
	case 118: bfx2.image_index = 11; break;
	case 120: bfx2.image_index = 12; break;
	case 122: bfx2.image_index = 13; break;
	case 124: bfx2.image_index = 14; break;
	}

if timer = 125
{
with (bfx2) {instance_destroy();}
}  

if timer = 106
{
    create_hitbox ( 5 , angle_correct(12) , 4.8 , 0 , 38 , 4 , arcueid_slash , obj_spark_slash2 , 1.58 , 1.02 , 27.20 , 22 , self.id , 5 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0.4;
}

if timer >= 109 and timer <= 125
{
if special or (attacking and air > 0 )
{
timer = 200;
time = 250;
sprite_index = b_sprite3;
image_index = 0;
with (bfx2) {instance_destroy();}
}
}

switch ( timer )
    {
	case 202: image_index = 1; break;
	case 205: image_index = 2; break;
	case 208: image_index = 3; sound_play(b_sound); sound_play(b_voice3); break;
	case 209: image_index = 4; break;
	case 210: image_index = 5; break;
	case 211: image_index = 6; break;
	case 214: image_index = 7; break;
	case 217: image_index = 8; break;
	case 220: image_index = 9; break;
	case 223: image_index = 10; break;
	case 226: image_index = 11; break;
	case 229: image_index = 12; break;
	case 232: image_index = 13; break;
	case 235: image_index = 14; break;
	case 238: image_index = 15; break;
	case 242: image_index = 16; break;
	case 246: image_index = 17; break;
    }

if timer = 208
{
    bfx3 = create_blur(x,y,self.id);
    bfx3.sprite_index = b_fx3;
    bfx3.image_index = 0;
    bfx3.image_speed = 0;
	bfx3.snap = self.id;
    bfx3.image_xscale = 0.25 * (1-facing*2) * size;
    bfx3.image_yscale = 0.25 * size;
    bfx3.x = x + place_x(124);
	bfx3.y = y;
    bfx3.depth = depth - 1;
	
hspeed = 6 * (1-facing*2) * size;


    create_hitbox ( 5 , angle_correct(27) , 5.4 , 6.7 , 38 , 8 , arcueid_slash , obj_spark_slash2 , 1.58 , 1.02 , 27.20 , 22 , self.id , 8 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;

}

if timer > 208 and timer <= 220
{
if facing = 0 && hspeed > 0 {
		hspeed -= 0.5;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.5;
		}
}

switch ( timer )
      {
	case 209: bfx3.image_index = 1; break;
	case 210: bfx3.image_index = 2; break;
	case 211: bfx3.image_index = 3; break;
	case 212: bfx3.image_index = 4; break;
	case 213: bfx3.image_index = 5; break;
	case 214: bfx3.image_index = 6; break;
	case 215: bfx3.image_index = 7; break;
	case 217: bfx3.image_index = 8; break;
	case 219: bfx3.image_index = 9; break;
	case 221: bfx3.image_index = 10; break;
	case 223: bfx3.image_index = 11; break;
	case 225: bfx3.image_index = 12; break;
	case 227: bfx3.image_index = 13; break;
	case 229: bfx3.image_index = 14; break;
	case 231: bfx3.image_index = 15; break;
	}

if timer = 233
{
with (bfx3) {instance_destroy();}
}  

if timer >= 109 and timer <= 125 and (attacking and air = 0)
{
timer = 300;
time = 351;
sprite_index = b_spriteA;
image_index = 0;
with (bfx2) {instance_destroy();}
}

if timer >300 and timer <= 306
{
if facing = 0 && hspeed > 0 {
		hspeed -= 0.5;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.5;
		}
}

switch ( timer )
    {
	case 304: image_index = 1; break;
	case 309: image_index = 2; break;
	case 317: image_index = 3; sound_play(b_sound); sound_play(b_voice4); break;
	case 318: image_index = 4; break;
	case 319: image_index = 5; break;
	case 320: image_index = 6; break;
	case 322: image_index = 7; break;
	case 324: image_index = 8; break;
	case 326: image_index = 9; break;
	case 328: image_index = 10; break;
	case 330: image_index = 11; break;
	case 332: image_index = 12; break;
	case 334: image_index = 13; break;
	case 336: image_index = 14; break;
	case 338: image_index = 15; break;
	case 340: image_index = 16; break;
	case 342: image_index = 17; break;
	case 347: image_index = 18; break;
    }

if timer = 314
{
    bfxA = create_blur(x,y,self.id);
    bfxA.sprite_index = b_fxA;
    bfxA.image_index = 0;
    bfxA.image_speed = 0;
	bfxA.snap = self.id;
    bfxA.image_xscale = 0.28 * (1-facing*2) * size;
    bfxA.image_yscale = 0.28 * size;
    bfxA.x = x + place_x(104);
	bfxA.y = y;
    bfxA.depth = depth - 1;
	
hspeed = 4 * (1-facing*2) * size;

}

if timer > 314 and timer <= 322
{
if facing = 0 && hspeed > 0 {
		hspeed -= 0.5;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.5;
		}
}

if timer = 318
{
hspeed = 0;
}

switch ( timer )
      {
	case 315: bfxA.image_index = 1; break;
	case 316: bfxA.image_index = 2; break;
	case 317: bfxA.image_index = 3; break;
	case 318: bfxA.image_index = 4; break;
	case 319: bfxA.image_index = 5; break;
	case 320: bfxA.image_index = 6; break;
	case 321: bfxA.image_index = 7; break;
	case 322: bfxA.image_index = 8; break;
	case 323: bfxA.image_index = 9; break;
	case 324: bfxA.image_index = 10; break;
	case 325: bfxA.image_index = 11; break;
	case 326: bfxA.image_index = 12; break;
	case 327: bfxA.image_index = 13; break;
	case 328: bfxA.image_index = 14; break;
	case 329: bfxA.image_index = 15; break;
	case 330: bfxA.image_index = 16; break;
	}

if timer = 318
{
    create_hitbox ( 7 , angle_correct(295) , 5.6 , 6.9 , 60 , 8 , arcueid_slash , obj_spark_slash4 , 1.75 , 1.46 , 26.80 , 26 , self.id , 4 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}

if timer = 331
{
with (bfxA) {instance_destroy();}
}  

  }
  



if timer >= time-2 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}
