if state_type = "run" || state_type = "stand" {
        state_type = "attack";
        attack_type = "dash_attack";
        image_speed = 0;
        sprite_index = dash_attack_sprite;
        image_index=0;
        timer = 0;
        time = 40;
        timer_speed=1;
        hspeed*=0.3
}
if timer < time {
     state_type = "attack";
	 switch (timer) 
	 {
	 case 2: image_index = 1; break;
	 case 4: image_index = 2; break;
	 case 7: image_index = 3; sound_play(attacksnd3); sound_play(dash_sound); break;
	 case 8: image_index = 4; break;
	 case 9: image_index = 5; break;
	 case 12: image_index = 6; break;
	 case 20: sprite_index = dash_attack_sprite2; image_index = 0; break;
	 case 22: image_index = 1; break;
	 case 24: image_index = 2; break;
	 case 26: image_index = 3; break;
	 case 28: image_index = 4; break;
	 case 30: image_index = 5; break;
	 case 32: image_index = 6; break;
	 case 34: image_index = 7; break;
	 case 36: image_index = 8; break;
	 case 38: image_index = 9; break;
	 }
    
if timer = 8
{
hspeed = 6 * (1-facing*2) * size;
}	

if timer = 7
{

    create_hitbox ( 6 , angle_correct(13) , 3.6 , 0 , 12 , 7 , arcueid_hit3 , obj_spark_hit3 , 0.72 , 1.06 , 8 , 20 , self.id , 8 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox.di = 0.2;
	hitbox.weight_kb = 1;
	hitbox.sdi = 0;
	duster = instance_create(x,y,obj_dust_effect);
    duster.image_xscale *= 0.55*size;
    duster.image_yscale *= 0.5*size;
    duster.facing = facing;
	if (random(2) > 1)
	{
	sound_play(choose(attack_voice6,attack_voice7,attack_voice8));
	}
}

if timer >= 8 and timer < 20
{


if ( timer mod 3 < 1 )
{
duster = instance_create(x + 5 * (1-facing*2) * size , y , obj_dust_effect);
duster.image_alpha = 0.75;
duster.image_xscale *= 0.35 * (1-facing*2) * size;
duster.image_yscale *= 0.30 * size;
}

if facing = 0 && hspeed > 0 {
		hspeed -= 0.1;
		}
	if facing = 1 && hspeed < 0 {
		hspeed += 0.1;
		}
}

if (timer >= 7 and timer < 15) and ((facing and smashleft) or (!facing and smashright)) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_ssmash();
with (dtiltfx) {instance_destroy();}
	}
	
	if (timer >= 7 and timer < 15) and smashdown and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_dsmash();
with (dtiltfx) {instance_destroy();}
	}
	
	if (timer >= 7 and timer < 15) and smashup and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_usmash();
with (dtiltfx) {instance_destroy();}
	}

}  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
