if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 24;
        timer_speed=1;
        has_hit = 0;
}
if ( timer < time )
  {

  
  state_type = "air_attack";
    switch ( timer )
      {
	case 2: image_index = 1; sound_play(attacksnd2); break;
	case 3: image_index = 2; break;
	case 6: image_index = 3; break;
	case 9: image_index = 4; break;
	case 11: image_index = 5; sound_play(attacksnd2); break;
	case 12: image_index = 6; break;
	case 15: image_index = 7; break;
	case 18: image_index = 8; break;
	case 21: image_index = 9; break;

      }

if timer = 3
{
	if (random(2) > 1)
	{
	sound_play(choose(attack_voice3,attack_voice4,attack_voice5));
	}

    create_hitbox ( 3 , 370 , 5.5 , 0 , 5 , 3 , arcueid_hit1 , obj_spark_hit2 , 1.32 , 1.08 , 18 , 20 , self.id , 3 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
    hitbox.hit_stun = 9;
    hitbox.weight_kb = 0;
	hitbox.execute_on_hit = "attacker.has_hit = 1;"
}

if ( has_hit = 1 and timer < 11 )
{
target.direction = point_direction(target.x,target.y, x + 15 * (1-facing*2) * size , y - actual_height + ( 10 * size ) )
}	

if timer = 11
{
    create_hitbox ( 4 , angle_correct(20) , 3.5 , 4.7 , 8 , 5 , arcueid_hit2 , obj_spark_hit3 , 1.32 , 1.08 , 18 , 20 , self.id , 3 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}

if timer = 02
{
    fairfx = create_blur(x,y,self.id);
    fairfx.sprite_index = fair_fx;
    fairfx.image_index = 0;
    fairfx.image_speed = 0;
	fairfx.snap = self.id;
    fairfx.image_xscale = 0.3 * (1-facing*2) * size;
    fairfx.image_yscale = 0.3 * size;
    fairfx.x = x + place_x(90);
	fairfx.y = y + place_y(25);
    fairfx.depth = depth - 1;
}  

switch (timer)
{

	case 03: fairfx.image_index = 1; break;
	case 04: fairfx.image_index = 2; break;
	case 05: fairfx.image_index = 3; break;
	case 06: fairfx.image_index = 4; break;
	case 07: fairfx.image_index = 5; break;
	case 08: fairfx.image_index = 6; break;
	case 09: fairfx.image_index = 7; break;
	case 10: fairfx.image_index = 8; break;
	case 11: fairfx.image_index = 9; break;
	case 12: fairfx.image_index = 10; break;
	case 13: fairfx.image_index = 11; break;
	case 14: fairfx.image_index = 12; break;
}

if timer = 15
{
with (fairfx) {instance_destroy();}
}

if timer = 11
{
    fairfx2 = create_blur(x,y,self.id);
    fairfx2.sprite_index = fair_fx2;
    fairfx2.image_index = 0;
    fairfx2.image_speed = 0;
	fairfx2.snap = self.id;
    fairfx2.image_xscale = 0.4 * (1-facing*2) * size;
    fairfx2.image_yscale = 0.4 * size;
    fairfx2.x = x + place_x(100);
	fairfx2.y = y + place_y(50);
    fairfx2.depth = depth - 1;
}  

switch (timer)
{

	case 12: fairfx2.image_index = 1; break;
	case 13: fairfx2.image_index = 2; break;
	case 14: fairfx2.image_index = 3; break;
	case 15: fairfx2.image_index = 4; break;
	case 16: fairfx2.image_index = 5; break;
	case 17: fairfx2.image_index = 6; break;
	case 18: fairfx2.image_index = 7; break;
	case 19: fairfx2.image_index = 8; break;
	case 20: fairfx2.image_index = 9; break;
	case 21: fairfx2.image_index = 10; break;
	case 22: fairfx2.image_index = 11; break;
	case 23: fairfx2.image_index = 12; break;
}

if (timer >= 3 and timer < 11) and attacking and ((!facing and moveleft) or (facing and moveright)) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_bair();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}

	}
	
	if (timer >= 3 and timer < 11) and attacking and moveup and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_uair();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if (timer >= 3 and timer < 23) and attacking and movedown and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_dair();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if (timer >= 3 and timer < 23) and (special) and !moveup and !movedown and !moveleft and !moveright and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_b();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if (timer >= 3 and timer < 23) and (special and moveup) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_upb();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if (timer >= 3 and timer < 23) and (special and movedown) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_downb();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if (timer >= 3 and timer < 23) and (special and ((facing and moveleft) or (!facing and moveright))) and attack_success
	{
	state_type = "jump";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_sideb();
with (fairfx) {instance_destroy();}

if instance_exists (fairfx2)
{
with (fairfx2) {instance_destroy();}
}
	}
	
	if air = 0 {
        state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=9; }
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
  state_type = "jump";
  attack_type = "none";
  sprite_index = jump_sprite;

  image_index = 6;
  timer = 0;
  time = -1;
  }		

