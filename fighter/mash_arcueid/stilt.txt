if state_type = "run" || state_type = "stand" && sprite_index != land_sprite {
        hspeed = 0;
        state_type = "attack";
        attack_type = "stilt";
        image_speed = 0;
        sprite_index = stilt_sprite;
        image_index=0;
        timer = 0;
        time = 23;
        timer_speed=1;
}

if ( timer < time )
  {
  state_type = "attack";
    switch ( timer )
      {
	case 2: image_index = 1; break;
	case 3: image_index = 2; break;
	case 4: image_index = 3; break;
	case 5: image_index = 4; break;
	case 6: image_index = 5; break;
	case 7: image_index = 6; sound_play(attacksnd3); break;
	case 8: image_index = 7; break;
	case 9: image_index = 8; break;
	case 10: image_index = 9; break;
	case 11: image_index = 10; break;
	case 19: image_index = 11; break;
	case 21: image_index = 12; break;
	case 23: image_index = 13; break;
      }

    if timer = 6
	{
	hspeed = 4.2 * (1-facing*2) * size;
	
	if (random(2) > 1)
	{
	sound_play(choose(attack_voice3,attack_voice4,attack_voice5));
	}
	}

	if timer = 7 
	{
    create_hitbox ( 7 , angle_correct(25) , 3.1 , 4.3 , 15 , 7 , arcueid_hit3 , obj_spark_hit4 , 1.01 , 0.47 , 11.60 , 27.20 , self.id , 4 , 2 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	duster = instance_create(x,y,obj_dust_effect);
    duster.image_xscale *= 0.4*size;
    duster.image_yscale *= 0.3*size;
    duster.facing = facing;
	}
	  
	 if timer = 11
	{
		var burst;
		burst = instance_create(place_x(100)+x,place_y(29)+y,obj_jab_burst);
		burst.snap = self.id;
		burst.image_xscale = xsize * 0.4;
		burst.image_yscale = ysize * 0.4;
		burst.image_alpha = 0.5;
		hspeed = 0;
	} 
	  
	
	
	if (timer >= 7 and timer < 15) and (attacking and ((facing and moveleft) or (!facing and moveright))) or ((facing and smashleft) or (!facing and smashright)) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_ssmash();
	}
	
	if (timer >= 7 and timer < 15) and ((attacking and moveup) or smashup) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_usmash();
	}
	
	if (timer >= 7 and timer < 15) and smashdown and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_dsmash();
	}
	
	if (timer >= 7 and timer < 15) and (special and moveup) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_upb();
	}
	
	if (timer >= 7 and timer < 15) and (special) and !moveleft and !moveright and !moveup and !movedown and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_b();
	}
	
	if (timer >= 7 and timer < 15) and (special and movedown) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_downb();
	}
	
	if (timer >= 7 and timer < 15) and (special and ((facing and moveleft) or (!facing and moveright))) and attack_success
	{
	state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
    char_sideb();
	}
    
  }
  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" 
    {
    jabcancel = 0;
    dtiltcancel = 0;
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
