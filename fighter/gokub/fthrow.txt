if time = -1{
hspeed = 0;
state_type = "attack";
attack_type = "fthrow";
if roze = 1 {
sprite_index = fthrow_spriteR;
time = 60;
target.x = x+35*(1-facing*2)*size;
target.gravity_lock = 2;
}
else {
sprite_index = sideb_sprite;
time = 30;
target.x = x+30*(1-facing*2)*size;
}
image_index=0;
image_speed = 0;
timer = 0;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 100
target.state_type = "air_flinch";
target.sprite_index = target.flinch_sprite;
}
if roze = 0 {
switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 6: image_index = 3; break;
  case 8: image_index = 4; break;
  case 15: image_index = 5; break;
  case 30: image_index = 5; break;
  }
}
if roze = 1 {
switch ( timer )
  {
  case 10: image_index = 1; break;
  case 12: image_index = 2; break;
  case 14: image_index = 3; break;
  case 16: image_index = 4; break;
  case 18: image_index = 5; break;
  case 48: image_index = 6; break;
  case 60: image_index = 6; break;
  }
}
if timer < time {
	if roze = 0 {
    if timer = 8 {
        sound_play(dsmashsound);
        create_hitbox(12,30+facing*120,6,6,15,7,punch3,obj_spark_hit3,0.67,0.49,31.50,21.70,self.id,5,2);
   }
	if timer = 8 && !instance_exists(dthrow){
		dthrow = instance_create(x+40*(1-facing*2)*size,y,obj_spark)
		dthrow.sprite_index = dsmash_eff_sprite
		dthrow.image_xscale = size*0.15*(1-facing*2)
		dthrow.image_yscale = size*0.15
		dthrow.image_speed = 0.7
		dthrow.image_alpha = 1
		dthrow.depth = depth - 0.1
		dthrow.snap = self.id
	}
	}
	if roze = 1 {
		if timer > 1 && timer < 48 {
			target.y = y-5*size;
			target.gravity = 0;
			target.gravity_lock = 1;
			target.state_type = "air_flinch";
			target.sprite_index = target.flinch_sprite;
		}
		if timer = 16 {
		sound_play(slash_sound)
		sound_play(fthrowvoice)
        create_hitbox(5,361,0,0,15,15,slash3,obj_spark_slash3,0.67,0.49,31.50,21.70,self.id,5,2);
		hitbox.hit_stun = 10;
		stab = create_projectile(5,361,0,0,15,7,-1,-1,0.7,0.7,0,16,self.id,999,char_custom5);
		stab.x = target.x+10*(1-facing*2)*size
		stab.use_palette = number;
		stab.mask_index = no_mask;
		stab.depth = 1
		}
		if timer = 48 {
        create_hitbox(5,280-facing*20,6,0,0,0,slash3,obj_spark_slash3,0.67,0.49,31.50,21.70,self.id,5,2);
		hitbox.di = -1
		hitbox.hit_stun = 3;
		target.state_type = "down"
		}
	}
	}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
