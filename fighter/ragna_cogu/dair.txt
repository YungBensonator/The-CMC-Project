if state_type = "jump" {
        state_type = "air_attack";
        attack_type = "dair";
        image_speed = 0;
        sprite_index = dair_sprite;
        image_index=-0;
        timer = 0;
        time = 87;
}
if ( timer < time )
  {
  state_type = "air_attack";
    switch ( timer )
      {
	case 0: image_index = 0; break;
	case 2: image_index = 1; break;
	case 5: image_index = 2; break;
	case 8: image_index = 3; break;
	case 11: image_index = 4; break;
	case 13: image_index = 5; break;
	case 22: image_index = 6; break;
	case 24: image_index = 5; break;
	case 26: image_index = 6; break;
	case 28: image_index = 5; break;
	case 30: image_index = 6; break;
	case 32: image_index = 5; break;
	case 34: image_index = 6; break;
	case 36: image_index = 5; break;
	case 38: image_index = 6; break;
	case 40: image_index = 5; break;
	case 42: image_index = 6; break;
	case 44: image_index = 5; break;
	case 46: image_index = 6; break;
	case 48: image_index = 5; break;
	case 50: image_index = 6; break;
	case 52: image_index = 5; break;
	case 54: image_index = 6; break;
	case 56: image_index = 5; break;
	case 58: image_index = 6; break;
	case 60: image_index = 5; break;
	case 62: image_index = 6; break;
	case 64: image_index = 5; break;
	case 66: image_index = 6; break;
	case 68: image_index = 5; break;
	case 70: image_index = 6; break;
	case 72: image_index = 5; break;
	case 74: image_index = 6; break;
	case 76: image_index = 5; break;
	case 78: image_index = 6; break;
	case 80: image_index = 5; break;
	case 82: image_index = 6; break;
	case 84: image_index = 5; break;
	case 86: image_index = 6; break;
	
	case 100: image_index = 0; break;
	case 104: image_index = 1; break;
	case 108: image_index = 2; break;
	case 117: image_index = 3; break;
	case 123: image_index = 4; break;
	case 129: image_index = 5; break;
	case 135: image_index = 6; break;
      }
	  
	  if timer = 1 {
	  sound_play(dair_voice);
	  }
	  
	  if timer > 1 and timer < 13 {
		  hspeed = 0
		  air_move = 0
		  vspeed = -2.5
		  
	  }
	  
	  if timer = 11 {
		  sound_play(swingsnd3);
	  }
	  
	  if timer = 13 {
		  create_hitbox ( 7 , angle_correct(300) , 8 , 6 , 14 , 11 , bbslash4 , obj_spark_slash3 , 1 , 1 , 2.36 , 12.86 , self.id , 66 , 2 );
		  
		  elmeteoro = create_spark(-16,66,self.id);
    elmeteoro.sprite_index = dair_effect_sprite;
    elmeteoro.image_speed = 0;
    elmeteoro.image_alpha = 0.9;
    elmeteoro.image_xscale = 0.52 * (1-facing*2);
    elmeteoro.image_yscale = 0.52;
    elmeteoro.depth = depth - 0.1;
    elmeteoro.snap = self.id
	

	  }
	  
	  
	  
	  
	  if timer >= 13 and timer < 87 {
		  vspeed = 9.9
		  hspeed = 0
		  air_move = 0
		  
		  
	  }
	  
	  switch ( timer )
      {
	  case 13: elmeteoro.elmeteoro.image_index = 0; break;
	case 15: elmeteoro.image_index = 1; break;
	case 24: elmeteoro.image_index = 2; break;
	case 26: elmeteoro.image_index = 1; break;
	case 28: elmeteoro.image_index = 2; break;
	case 30: elmeteoro.image_index = 1; break;
	case 32: elmeteoro.image_index = 2; break;
	case 34: elmeteoro.image_index = 1; break;
	case 36: elmeteoro.image_index = 2; break;
	case 38: elmeteoro.image_index = 1; break;
	case 40: elmeteoro.image_index = 2; break;
	case 42: elmeteoro.image_index = 1; break;
	case 44: elmeteoro.image_index = 2; break;
	case 46: elmeteoro.image_index = 1; break;
	case 48: elmeteoro.image_index = 2; break;
	case 50: elmeteoro.image_index = 1; break;
	case 52: elmeteoro.image_index = 2; break;
	case 54: elmeteoro.image_index = 1; break;
	case 56: elmeteoro.image_index = 2; break;
	case 58: elmeteoro.image_index = 1; break;
	case 60: elmeteoro.image_index = 2; break;
	case 62: elmeteoro.image_index = 1; break;
	case 64: elmeteoro.image_index = 2; break;
	case 66: elmeteoro.image_index = 1; break;
	case 68: elmeteoro.image_index = 2; break;
	case 70: elmeteoro.image_index = 1; break;
	case 72: elmeteoro.image_index = 2; break;
	case 74: elmeteoro.image_index = 1; break;
	case 76: elmeteoro.image_index = 2; break;
	case 78: elmeteoro.image_index = 1; break;
	case 80: elmeteoro.image_index = 2; break;
	case 82: elmeteoro.image_index = 1; break;
	case 84: elmeteoro.image_index = 2; break;
	case 86: elmeteoro.image_index = 1; break;
	  }
	  
	  
	  
	  
	
	  
	if air = 0 and timer < 87 {
		timer = 100
		time = 137
		sprite_index = dairland_sprite
		image_index = 0
		with(hitbox) {instance_destroy()}
		with(elmeteoro) {instance_destroy()}
	}
	
	if timer = 101 {
		wetfart = create_spark(-8,73,self.id);
    wetfart.sprite_index = dairland_effect_sprite;
    wetfart.image_speed = 0.4;
    wetfart.image_alpha = 0.9;
    wetfart.image_xscale = 0.52 * (1-facing*2);
    wetfart.image_yscale = 0.52;
    wetfart.depth = depth - 0.1;
    wetfart.snap = self.id
	}
	
	
  }


if (timer >= 13){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if (target.percent > 30 && target.offstage){
				 killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
  }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
	dontrepeat = 0;
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }		
        
