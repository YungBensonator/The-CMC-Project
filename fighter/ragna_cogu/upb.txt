fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
    timer = 0;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = upb_sprite;
    image_index=0;
    time = 56;
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
	 blingboy = 0
	 attack_success = 0
	 twoparter = 0
	 threeparter = 0
	 special = 1
	 healed = 0
}

if timer < time {
	state_type = "air_attack"
    switch ( timer )
      {
	case 0: image_index = 0; break;
	case 1: image_index = 1; break;
	case 2: image_index = 2; break;
	case 3: image_index = 3; break;
	case 4: image_index = 4; break;
	case 5: image_index = 5; break;
	case 6: image_index = 6; break;
	case 7: image_index = 7; break;
	case 8: image_index = 8; break;
	case 9: image_index = 9; break;
	case 11: image_index = 10; break;
	case 13: image_index = 11; break;
	case 15: image_index = 12; break;
	case 17: image_index = 13; break;
	case 19: image_index = 0; break;
	case 22: image_index = 1; break;
	case 25: image_index = 2; break;
	case 28: image_index = 3; break;
	case 31: image_index = 4; break;
	case 34: image_index = 5; break;
	case 37: image_index = 6; break;
	case 40: image_index = 7; break;
	case 43: image_index = 8; break;
	case 46: image_index = 9; break;
	case 49: image_index = 10; break;
	case 52: image_index = 11; break;
	case 55: image_index = 12; break;
	
	case 100: image_index = 0; break;
	case 101: image_index = 1; break;
	case 102: image_index = 2; break;
	case 103: image_index = 3; break;
	case 104: image_index = 4; break;
	case 105: image_index = 5; break;
	case 106: image_index = 6; break;
	case 110: image_index = 7; break;
	case 114: image_index = 8; break;
	case 118: image_index = 9; break;
	case 122: image_index = 10; break;
	case 126: image_index = 11; break;
	case 130: image_index = 12; break;
	case 134: image_index = 13; break;
	case 138: image_index = 14; break;
	case 142: image_index = 15; break;
	
	case 200: image_index = 0; break;
	case 203: image_index = 1; break;
	case 205: image_index = 2; break;
	case 207: image_index = 3; break;
	case 209: image_index = 4; break;
	case 211: image_index = 5; break;
	case 213: image_index = 6; break;
	case 215: image_index = 7; break;
	case 217: image_index = 8; break;
	case 221: image_index = 9; break;
	case 225: image_index = 10; break;
      }
	  
	if timer > 1 {
		force_edge_grab = 1
	}
	
	if timer = 19 {
	sprite_index = upbother_sprite
	image_index = 0
	}
	
	if timer > 9 and attack_success = 1 and blingboy = 0 and od = 0 {
		percent -= 5
		blingboy = 1
		effect_create_above(ef_ring,x + 1,y - 20,0.5,c_purple)
	}
	
	if timer > 9 and attack_success = 1 and blingboy = 0 and od = 1 {
		percent -= 11
		blingboy = 1
		effect_create_above(ef_ring,x + 1,y - 20,0.5,c_purple)
	}
	
	if timer = 7 {
		infernodivider = create_blur(x - 9 * (1-facing*2),y - 75,self.id);
    infernodivider.sprite_index = upb_effect_sprite;
    infernodivider.anim_speed = 0.8;
    infernodivider.image_alpha = 0.9;
    infernodivider.image_xscale = 0.48 * (1-facing*2);
    infernodivider.image_yscale = 0.48;
    infernodivider.depth = depth - 0.1;
    infernodivider.snap = self.id
	infernodivider.is_solid = true;
	
	}
	
	
	
	
	if timer = 9 {
		vspeed = -8.9
		hspeed = 1.4 * (1-facing*2)
		air_move = 0
		sound_play(upb_voice);
		sound_play(beast_sound4);
		create_hitbox ( 6 , 369 , 0 , 0 , 7 , 9 , bbslash3 , obj_spark_hit2 , 0.55 , 0.84 , 28.67 , 19.97 , self.id , 2 , 3 );
    hitbox.hit_stun = 15
	hitbox.di = 0
    create_hitbox2 ( 6 , 369 , 0 , 0 , 7 , 9 , bbslash3 , obj_spark_hit2 , 0.72 , 0.41 , 29.61 , 2.11 , self.id , 2 , 3 );
    hitbox2.hit_stun = 15
	hitbox2.di = 0
    create_hitbox3 ( 6 , 369 , 0 , 0 , 7 , 9 , bbslash3 , obj_spark_hit2 , 0.37 , 0.85 , 15.04 , 21.62 , self.id , 2 , 3 );
    hitbox3.hit_stun = 15
	hitbox3.di = 0
    create_hitbox4 ( 6 , 369 , 0 , 0 , 7 , 9 , bbslash3 , obj_spark_hit2 , 0.39 , 0.43 , 13.63 , 2.35 , self.id , 2 , 3 );
	hitbox4.hit_stun = 15
	hitbox4.di = 0
	}
	
	if timer = 11 {
		    create_hitbox ( 8 , angle_correct(66) , 6.4 , 5.2 , 15 , 7 , bbslash4 , obj_spark_darkness , 1.11 , 0.42 , 32.67 , 26.32 , self.id , 7 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 306.87;
    create_hitbox2 ( 8 , angle_correct(66) , 6.4 , 5.2 , 15 , 7 , bbslash4 , obj_spark_darkness , 0.99 , 1.1 , 11.51 , 18.68 , self.id , 7 , 3 );

    create_hitbox3 ( 8 , angle_correct(66) , 6.4 , 5.2 , 15 , 7 , bbslash4 , obj_spark_darkness , 0.36 , 0.63 , 18.33 , 41.83 , self.id , 7 , 3 );
	}
	
	if timer < 11 and attack_success = 1 and special = 1 {
		twoparter = 1
	}
	
	if twoparter = 1 and timer < 215 {
		target.y = y - 7
		target.x = x + 5 * (1-facing*2)
	}
	
	if timer = 25 and twoparter = 1 {
		timer = 100
		time = 150
		image_index = 0
		sprite_index = upb2_sprite
	}
	
	if timer = 106 {
		create_hitbox(5,angle_correct(90),0,0,19,7,bbhit3,obj_spark_hit4,1.4,1.9,20,30,self.id,3,3);
		hitbox.di = 0
		vspeed = -4.7
		sound_play(attacksnd3);
		sound_stop(upb_voice);
		sound_play(upb2_voice);
		hitbox.hit_stun = 15
	}
	
	if timer > 100 and timer < 118 and special = 1 {
		threeparter = 1
	}
	
	if timer = 118 and threeparter = 1 {
		timer = 200
		time = 230
		image_index = 0
		sprite_index = upb3_sprite
	}
	
	if timer = 215 {
		create_hitbox(5,angle_correct(333),5.7,4.9,19,7,bbhit4,obj_spark_hit4,1.4,1.9,20,30,self.id,3,3);
		sound_play(swingsnd3);
		sound_stop(upb2_voice);
		sound_play(upb3_voice);
	}
	
	if timer > 9 and air = 0 {
		state_type="land";
        attack_type="none";
        sprite_index = land_sprite;
        timer=0;
        time=9; 
	}
	}
if ((timer >= 11 && timer < 18  || timer = 215)){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 120) || (target.weight > .22 && target.weight < .3 && target.percent > 135) || (target.weight > .3 && target.percent > 150)){
				killspark = instance_create(enemy.x-180,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				image_speed = 0.5;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
  }	
	
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
		dontrepeat = 0;
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
