if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "bair";
        image_speed = 0;
        sprite_index = sidebair_sprite;
        image_index=6;
        timer = 0;
        time = 39;
        timer_speed=1;
}
if timer < time && state_type = "air_attack" {
            attacking = 0;
            state_type = "air_attack";
			image_xscale = -1+facing*2;
			
switch ( timer )
      {
	case 4: image_index = 6; break;
	case 6: image_index = 5; break;
	case 8: sprite_index = bair_sprite; image_index = 0; break;
	case 11: image_index = 1; break;
	case 14: image_index = 2; break;
	case 17: image_index = 3; break;
	case 20: image_index = 0; break;
	case 23: image_index = 1; break;
	case 26: image_index = 2; break;
	case 29: image_index = 3; break;
	case 32: image_index = 4; break;
	case 35: image_index = 5; break;

      }
	 if (target.weight >= 3)
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),4.5,20);
	}
	else
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),3,10);
	}	
	multiangle = point_direction(tempx,tempy,x,y);
	
	tempx=x;
	tempy=y;
	if timer = 8 || timer = 11 || timer = 14 || timer = 17 || timer = 20 || timer = 23 || timer = 26 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash2 , obj_spark_hit2 , 1.16 , 2.00 , -22.80 , 21.90 , self.id , 3 , 3 );	
hitbox.di = 0;
sound_play(swingsnd2);
}

if timer = 29 {
create_hitbox ( 7 , 160-facing*140 , 6 , 5.5 , 8 , 7 , slash3 , obj_spark_slash4 , 1.16 , 2.00 , -22.80 , 21.90 , self.id , 3 , 3 );	
}
            
 if air = 0 {
		if timer < 30 {
                with hitbox instance_destroy();
                create_hitbox(4,160-facing*140,4.9,1.5,6,4,slash1,obj_spark_hit3, 1.16 , 2.00 , -22.80 , 21.90 ,self.id,3,2);
                create_hitbox2(4,160-facing*140,5.2,3.4,3,11,slash1,obj_spark_hit4, 1.16 , 2.00 , -22.80 , 21.90 ,self.id,3,2);
                hitbox2.remain = 1
		hitbox.remain = 1 }
            state_type="land";
            sprite_index = land_sprite;
            attack_type="none";
            hspeed = 0;
            timer=0;
            time=10; }
}
if timer >= time -1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    }
        
