if state_type = "stand" || state_type = "run" || state_type = "crouch" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "dsmash";
        image_speed = 0;
        sprite_index = dsmash_sprite;
        image_index=0;
        timer = 0;
        time = 50;
        timer_speed=1;
        charge_frame = 1;
}
if ( timer < time )
  {
  state_type = "attack";
    switch ( timer )
      {
	case 4: image_index = 0; break;
	case 8: image_index = 1; break;
	case 12: image_index = 2; break;
	case 14: image_index = 3; break;
	case 16: image_index = 4; break;
	case 18: image_index = 5; break;
	case 20: image_index = 6; break;
	case 22: image_index = 7; break;
	case 24: image_index = 8; break;
	case 26: image_index = 9; break;
	case 28: image_index = 10; break;
	case 30: image_index = 11; break;
	case 32: image_index = 12; break;
	case 34: image_index = 13; break;
	case 36: image_index = 14; break;
	case 38: image_index = 15; break;
	case 40: image_index = 16; break;
	


      }
if timer = 14 {
create_hitbox ( 11 , 10+facing*160 , 4.5 , 5 , 14 , 8 , slash3 , obj_spark_slash4 , 1.00 , 0.60 , 47.88 , 33.74 , self.id , 22 , 4 );
sound_play (swingsnd2);
  }
  
if timer = 16 {
 hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 33.60
    hitbox.hitbox_y = size * 49.44
    hitbox.image_xscale = size * 1.06
    hitbox.image_yscale = size * 0.59
	hitbox.dir = 40+facing*100
	}
	
if timer = 18 {
hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 7.56
hitbox.hitbox_y = size * 58.52
hitbox.image_xscale = size * 1.12
hitbox.image_yscale = size * 0.54
hitbox.dir = 90
}

if timer = 20 {
hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -22.68
hitbox.hitbox_y = size * 45.92
hitbox.image_xscale = size * 1.11
hitbox.image_yscale = size * 0.50
hitbox.dir = 140-facing*100

}

if timer = 22 {
 hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -34.44
    hitbox.hitbox_y = size * 26
    hitbox.image_xscale = size * 1.09
    hitbox.image_yscale = size * 0.54
	hitbox.dir = 170-facing*160
}

if timer = 24 {
     hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -36.96
    hitbox.hitbox_y = size * 3.92
    hitbox.image_xscale = size * 1.05
    hitbox.image_yscale = size * 0.57
	hitbox.dir = 200+facing*140
}

if timer = 26 {
  hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -26.04
    hitbox.hitbox_y = size * -21.28
    hitbox.image_xscale = size * 1.02
    hitbox.image_yscale = size * 0.50
	hitbox.dir = 225+facing*90
}

if timer = 28 {
hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 6.72
    hitbox.hitbox_y = size * -35.56
    hitbox.image_xscale = size * 1.16
    hitbox.image_yscale = size * 0.50
	hitbox.dir = 0
}

if timer = 30 {
 hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 36.12
    hitbox.hitbox_y = size * -22.12
    hitbox.image_xscale = size * 1.01
    hitbox.image_yscale = size * 0.59
	hitbox.dir = 310-facing*80
}

if timer = 32 {
     hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 49.56
    hitbox.hitbox_y = size * 8.72
    hitbox.image_xscale = size * 0.99
    hitbox.image_yscale = size * 0.52
	hitbox.dir = 5+facing*170
}

if timer = 34 {
  hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 23.52
    hitbox.hitbox_y = size * 17.84
    hitbox.image_xscale = size * 1.10
    hitbox.image_yscale = size * 0.56
}

}

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  {
    state_type = "stand";
    attack_type = "none";
    timer = 0;
    time = -1;
  }
        
