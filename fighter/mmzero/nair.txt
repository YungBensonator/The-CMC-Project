if state_type = "jump"
  {
    state_type = "air_attack";


    attack_type = "nair";
    sprite_index = fair_sprite;
    image_index = 0;
    image_speed = 0;
    timer = 0;
    time = 42;
    timer_speed=1;
	play_attack_voice(atk1)
	target = 0



  }
if ( timer < time )

state_type = "air_attack";
    switch ( timer )
      {
	  case 1: image_index = 0; image_angle = 10-facing*10; break;
      case 2: image_index = 0; image_angle = 15-facing*30; break;
	  case 3: image_index = 0; image_angle = 18-facing*36; break;
	  case 4: image_index = 0; image_angle = 19-facing*38; break;
	  case 5: image_index = 0; image_angle = 20-facing*40; break;
	  case 6: image_index = 0; image_angle = 20-facing*40; break;
	  case 7: image_index = 0; image_angle = 20-facing*40; break;
	  case 8: image_index = 0; image_angle = 15-facing*30; break;
	  case 9: image_index = 0; image_angle = 10-facing*20; break;
	  case 10: image_index = 0; sprite_index = nair_sprite; image_angle = 0 break;
	  case 12: image_index = 1; break;
	  case 14: image_index = 2; break;
      case 16: image_index = 3; break;
	  case 18: image_index = 4; break;
	  case 20: image_index = 5; break;
	  case 22: image_index = 6; break;
	  case 24: image_index = 7; break;
	  case 26: image_index = 0; break;
	  case 28: image_index = 1; break;
	  case 30: image_index = 2; break;
      case 32: image_index = 3; break;
	  case 35: sprite_index = sidebair_sprite; image_index = 5; image_angle = 340*(1-facing*2); break;
	  case 35: image_index = 5; image_angle = 345*(1-facing*2); break;
	  case 35: image_index = 5; image_angle = 350*(1-facing*2); break;
	  case 38: image_index = 6; image_angle = 353*(1-facing*2); break;
	  case 39: image_index = 6; image_angle = 355*(1-facing*2); break;
	  case 40: image_index = 6; image_angle = 358*(1-facing*2); break;	
	  case 41: image_index = 6; image_angle = 0*(1-facing*2); break;
	  }
	  

if (target.weight >= 3)
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),4.5,20);
	}
	else
	{
		multispd = clamp(sqrt(sqr(abs(hspeed)* 1.1) + sqr(abs(vspeed - 2))),3,10);
	}	
	multiangle = point_direction(tempx,tempy,x,y);
	
	tempx=x;
	tempy=y;

    if timer = 10 {
sound_play(saber_voice);
 create_hitbox ( 1 , multiangle ,multispd, 0 , 8 , 2 , slash1 , obj_spark_slash2 , 1.50 , 0.60 , 3.40 , 30.40 , self.id , 2 , 3 ); 
hitbox.hitstun = 10;
hitbox.di = 0;
}

if timer = 12 {
create_hitbox ( 1 , multiangle , multispd, 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.87 , 1.38 , 20.40 , 32.75 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 32.40;
hitbox.hitstun = 10;
hitbox.di = 0;

}

if timer = 14 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.83 , 1.38 , 23.80 , 10.85 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 153.43;
hitbox.hitstun = 10;
hitbox.di = 0;
sound_play(saber_voice);
}

if timer = 16 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 1.19 , 0.85 , 17.85 , -10.40 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 211.61;
hitbox.hitstun = 10;
hitbox.di = 0;

}

if timer = 28 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 1.47 , 0.77 , 0 , -12.10 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 0;
hitbox.hitstun = 10;
hitbox.di = 0;
sound_play(saber_voice);
}

if timer = 20 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.88 , 1.40 , -22.10 , -4.45 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 30.91;
hitbox.hitstun = 10;
hitbox.di = 0;

}

if timer = 22 {
create_hitbox ( 1 , multiangle , multispd, 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.87 , 1.17 , -22.10 , 12.55 , self.id , 2 , 3 );
hitbox.hitstun = 10;
hitbox.di = 0;
sound_play(saber_voice);
}

if timer = 24 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 1.30 , 0.78 , -19.15 , 30.40 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 211.50;
hitbox.hitstun = 10;
hitbox.di = 0;

}

if timer = 26 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 1.50 , 0.60 , 3.40 , 30.40 , self.id , 2 , 3 ); 
hitbox.hitstun = 10;
hitbox.di = 0;
sound_play(saber_voice);
}

if timer = 28 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.87 , 1.38 , 20.40 , 22.75 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 32.40;
hitbox.hitstun = 10;
hitbox.di = 0;

}

if timer = 30 {
create_hitbox ( 1 , multiangle , multispd , 0 , 8 , 2 , slash1 , obj_spark_slash2 , 0.83 , 1.38 , 23.80 , 10.85 , self.id , 2 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 153.43;
hitbox.hitstun = 10;
hitbox.di = 0;
sound_play(saber_voice);
}
if timer = 32 {
create_hitbox(5,50+facing*80,5.1,4.4,10,6,slash2,obj_hit_slash3,2,2,0,14,self.id,4,3);
}


 if air = 0 {
		if timer < 33 {
                with hitbox instance_destroy();
                create_hitbox(5,20+facing*140,4.9,1.7,7,10,slash1,obj_spark_hit3,1,1,0,0,self.id,3,2);
                create_hitbox2(5,280-facing*20,5.8,3.8,7,12,slash1,obj_spark_hit4,1,1,0,0,self.id,3,2);
                hitbox2.remain = 1
		hitbox.remain = 1 }
            state_type="land";
            sprite_index = land_sprite;
            attack_type="none";
            hspeed = 0;
            timer=0;
            time=12; }

if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" ) {
  state_type = "jump";
  attack_type = "none";
  sprite_index = jump_sprite;

  image_index = 0;
  timer = 0;
  time = -1;
}