if time = -1 {
hspeed = 0;
state_type = "air_attack";
attack_type = "dthrow";
image_speed = 0;
sprite_index = downb3_sprite;
image_index=0;
timer = 200;
time = 300;
timer_speed=1;
target.timer_speed = 0;
target.alarm[0] = 70
}

if timer < time {
		switch (timer) { 
   case 200: image_index = 0; break; 
	case 201: image_index = 1; break; 
	case 202: image_index = 2; break; 
	case 204: image_index = 3; break; 
	case 205: image_index = 4; break; 
	case 207: image_index = 5; break; 
	case 208: image_index = 6; break; 
	case 209: image_index = 7; break; 
	case 209: image_index = 8; break; 
	case 210: image_index = 9; break; 
	case 211: image_index = 10; break; 
	case 212: image_index = 11; break; 
	
	case 213: image_index = 5; facing = 1-facing; break; 
	case 214: image_index = 6; break; 
	case 215: image_index = 7; break; 
	case 216: image_index = 8; break; 
	case 217: image_index = 9; break; 
	case 218: image_index = 10; break; 
	case 219: image_index = 11; break; 
	
	case 220: image_index = 5; facing = 1-facing; break; 
	case 221: image_index = 6; break; 
	case 222: image_index = 7; break; 
	case 223: image_index = 8; break; 
	case 224: image_index = 9; break; 
	case 225: image_index = 10; break; 
	case 226: image_index = 11; break; 
	
	case 227: image_index = 5; facing = 1-facing; break; 
	case 228: image_index = 6; break; 
	case 229: image_index = 7; break; 
	case 230: image_index = 8; break; 
	case 231: image_index = 9; break; 
	case 232: image_index = 10; break; 
	case 233: image_index = 11; break; 
	
	case 234: image_index = 5; facing = 1-facing; break; 
	case 235: image_index = 6; break; 
	case 236: image_index = 7; break; 
	case 237: image_index = 8; break; 
	case 238: image_index = 9; break; 
	case 239: image_index = 10; break; 
	case 240: image_index = 11; break; 

	case 241: image_index = 9; sprite_index = dthrow_sprite; break; 
	case 244: image_index = 10; break; 
	case 280: image_index = 11; break; 
	case 286: image_index = 12; break; 


	}
	
	if timer >= 200 and timer < 242 {
		speed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer >= 242 and timer < 300 {
		vspeed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer >= 212 and timer <= 280 {
		target.state_type = "flinch"
target.depth = depth + 1;
target.speed = 0;
target.gravity_lock = 1;
	}
	
	if timer = 212 {
		sound_play(choose(dthrow_voice,dthrow_voice2))
	}
	
	

if timer = 212 or timer = 219 or timer = 226 or timer = 233 or timer = 240 {
	x = target.x + 50 * (1-facing*2)
	create_projectile(1.5, 90, 0, 0, 200, 1, bbslash3, obj_spark_ice2, 1, 1, 15, 30, self.id, 20, -1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		slashproj = create_projectile(1.5, angle_correct(80), 7.9, 6, 11, 24, bbslash3, obj_spark_slash4, 0.27, 0.2, 10, 25, self.id, 1000, no_script);
	    slashproj.sprite_index = slash_eff2;
		slashproj.alarm[0] = 7
		slashproj.depth = depth - 5
		slashproj.image_blend = c_aqua
		slashproj.hit = 2
		duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.3
				duster.image_blend = c_aqua
				screen_shake(4,-6);
				
}

if timer = 212 {
	icecube = create_projectile(2, 90, 0, 0, 200, 1, bbslash3, obj_spark_ice2, 0.2, 0.2, 15, 30, self.id, 1000, char_custom1);
		icecube.hit = 2
		icecube.x = target.x;
        icecube.y=target.y-(target.actual_height / 2 );
		icecube.image_xscale = target.size / 2.2
		icecube.image_yscale = target.size / 2.2
}

if timer = 280 {
	create_projectile(2, 90, 6, 0, 200, 15, bbslash4, obj_spark_ice2, 1, 1, 15, 30, self.id, 20, -1);
		proj.x = target.x;
        proj.y=target.y-(target.actual_height / 2 );
		proj.image_alpha = 0
		proj.di = 0
		proj.hit_stun = 35
		sound_play(sheath_sound);
		icecube.breakup = 1
}

if timer = 242 {
	hspeed = 4 * (1-facing*2)
}

if timer >= 242 and timer < 262 {
	hspeed -= 0.2 * (1-facing*2)
	if timer mod 5 = 0 {
		duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.1
	}
		
}

if timer >= 213 {
	slashproj.image_alpha -= 0.075 
}

if slashproj.image_alpha <= 0 {
	with (slashproj) {instance_destroy()}
}






	  
	

}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
