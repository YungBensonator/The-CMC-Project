fast_fall = 0
fast_fall_temp = 0
if state_type = "jump" || state_type = "stand" || state_type = "run" || state_type = "crouch" and sidebee = 0 {
        state_type = "air_attack"
        attack_type = "sideb"
        image_speed = 0
        sprite_index = sideb_sprite
        image_index=0
        timer = 0
        time = 60
		eject = 0
    }

if ( timer < time )
  {
state_type = "air_attack"
	switch (timer) { 
	case 0: image_index = 0; break; 
	case 4: image_index = 1; break; 
	case 7: image_index = 2; break; 
	case 10: image_index = 3; break; 
	case 12: image_index = 4; break; 
	case 14: image_index = 5; break; 
	case 17: image_index = 6; break; 
	case 19: image_index = 7; break; 
	
	case 100: image_index = 0; break; 
	case 102: image_index = 1; break; 
	case 105: image_index = 2; break; 
	case 109: image_index = 3; break; 
	case 112: image_index = 4; break; 
	case 115: image_index = 5; break; 
	case 117: image_index = 6; break; 
	case 119: image_index = 7; break; 
	case 120: image_index = 8; break; 
	
	case 150: image_index = 0; break; 
	case 154: image_index = 1; break; 
	case 157: image_index = 2; break; 
	case 159: image_index = 3; break; 
	case 160: image_index = 4; break; 
	case 162: image_index = 5; break; 
	case 164: image_index = 6; break; 
	case 166: image_index = 7; break; 
	case 168: image_index = 8; break; 

	case 200: image_index = 0; break; 
	case 202: image_index = 1; break; 
	case 204: image_index = 2; break; 
	case 206: image_index = 3; break; 
	case 209: image_index = 4; break; 
	case 211: image_index = 5; break; 
	case 213: image_index = 6; break; 
	case 216: image_index = 7; break; 
	case 219: image_index = 8; break; 
	case 222: image_index = 9; break; 
	
	case 250: image_index = 0; break; 
	case 254: image_index = 1; break; 
	case 257: image_index = 2; break; 
	case 260: image_index = 3; break; 
	case 263: image_index = 4; break; 
	case 266: image_index = 5; break; 



}

if timer < 100 {
	vspeed = 0
	air_move = 0
	gravity_lock = 1
}

if timer = 1 {
	icecar = create_spark(7,6,self.id);
    icecar.sprite_index = icecar_sprite;
    icecar.image_speed = 0;
    icecar.image_alpha = 0;
    icecar.image_xscale = 0.2 * (1-facing*2);
    icecar.image_yscale = 0.2;
    icecar.depth = depth + 0.1;
    icecar.snap = 0
	icecar.loop = 9999
	sound_play(icecreate_sound);
	sound_play(choose(sideb_voice,sideb_voice2,sideb_voice3))
}

if timer >= 1 and timer <= 10 {
	icecar.image_alpha += 0.1
}

if timer >= 10
icecar.snap = self.id

if timer >= 1 and timer < 17 {
	hspeed = 1 * (1-facing*2)
}

if timer = 17 {
	create_hitbox ( 8 , angle_correct(40) , 4.8 , 1 , 10 , 6 , bbslash3 , obj_spark_ice2 , 1.3 , 1.3 , 0 , 4.05 , self.id , 28 , 3 );
	hitbox.execute_on_hit = "
	attacker.timer = 45
	attacker.hspeed = 4 * (1-attacker.facing*2)
	"
}
	


if timer >= 17 and timer < 45 {
	hspeed = 8 * (1-facing*2)
	after_image(3,c_aqua,0.45)
	with (icecar) 
	after_image(3,c_aqua,0.45)
	
	if timer mod 5 = 0 {
		duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.3
				duster.image_blend = c_aqua
				snowflake1 = create_projectile(1, 90, 0.1, 0, 1, 2, freeze2, obj_spark_ice2, 0.3, 0.3, 0, 0, self.id, 1000, char_custom3);
	snowflake1.x = x + random_range(-50, 0) * (1-facing*2)
	snowflake1.y = y - random_range(-38, 0)
	snowflake2 = create_projectile(1, 90, 0.1, 0, 1, 2, freeze2, obj_spark_ice2, 0.3, 0.3, 0, 0, self.id, 1000, char_custom3);
	snowflake2.x = x + random_range(0, 50) * (1-facing*2)
	snowflake2.y = y - random_range(0, 38)
	snowflake1.facing = facing
	snowflake2.facing = facing
	smoke = effect_create_above(ef_smokeup,x,y,0,c_aqua)
				smoke.image_xscale = 0.6 * (1-facing*2)
                smoke.image_yscale = 0.6
				icetrail = instance_create(x,y,obj_spark);
    icetrail.sprite_index = icetrail_sprite;
	icetrail.image_index = 0;
    icetrail.image_speed = 0.6;
    icetrail.image_alpha = 1;
    icetrail.image_xscale = 0.4 * (1-facing*2);
    icetrail.image_yscale = 0.4;
    icetrail.depth = depth - 0.1;
	}
	

}

if timer >= 17 and timer < 55 {
	
if special and movedown {
		timer = 100
		time = 135
		sprite_index = sidebdown_sprite
		image_index = 0
		with (hitbox) {instance_destroy()}
	}
	
	if special and  ( ( moveright && facing = 0 ) || ( moveleft && facing = 1 ) ) {
		timer = 200
		time = 235
		sprite_index = sidebforward_sprite
		image_index = 0
		with (hitbox) {instance_destroy()}
	}
	
}

if timer >= 45 and timer < 55 {
	icecar.image_alpha -= 0.1
	hspeed -= 0.5 * (1-facing*2)
}

if timer = 56 {
	with (icecar) {instance_destroy()}
}

if timer = 57 {
	sidebee = 1
	state_type = "jump";
	attack_type = "none";
	sprite_index = jump_sprite;
	image_index = 0;
	vspeed -= 3 * size;
	sound_play(jump_sound);
}

if timer = 101 {
	vspeed = -3
}

if timer >= 100 and timer < 150 {
	hspeed = 1.5 * (1-facing*2)
	icecar.image_alpha -= 0.1
	icecar.snap = 0
}

if timer >= 102 and timer < 150 {
	if air = 0 {
		timer = 150
		time = 180
		sprite_index = sidebdownland_sprite
		image_index = 0
		hspeed = 0
	}
}

if timer = 111 {
	with (icecar) {instance_destroy()}
}

if timer = 115 {
	create_hitbox ( 8 , angle_correct(300) , 5.5 , 4 , 10 , 15 , bbslash4 , obj_spark_slash3 , 2.23 , 1.47 , 11.70 , 20.25 , self.id , 2 , 3 );
	sound_play(swingsnd3);
	sidebdownslash = create_spark(11,32,self.id);
    sidebdownslash.sprite_index = sidebdownslash_sprite;
    sidebdownslash.image_speed = 0;
    sidebdownslash.image_alpha = 1;
    sidebdownslash.image_xscale = 0.3 * (1-facing*2);
    sidebdownslash.image_yscale = 0.3;
    sidebdownslash.depth = depth - 0.1;
    sidebdownslash.snap = self.id
	sidebdownslash.loop = 9999
	sidebdownslash.image_blend = c_aqua
  }
  
  if timer >= 115 {
	  sidebdownslash.image_alpha -= 0.1
  }

  if timer = 130 {
	  with (sidebdownslash) {instance_destroy()}
  }


if timer = 164
sound_play(sheath_sound);

/////////////////////////

if timer >= 200 and timer < 250 {
	hspeed = 1.5 * (1-facing*2)
	icecar.image_alpha -= 0.1
	icecar.snap = 0
}

if timer = 201
vspeed = -3

if timer >= 202 and timer < 250 {
	if air = 0 {
		timer = 250
		time = 280
		sprite_index = sidebforwardland_sprite
		image_index = 0
		hspeed = 0
	}
}

if timer = 211 {
	with (icecar) {instance_destroy()}
}

if timer = 213 {
	create_hitbox ( 11 , angle_correct(20) , 6 , 5 , 10 , 15 , bbslash4 , obj_spark_slash3 , 2.23 , 1.47 , 11.70 , 20.25 , self.id , 3 , 3 );
	sound_play(swingsnd3);
	sidebforwardslash = create_spark(5,10,self.id);
    sidebforwardslash.sprite_index = sidebforwardslash_sprite;
    sidebforwardslash.image_speed = 0;
    sidebforwardslash.image_alpha = 1;
    sidebforwardslash.image_xscale = 0.3 * (1-facing*2);
    sidebforwardslash.image_yscale = 0.3;
    sidebforwardslash.depth = depth - 0.1;
    sidebforwardslash.snap = self.id
	sidebforwardslash.loop = 9999
	sidebforwardslash.image_blend = c_aqua
  }
  
  if timer >= 213 {
	  sidebforwardslash.image_alpha -= 0.1
  }

  if timer = 230 {
	  with (sidebforwardslash) {instance_destroy()}
  }
  
  if timer = 254 
  sound_play(sheath_sound);
	  
	
  }
  


if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	sidebee = 1
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}