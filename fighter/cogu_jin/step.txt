if enemy.x>x && enemy_dist < 33000 && !(enemy.x<x) && air = 0 && attack_type = "none" && (state_type = "stand" || state_type = "crouch" || sprite_index = walk_sprite)
{
	facing = 0;
	if (moveleft)
	{image_speed = -image_speed}
}

if enemy.x<x && enemy_dist < 33000 && !(enemy.x>x) && air = 0 && attack_type = "none" && (sprite_index = stand_sprite || state_type = "crouch" || sprite_index = walk_sprite)
{
	facing = 1;
	if (moveright)
	{image_speed = -image_speed}
}

if(state_type != "air_attack" && state_type != "attack")
{
        if (instance_exists(bfire)){
        with (bfire){
            instance_destroy();
        }
        }
}

if state_type != "crouch" {
    crouching = 0
}

if state_type = "crouch" {
    crouch2 = 0
    if crouching = 0 {
        timer = 0
        crouching = 1
    }
    crouch_timer = timer
    crouch_temp = 1
    if crouch_timer < crouch_pre_time {
        if crouch_timer = 0
        image_index = 0
        sprite_index = crouch_pre_sprite
        image_speed = image_number / (crouch_pre_time)
        if image_index > (image_number - 1) {
            image_index = (image_number - 1)
            image_speed = 0
        }
    }
    if crouch_timer = crouch_pre_time {
        image_index = 0
        sprite_index = crouch_sprite
        image_speed = as_crouch
    }

}

if crouch_temp and state_type = "stand" {
    value = min(crouch_end_time, crouch_pre_time) / max(crouch_end_time, crouch_pre_time)

    if crouch2 = 0 {
        if crouch_timer >= crouch_pre_time {
            image_index = 0
            crouch_stand_timer = crouch_end_time

        } else {
            value2 = round(crouch_timer * value)
            image_index = value2
            crouch_stand_timer = value2
        }
        crouch2 = 1
    }
    sprite_index = crouch_end_sprite
    image_speed = image_number / (crouch_end_time)
}

if state_type = "stand"
and sprite_index = crouch_end_sprite {

    if crouch_stand_timer <= 0 {
        image_index = 0
        sprite_index = stand_sprite
        crouch_temp = 0
    }

    crouch_stand_timer -= 1
}
///////////////////////////////////////End of Crouch thing for crouching and getting up from crouch visually
							
if ( state_type = "jump" && sprite_index == jump_sprite )
{
  if ( timer = 0 )
    image_index = 0; //start out the jump from the jump sprite's very first frame instead of any later ones
  if ( vspeed < 0 && image_index >= 3 )
    image_index = 0; //stay in that first frame as long as you're going up (you can change the image index in the condition to a later one to loop back)
  if ( vspeed >= 0 && image_index < 4 )
    image_index = 4; //the moment you start falling, continue the animation
  if ( image_index >= 9 )
    image_index = 8; //remove the comment thing if you want to loop the jump animation back to a previous frame when falling*/
}

if attack_type = "none" {
	with (jab3slash) {instance_destroy()}
	with (ssmashice2) {instance_destroy()}
	with (ssmashice) {instance_destroy()}
	with (dsmashice) {instance_destroy()}
	with (dsmashiceground) {instance_destroy()}
	with (crest) {instance_destroy()}
	with (nairice) {instance_destroy()}
	with (nairglow) {instance_destroy()}
	with (fairslash) {instance_destroy()}
	with (dairslash) {instance_destroy()}
	with (slasheff) {instance_destroy()}
	with (icecar) {instance_destroy()}
	with (slashproj) {instance_destroy()}
}

if air = 0 {
	sidebee = 0
}

if antidust > 0
antidust -= 1

if antidust < 0
antidust = 0

/*
if ( state_type = "jump" && sprite_index == mid_jump_sprite ) {if ( timer = 0 ) {image_index = 0;}
							image_speed = .25; 
							if image_index >= 9 {image_index = 7}} //uncomment all of this if you want to loop your double jump animation*/