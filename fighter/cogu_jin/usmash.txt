if state_type = "stand" || state_type ="run"{
	hspeed = 0;
        state_type = "attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_sprite;
        image_index=0;
        timer = 0;
        time = 95;
        timer_speed=1;
        charge_frame=1;
}

if timer < time {
  state_type = "attack";		 
switch (timer) { 
	case 0: image_index = 0; break; 
	case 4: image_index = 1; break; 
	case 7: image_index = 2; break; 
	case 10: image_index = 3; break; 
	case 13: image_index = 4; break; 
	case 16: image_index = 5; break; 
	case 19: image_index = 6; break; 
	case 22: image_index = 7; break; 
	case 25: image_index = 8; break; 
	case 29: image_index = 9; break; 
	
	case 40: image_index = 0; sprite_index = usmash2_sprite; break; 
	case 44: image_index = 1; break; 
	case 47: image_index = 2; break; 
	case 50: image_index = 3; break; 
	case 53: image_index = 4; break; 
	case 56: image_index = 5; break; 
	case 59: image_index = 6; break; 
	case 62: image_index = 7; break; 
	case 65: image_index = 8; break; 
	case 69: image_index = 9; break; 
	case 72: image_index = 10; break; 
	case 75: image_index = 11; break; 
	case 78: image_index = 12; break; 
	case 81: image_index = 13; break; 
	case 84: image_index = 14; break; 
	case 87: image_index = 15; break; 
	case 90: image_index = 16; break; 

}

if timer = 13 {
	create_hitbox ( 7 , 90 , 6 , 0.1 , 80 , 9 , bbslash3 , obj_spark_slash4 , 1.72 , 1.88 , 4.50 , 34.65 , self.id , 3 , 4 );
	sound_play(swingsnd3);
	hitbox.hit_stun = 50
	duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.3
				hitbox.charge_kb = 0
				crest = create_spark(0,20,self.id);
    crest.sprite_index = crest_sprite;
    crest.image_speed = 0;
    crest.image_index = 1;
    crest.image_alpha = 1;
    crest.image_xscale = 0.1 * (1-facing*2);
    crest.image_yscale = 0.1;
    crest.depth = depth - 0.1;
    crest.loop = 9999
    crest.snap = self.id
	crest.image_blend = c_aqua;
	sound_play(icecreate_sound);
}

if timer >= 13 {
	crest.image_alpha -= 0.05
	crest.image_xscale += 0.05 * (1-facing*2)
	crest.image_yscale += 0.05
	
	if timer < 50 {
		if frac(timer/10) <= 0.3 {
    image_blend = c_aqua
    alarm[7] = 4
    }
	}
}

if timer = 34 {
	with (crest) {instance_destroy()}
}

if timer = 50 {
	create_hitbox ( 7 , angle_correct(45) , 5.7 , 6 , 80 , 15 , bbslash4 , obj_spark_slash4 , 2.11 , 1.06 , 24.30 , 19.80 , self.id , 3 , 4 );
    sound_play(swingsnd3);
	usmashslash = create_spark(10,22,self.id);
    usmashslash.sprite_index = usmashslash_sprite;
    usmashslash.image_speed = 0.2;
    usmashslash.image_index = 1;
    usmashslash.image_alpha = 1;
    usmashslash.image_xscale = 0.55 * (1-facing*2);
    usmashslash.image_yscale = 0.55;
    usmashslash.depth = depth - 0.1;
    usmashslash.snap = self.id
	duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.3
				sound_play(choose(usmash_voice,usmash_voice2,usmash_voice3))
}

if timer = 87 {
	sound_play(sheath_sound);
}

	  
	

}  
			
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
