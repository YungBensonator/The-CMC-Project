fast_fall = 0
fast_fall_temp = 0
if state_type = "run" || state_type = "stand" || state_type = "jump"{
    timer = 200;
	state_type = "air_attack"
    attack_type = "upb"
    image_speed = 0;
    sprite_index = downb3_sprite
    image_index=0;
    time = 250;
    timer_speed=1;
    if (moveright = 1 && !ai) || (ai && x < nearest_edge.x)
     facing = 0
    if (moveleft = 1 && !ai) || (ai && x > nearest_edge.x) 
     facing = 1
}

if timer < time {
	state_type = "air_attack"
	switch (timer) { 
   case 200: image_index = 0; break; 
	case 201: image_index = 1; break; 
	case 202: image_index = 2; break; 
	case 204: image_index = 3; break; 
	case 205: image_index = 4; break; 
	case 207: image_index = 5; break; 
	case 208: image_index = 6; break; 
	case 209: image_index = 7; break; 
	case 209: image_index = 8; break; 
	case 210: image_index = 9; break; 
	case 211: image_index = 10; break; 
	case 211: image_index = 11; break; 
	case 212: image_index = 12; break; 
	case 212: image_index = 13; break; 
	case 213: image_index = 14; break; 
	case 223: image_index = 15; break; 
	case 226: image_index = 16; break; 
	case 228: image_index = 17; break; 
	case 232: image_index = 18; break; 
	case 235: image_index = 19; break; 
	case 239: image_index = 20; break; 
	case 242: image_index = 21; break; 
	case 245: image_index = 22; break; 
	case 248: image_index = 36; break; 
	}
	
	force_edge_grab = 1
	
	
	
	if timer >= 200 and timer < 300 {
		speed = 0
		gravity_lock = 1
		air_move = 0
	}
	
	if timer = 201 {
		crest = create_spark(0,20,self.id);
    crest.sprite_index = crest_sprite;
    crest.image_speed = 0;
    crest.image_index = 1;
    crest.image_alpha = 1;
    crest.image_xscale = 0.1 * (1-facing*2);
    crest.image_yscale = 0.1;
    crest.depth = depth - 0.1;
    crest.loop = 9999
    crest.snap = self.id
	crest.image_blend = c_aqua;
	sound_play(icecreate_sound);
	}
	
	if timer >= 201 {
	crest.image_alpha -= 0.05
	crest.image_xscale += 0.05 * (1-facing*2)
	crest.image_yscale += 0.05
	
	if timer < 235 {
		if frac(timer/10) <= 0.3 {
    image_blend = c_aqua
    alarm[7] = 4
    }
	}
}

if timer = 212 {
	duster = instance_create(x-(3-facing*6)*size,y,obj_dust_effect)
                duster.facing = facing
                duster.image_xscale = 0.3
                duster.image_yscale = 0.3
				duster.image_blend = c_aqua
}

if timer = 213 {
	x = x + 100 * (1-facing*2)
	y = y - 100
	slashproj = create_projectile(5, angle_correct(80), 7.9, 6, 11, 24, bbslash3, obj_spark_slash4, 0.27, 0.2, 10, 25, self.id, 1000, no_script);
	    slashproj.sprite_index = slash_eff2;
		slashproj.image_speed = 0
		slashproj.depth = depth - 5
		slashproj.image_blend = c_aqua
		slashproj.image_angle = 45 * (1-facing*2)
		sound_play(choose(upb_voice,upb_voice2))
		
}

if timer >= 213 {
	slashproj.image_alpha -= 0.075 
}

if slashproj.image_alpha <= 0 {
	with (slashproj) {instance_destroy()}
}
	  
	
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
        attack_type = "none";
        if air > 0
        state_type = "fall";
        else
        state_type = "stand";
        timer = 0;
        time =-1;
    }
