if state_type = "run" || state_type = "stand" {
        hspeed = 0;
        state_type = "attack";
        attack_type = "dsmash";
        image_speed = 0;
        sprite_index = utilt_sprite;
        image_index=0;
        timer = 0;
        time = 50;
        timer_speed=1;
		canceltemp = 0;
		charge_frame = 9
}

switch ( timer )
  {
  case 3: image_index = 1; break;
  case 6: image_index = 2; break;
  case 9: image_index = 3; break;
  case 12: image_index = 4; break;
  case 15: image_index = 5; break;
  case 18: image_index = 6; break;
  case 21: image_index = 7; break;
  case 24: image_index = 8; break;
  case 27: image_index = 9; break;
  case 30: image_index = 10; break;
  case 33: image_index = 11; break;
  case 50: image_index = 11; break;
  }

	if timer = 0 {
		sound_play(choose(attack_voice3,attack_voice4))
		}
    if timer = 18 {
		sound_play(critslash)
        create_hitbox(15,80+facing*20,6,7,20,12,flandreslash3,obj_spark_slash3,0.9,1.3,33,21,self.id,3,2);
		hitbox.hit_stun = 5;
        create_hitbox2(15,100-facing*30,6,7,20,12,flandreslash3,obj_spark_slash3,0.9,1.3,-21,21,self.id,3,2);
		hitbox2.hit_stun = 5;
		screen_shake(5,5);
    }
	if ( timer = 18 && !instance_exists(dsmash)) {
		dsmash = instance_create(x+15*(1-facing*2)*size,y-45*size,obj_spark);
		dsmash.sprite_index = dsmasheff_sprite;
		dsmash.image_speed = 1
		dsmash.image_alpha = 1
		dsmash.image_xscale = size*0.4*(1-facing*2);
		dsmash.image_yscale = size*0.4;
		dsmash.snap = self.id
		dsmash.depth = depth - 0.1
	}
	if ( timer = 18 && !instance_exists(dsmash2)) {
		dsmash2 = instance_create(x-40*(1-facing*2)*size,y-45*size,obj_spark);
		dsmash2.sprite_index = dsmasheff_sprite;
		dsmash2.image_speed = 1
		dsmash2.image_alpha = 1
		dsmash2.image_xscale = size*0.4*(1-facing*2);
		dsmash2.image_yscale = size*0.4;
		dsmash2.snap = self.id
		dsmash2.depth = depth - 0.1
	}

  	if (timer >= 18){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0 && obj_score_control.stocks[target.number-1] == 1){
				if ((target.weight <= .22 && target.percent > 140) || (target.weight > .22 && target.weight < .3 && target.percent > 155) || (target.weight > .3 && target.percent > 165)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	   

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
    attack_type = "none";
    state_type = "stand";
    sprite_index = stand_sprite;
    shakex = 0;
    shakey = 0;
    timer = 0;
    time =-1;
    interrupt = 0;
    }
        
