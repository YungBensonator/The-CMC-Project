if time = -1 {
hspeed = 0;
            state_type = "air_attack";
attack_type = "bthrow";
image_speed = 0;
sprite_index = ssmash_sprite;
image_index=0;
timer = 0;
time = 40;
timer_speed=1;
target1 = target
target1.timer_speed = 0;
target1.alarm[0] = 50
target1.state_type = "air_flinch";
}
switch ( timer )
  {
  case 3: image_index = 1; break;
  case 6: image_index = 2; break;
  case 9: image_index = 3; break;
  case 12: image_index = 4; break;
  case 16: image_index = 5; break;
  case 20: image_index = 6; break;
  case 24: image_index = 7; break;
  case 28: image_index = 8; break;
  case 32: image_index = 9; break;
  case 36: image_index = 10; break;
  case 40: image_index = 11; break;
  case 44: image_index = 12; break;
  case 48: image_index = 13; break;
  case 60: image_index = 13; break;
  }

if ( timer <= 16 )
{
target.x = x + 14 * size * (1-facing*2);
target.y = y;
}

	if ( timer = 9 && !instance_exists(dthrow)) {
		dthrow = instance_create(x+40*(1-facing*2)*size,y-30*size,obj_spark);
		dthrow.sprite_index = bproj1_sprite;
		dthrow.image_speed = 0
		dthrow.image_alpha = 1
		dthrow.image_xscale = size*0.35*(1-facing*2);
		dthrow.image_yscale = size*0.35;
		dthrow.snap = self.id
		dthrow.depth = 1
	}
	if timer = 16 {
		sound_play(projfire);
        create_projectile(4,155-facing*130,4.3,4,11,3,fire3,obj_spark_fire1,0.2,0.2,40,24,self.id,30,char_custom1);
		proj.speed = 5 * (1-facing*2) * size;
		proj.direction = 180 * (1-facing*2);
		proj.di = 0.45;
	}
	if timer = 36 {
		dthrow.image_speed = 1;
	}

if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
