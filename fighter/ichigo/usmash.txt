if bankai = 1{
if state_type = "stand" || state_type ="run"{
	hspeed = 0;
        state_type = "air_attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_spriteB;
        image_index=1;
        timer = 0;
        time = 40;
        timer_speed=1;
        charge_frame=1;
}
if timer < time {
state_type = "air_attack";
    switch ( timer )
      {
	case 14: image_index = 0; break;
	case 18: image_index = 1; break;
	case 22: image_index = 2; break;
	case 26: image_index = 3; break;
	case 30: image_index = 4; break;
	case 34: image_index = 5; break;
	case 40: image_index = 0; break;
      }
	
	if timer = 12{
	image_alpha = 0
	sound_play(teleport_sound);
	vspeed = -8
	tp_spark = create_spark(0,20,self.id);
	tp_spark.sprite_index = tp_sprite;
    tp_spark.image_speed = 1.0;
	tp_spark.image_alpha = 0.7;
    tp_spark.image_xscale = image_xscale*0.3;
    tp_spark.image_yscale = image_yscale*0.3;
    tp_spark.depth = depth - 0.1;
	}
	
	if timer < 18 and timer > 13
	image_alpha += 0.2
	if timer = 18{
	image_alpha = 1
	vspeed = 8
	}
	

    if ( timer = 18 ) 
      {
    sound_play(usmash_voice);
	sound_play(bleach_sword2);
	create_hitbox2(14,315-facing*90,4.1,7.5,12,4,slash3,obj_spark_hit3,2.1,1.1,0,-10,self.id,4,2);
	
	effectjab = create_spark(17,22,self.id);
	effectjab.sprite_index = slash_sprite3;
    effectjab.image_speed = 0.3;
	effectjab.image_alpha = 0.7;
    effectjab.image_xscale = image_xscale*0.9;
    effectjab.image_yscale = image_yscale*(-0.8);
    effectjab.depth = depth - 0.1;
	effectjab.snap = self.id
	effectjab.image_blend = c_maroon
	
      }

}

}
else{
if state_type = "stand" || state_type ="run"{
	hspeed = 0;
        state_type = "attack";
        attack_type = "usmash";
        image_speed = 0;
        sprite_index = usmash_sprite;
        image_index=0;
        timer = 0;
        time = 60;	
        timer_speed=1;
        charge_frame=1;
}
if timer < time {
state_type = "attack";
    switch ( timer )
      {
	case 23: image_index = 1; break;
	case 25: image_index = 2; break;
	case 28: image_index = 3; break;
	case 31: image_index = 4; break;
	case 34: image_index = 5; break;
	case 37: image_index = 6; break;
	
    case 45: image_index = 7; break;
	case 53: image_index = 8; break;
      }
	  
	//Sword trail shit starts here
    switch (timer) {
		case 21: sword_trail = create_sword_trail(self.id, 6, 30, spread_texture); sword_trail.index = 1; sword_trail.depth = 1; break;
		case 22: sword_trail.end_decay = .1; break;
        case 23: sword_trail.index += 1; sword_trail.end_decay = 0.2; break;
		case 24: sword_trail.end_decay = .3; break;
    	case 25: sword_trail.index += 1; sword_trail.end_decay = 0.4; break;
		case 26: sword_trail.end_decay = .5; break;
		case 27: sword_trail.end_decay = .6; break;
    	case 28: sword_trail.index += 1; sword_trail.end_decay = .7; break;
		case 29: sword_trail.end_decay = .8; break;
		case 30: sword_trail.end_decay = .9; break;
    	case 31: sword_trail.index += 1; sword_trail.end_decay = 1; break;
		case 32: sword_trail.end_decay = 1.33; break;
		case 33: sword_trail.end_decay = 1.66; break;
    	case 34: sword_trail.end_decay = 2; break;
		case 35: sword_trail.end_decay = 2.5; break;
		case 36: sword_trail.end_decay = 3; break;
    	case 37: sword_trail.end_decay = 3.5; break;
		case 38: sword_trail.end_decay = 4; break;
		case 39: sword_trail.end_decay = 5; break;
        case 40:
            with(sword_trail) {
                instance_destroy();
            }
            break;
    } 
    //Sword trail shit ends here

    if ( timer = 25 ) 
      {
    sound_play(usmash_voice);
	sound_play(bleach_sword2);
	create_hitbox(16,angle_correct(80),7.2,8,20,12,slash3,obj_spark_hit3,1,1.6,31,30,self.id,12,2);
      }

	if timer = 28 {
    hitbox.damage = 16;
	hitbox.hitbox_x = 2*(1-facing*2);
	hitbox.hitbox_y = 60;
	hitbox.image_xscale = 1.4;
	hitbox.image_yscale = 1.25;	
	}

    if timer = 31 {
    hitbox.damage = 12;
	hitbox.hitbox_x = -31*(1-facing*2);
	hitbox.hitbox_y = 22;
	hitbox.image_xscale = 1;
	hitbox.image_yscale = 1.5;	
	}
}
}			
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    attack_type = "none";
    state_type = "stand";
    timer = 0;
    time =-1;
    }
        
