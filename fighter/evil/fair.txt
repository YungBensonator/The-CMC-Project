if state_type = "jump" {
        vspeed -= 0.1;
        state_type = "air_attack";
        attack_type = "fair";
        image_speed = 0.4;
        sprite_index = fair_sprite;
        image_index=0;
        timer = 0;
        time = 40;
	canceltemp = 0;
	attacktemp = 1
	attacking = 1
}
        if timer < time {
	if attack_success || attack_shielded
	canceltemp = 1
	if !attacking && sftemp != -1 && sftemp != 5 && sftemp != 10 && sftemp != 43 && sftemp != 57 && sftemp != 5 && sftemp != 13 && sftemp != 18 && sftemp != 22 && sftemp != 27 && sftemp != 47 && sftemp != 52
	attacktemp = 0
            state_type = "air_attack";
            if timer = 10 {
                sound_play(choose(attack_hard,attack_voice3,attack_voice2))
                sound_play(attack_sound2);
                create_hitbox(14,20+facing*140,4.65,7.75,15,6,sf_punch3,obj_spark_special1,0.55,0.45,14,13,self.id,6,1);
		hitbox.hit_stun = 4
            }
            if timer = 12 {
                hitbox.damage = 8*size
                hitbox.kbg = 5*size
                hitbox.bkb = 5.5*size
                hitbox.sfx = sf_punch2
            }
            if timer = 23
            image_speed = 0.2;
		if timer = 28
		image_speed = 0
            if air = 0 {
                state_type="land";
                attack_type="none";
                sprite_index = land_sprite;
                timer=0;
				dontrepeat = 0
                time=18; 
            }
	if timer <= 29 && canceltemp {
	if sftemp != -1 && sftemp != 5 && sftemp != 10 && sftemp != 43 && sftemp != 57 && sftemp != 5 && sftemp != 13 && sftemp != 18 && sftemp != 22 && sftemp != 27 && sftemp != 47 && sftemp != 52 {
	if special > 0 && movedown != 1 && moveup != 1 && moveleft != 1 && moveright != 1
	  {
	    state_type = "jump";
	    attack_type = "none";
		dontrepeat = 0
	    timer = 0;
	    time = -1;
		
		
	
		if ( smash_power >= global.gs_fs_charge )
		interrupt = 1;
		else
	    char_b();
	  }
	if special > 0 && moveup = 1
	  {
	    state_type = "jump";
				dontrepeat = 0

	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    char_upb();
	  }
	if special > 0 && movedown = 1
	  {
	    state_type = "jump";
		

	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    char_downb();
	  }
	if special > 0 && ( moveleft = 1 || moveright = 1 )
	  {
	    state_type = "jump";
		dontrepeat = 0
	    attack_type = "none";
	    timer = 0;
	    time = -1;
	    char_sideb();
	  }
}
}
else
sftemp_timer = 0
	if timer = time-1
	attacking = 0
        }

		if (timer >= 10){
if (attack_success || target.object_index == obj_enemy) && (dontrepeat = 0) && target.offstage && obj_score_control.stocks[target.number-1] == 1{
				if ((target.weight <= .22 && target.percent > 105) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
				                killspark = instance_create(target.x-200,target.y-170,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.65;
				killspark.image_yscale = size * 0.85;
	            killspark.image_xscale = size * 0.45;
				killspark.image_yscale = size * 0.65;
                killspark.image_xscale = size * 0.65;

				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 1;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(target.x,target.y,obj_freeze)
				freezer2  = instance_create(x,y,obj_freeze)
				effect_create_above(ef_ellipse,target.x,target.y+10,1,c_black)
				freezer.alarm[0] = 78
				freezer2.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = target.x - 50;
				spark.camera_r = target.x + 50;
				spark.camera_u = target.y - 80;
				spark.camera_d = target.y;
				spark.camera_boundary_zoom = 20;
				spark.alarm[0] = 60;
				spark2 = instance_create(target.x+8*(1-facing*2),target.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }	  
  
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
    dontrepeat = 0;
	canceltemp = 0
    attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
    attacking = 0
    }
        
