if ( time == -1 )
  {
  hspeed = 0;
  state_type = "attack";
  attack_type = "fthrow";
  image_speed = 0;
  image_index = 0;
  sprite_index = fthrow_sprite;
  timer = 0;
  time = 48;
  timer_speed = 1;
  target.timer_speed = 0;
  target.alarm[0] = 50;
  }
if timer < time {
	switch (timer)
		{
		case 5: image_index = 1; break;
		case 10: image_index = 2; break;
		case 15: image_index = 3; break;
		case 20: image_index = 4; break;
		case 25: image_index = 5; break;
		case 26: image_yscale *= 0.95; break;
		case 27: image_yscale *= 0.90; break;
		case 29: image_index = 6; break;
		case 30: image_index = 7; break;
		case 31: image_index = 8; break;
		case 32: image_index = 9; image_xscale *= 1.1; image_yscale *= 1.1; break;
		case 46: image_index = 10; break;
		}
	if ( timer >= 0 && timer <= 4 )
		{
		target.x = x + 24*size*(1-facing*2)
		target.y = y - 10 * size;
		target.depth = depth - 1;
		}
	if ( timer >= 4 && timer <= 9 )
		{
		target.x = x + 22*size*(1-facing*2)
		target.y = y - 16 * size;
		}
	if ( timer >= 10 && timer <= 14 )
		{
		target.x = x + 20*size*(1-facing*2)
		target.y = y - 25 * size;
		}
	if ( timer >= 15 && timer <= 19 )
		{
		target.x = x + 18*size*(1-facing*2)
		target.y = y - 32 * size;
		}
	if ( timer >= 20 && timer <= 24 )
		{
		target.x = x + 16*size*(1-facing*2)
		target.y = y - 32 * size;
		}
	if ( timer >= 25 && timer <= 28 )
		{
		target.x = x - 5*size*(1-facing*2)
		target.y = y - 27 * size;
		}
	if ( timer = 29 )
		{
		target.x = x + 18*size*(1-facing*2)
		target.y = y - 15 * size;
		}
	if ( timer >= 30 && timer <= 32 )
		{
		target.x = x + 42*size*(1-facing*2)
		target.y = y - 10 * size;
		}
	if ( timer = 28 ) {
		play_attack_voice();
		}
	if ( timer == 32 ) {
		create_throw_box ( 13 , 20+facing*136 , 5.2 , 6 , 14 , 1 , sf_kick3 , obj_spark_special1 , 1.3 , 0.7 , 25 , 25 , self.id , 2 );
		}
	}
if ( timer >= time - 1 )
  {
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time = -1;
  }