if ( state_type == "run" || state_type == "stand" || state_type == "jump" || state_type == "crouch" )
  {
  attacking = 0;
  special = 0;
  attack_type = "sideb";
  time = 49;
  timer = 0;
  hspeed *= 0.1;
  state_type = "air_attack";
  sprite_index = sideb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  klawd = 0;
  }
if timer < time {
	state_type = "air_attack";
	  switch ( timer )
	{
	case 5: image_index = 1; break;
	case 9: image_index = 2; break;
	case 13: image_index = 3; break;
	case 17: image_index = 4; break;
	case 20: image_index = 5; break;
	case 23: image_index = 6; break;
	case 26: image_index = 7; break;
	case 29: image_index = 8; break;
	}

	if timer > 1 {
		air_move = 0;
		}
	if timer > 14 && timer < 22 {
		hspeed = 3-facing*6;
		}
	if timer > 23 && timer < 27 {
		hspeed *= 0.6;
		}
	if timer > 28 && timer < 45 {
		hspeed = 0;
		}
	if timer = 14 {
		sound_play(sideb_sound);
		target =-99
	        create_homing_bubble(1.3,1.3,25,15,self.id,5);
		proj.visible = 0;
		super_armor = 1;
		armor_frames = 5;
		}
	if timer >= 16 && timer < 19 {
		if target > 0 && distance_to_object(target)<size*20 && (target.state_type != "air_flinch" && target.state_type != "down" && target.intangible = 0 && target.attack_type != "final_smash" ) {
                        target1 = target;
			target1.sprite_angle = 0;
			target1.state_type = "air_flinch"
			target1.facing = !facing;
        		target1.attack_type = "none"
        		target1.timer = 0
        		target1.time = 90
        		target1.timer_speed = 0
        		target1.alarm[0] = 2
        		target1.super_armor = 0
        		time = 188
        		timer = 140
				target1.x = x + 32*size*(1-facing*2)
        		target1.y = y - 3 * size;
			temp = 90+(target.percent*0.5) // used for escaping grab
			target1.ignore_physics = 1;
			sprite_index = sideb_pummelsprite;
			image_speed = 0;
			attacking = 0;
			special = 0;
			klawd = 1;
			hspeed = 0;
			}
		else {
			if timer = 18 {
			create_hitbox(14,75+facing*30,5.5,6.7,24,12,slash3,obj_spark_slash2,1.5,1.5,33,20,self.id,7,1);
			}
			}
		}
		temp -= 1;
		if ( timer > 19 && timer < 190 && klawd = 1 && temp > 0 )
		{
		target1.x = x + 32*size*(1-facing*2)
        target1.y = y - 10 * size;
		target1.ignore_physics = 1;
		target1.alarm[0] = 2;
		target1.state_type = "air_flinch"
		target1.sprite_index = target1.flinch_sprite;
		}
		if ( temp = 0 && klawd = 1 )
		{
		target1.alarm[0] = 0;
		}
	if timer = 19 {
		super_armor = 0;
		}
	if timer = 20 {
	hitbox.damage = 12;
	hitbox.bkb = 6.5;
	hitbox.kbg = 2.5;
	hitbox.dir = 105-facing*30;
	hitbox.sfx = slash2
	}
	if timer = 36 {
		image_speed = 0.2;
		}
	if timer > 140 && timer < 180 && ( attacking = 1 || special = 1 ) {
		timer = 190;
		time = 240;
		}
	if (timer > 190 && timer < 240)
	{
	target1.ignore_physics = 1;
	target1.alarm[0] = 2;
	target1.state_type = "air_flinch"
	target1.sprite_index = target1.flinch_sprite;
	}
		switch ( timer )
		{
		case 192: image_index = 1; break;
		case 194: image_index = 2; break;
		case 209: image_index = 3; break;
		case 214: image_index = 4; break;
		case 217: image_index = 0; break;
		}
	if ( timer >= 192 && timer <= 193 )
	{
	target1.y = y - 17 * size;
	}
	if ( timer >= 194 && timer <= 208 )
	{
	target1.y = y - 22 * size;
	}
	if ( timer >= 209 && timer <= 213 )
	{
	target1.y = y - 7 * size;
	}
	if ( timer >= 214 && timer <= 216 )
	{
	target1.y = y - 12 * size;
	}
	if ( timer >= 217 && timer <= 240 )
	{
	target1.y = y - 17 * size;
	}
	if timer = 209 {
		target1.percent += 4;
		instance_create(target1.x,target1.y-14 * size,obj_spark_slash1)
		sound_play(sideb_pummelsound);
		attacking = 0;
		special = 0;
		}
	if ( timer = 225 ) && ( attacking = 1 || special = 1 ) {
		timer = 190
		}
	if ( timer = 180 || timer = 234 ) && ( target1 > 0 ) && ( klawd = 1 )  {
	if ( temp > 20 ) {
		timer -= 10;
		if timer = 234 {
			sprite_index = sideb_pummelsprite;
			image_speed = 0;
			image_index = 0;
			}
		}
	}
	if ( ( timer > 140 && timer < 180 ) || ( timer > 211 && timer < 240 ) ) && ( (facing = 0 && moveright = 1) || (facing = 1 && moveleft = 1) ) {
		timer = 250;
		time = 285;
		}
	if ( ( timer > 140 && timer < 180 ) || ( timer > 211 && timer < 240 ) ) && ( (facing = 0 && moveleft = 1) || (facing = 1 && moveright = 1) ) {
		timer = 300;
		time = 365;
		}
	if (timer > 250 && timer < 268)
	{
	target1.ignore_physics = 1;
	target1.alarm[0] = 2;
	target1.state_type = "air_flinch"
	target1.sprite_index = target1.flinch_sprite;
	}
	if timer = 251 {
		sprite_index = sideb_fsprite;
		image_index = 1;
		image_speed = 0.3;
		target1.depth = depth - 1;
		}
	if timer >= 250 && timer <= 265 {
		hspeed = 2-facing*4;
		target1.shakey = 0;
		target1.x = x + 5 * size * (1-facing*2);
		target1.y = y - 3 * size;
		target1.depth = depth - 1;
		}
	if timer = 266 {
		hspeed = 0;
		sprite_index = jab_sprite;
		image_index = 7;
		image_speed = 0;
		target1.depth = depth + 1;
		target1.x = x + 15 * size * (1-facing*2);
		target1.y = y - 3 * size;
		}
	if timer = 268 {
		klawd = 0;
		image_index = 8;
		target1.x = x + 45 * size * (1-facing*2)
		target1.y = y - 3 * size;
                target1.xprev = x;
                target1.yprev = y;
                target1.ignore_physics = 0;
		create_hitbox(15,65+facing*50,5.4,4.5,12,7,slash3,obj_spark_slash1,1.2,1.5,40,20,self.id,2,1);
		hitbox.hit_stun = 15;
		}
	if timer = 270 {
		image_index = 9;
		}
	if timer = 282 {
		image_index = 11;
		}
	if (timer > 300 && timer < 340)
	{
	target1.ignore_physics = 1;
	target1.alarm[0] = 2;
	target1.state_type = "air_flinch"
	target1.sprite_index = target1.flinch_sprite;
	}
	if timer = 301 {
		sprite_index = sideb_bsprite;
		image_speed = 0;
		image_index = 0;
		target1.shakey = 0;
		target1.x = x + 33 * size * (1-facing*2);
		target1.y = y - 35 * size;
		}
	if timer > 301 {
		hspeed = 0;
		}
		switch ( timer )
		{
		case 303: image_index = 1; target1.x = x + 10 * size * (1-facing*2); target1.depth = depth - 1; break;
		case 305: image_index = 2; target1.x = x + 5 * size * (1-facing*2); break;
		case 307: image_index = 3; target1.x = x - 10 * size * (1-facing*2); target1.depth = depth + 1; break;
		case 309: image_index = 4; target1.x = x; target1.depth = depth - 1; break;
		case 311: image_index = 5; target1.x = x + 20 * size * (1-facing*2); break;
		case 315: image_index = 6; target1.x = x + 30 * size * (1-facing*2); break;
		case 319: image_index = 7; target1.x = x + 33 * size * (1-facing*2); break;
		case 338: image_index = 8; target1.x = x - 25 * size * (1-facing*2); break;
		case 340: image_index = 9; break;
		case 360: image_index = 10; break;
		case 362: image_index = 11; break;
		}
	if (timer >= 303 && timer <= 337) {
	target1.y = y - 40 * size;
	}
	if (timer >= 338 && timer <= 340) {
	target1.y = y - 20 *size;
	}
	if timer = 340 {
                target1.xprev = x;
                target1.yprev = y;
                target1.ignore_physics = 0;
		create_hitbox(15,155-facing*130,8,5.1,12,7,punch3,obj_spark_hit2,1.1, 1.1,-25,35,self.id,4,1);
		klawd = 0;
		}
	if timer > 401 {
		klawd = 0;
		sprite_index = flinch_sprite;
		}
}
if ( timer >= time - 5 ) && ( target1 > 0 ) && ( klawd = 1 ) {
	target1.hspeed += 4-facing*8;
	target1.vspeed -= 6;
	target1.state_type = "air_flinch";
	target1.timer = 0;
	target1.time = 20;
	target1.timer_speed = 1;
    state_type = "flinch";
    time = 20;
    timer = 0;
	}
if ( timer >= time - 1 )
	{
    attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 3;
	}
	image_blend = c_white;
    timer = 0;
    time =-1;
    }