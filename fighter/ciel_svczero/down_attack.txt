if ( state_type = "down" )
  {
  state_type = "attack";
  attack_type = "down_attack";
  image_speed = 0;
  sprite_index = down_attack_sprite;
  image_index = 0;
  timer = 1;
  time = 35;
  timer_speed = 1;
  }
switch ( timer )

  {
  case 1: intangible = 1;
	case 3: image_index = 1; break;
	case 7: image_index = 2; break;
	case 22: image_index = 3; break;
	case 26: image_index = 4; break;
	case 30: image_index = 5; break;
  }
	  
	if timer = 3
	{
	sound_play(dtilt_slide);
	}
	  
	if timer = 7
	{
	hspeed = 6*(1-facing*2)
	create_hitbox(4,angle_correct(70),5,6.5,5,6,zero_dtilthitsound,obj_spark_hit3,1.1,.4,abs(place_x(92)),-place_y(64),self.id,15,3);
	hitbox.image_angle = angle_correct(350)
	}
	
	if timer >= 7 and timer < 22
	{
	after_image(3,make_color_rgb(0,255,255),0.75);
	}
	
	if timer = 22
	{
	hspeed = 0;
	}
	  
	/*
	if timer = 4
	{
	create_hitbox(1,angle_correct(angle_here),3,4,5,6,punch3,obj_spark_hit1,1,1,abs(place_x(20)),-place_y(20),self.id,10,3);
	hitbox.image_angle = angle_correct(angle_here)
	}
	*/
	
	/*
	if timer = 4
	{
	projectilething =
	create_projectile(5, angle_correct(angle_here), 5, 6.25, 15, 7.5, kick2, obj_spark_hit3, .25, .25, abs(place_x(130)), -place_y(104), self.id, 30, char_custom1);
	projectilething.sprite_index = insert_sprite_here
	projectilething.image_speed = .5;
	}
	*/
	
	/*
	if timer = 4
	{
	vfxthing = create_spark ( xpos , ypos , sprite_index , image_speed , xscale , yscale );
	vfxthing.alarm[0] = lifespan of the spark here
	}
	*/
  
if ( timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" )
  { intangible = 0;
  attack_type = "none";
  state_type = "stand";
  timer = 0;
  time =-1;
  }
        
