fast_fall = 0;
fast_fall_temp = 0;

if ( state_type == "run" || state_type == "stand" || state_type == "jump" && air < max_jumps )
  {
  attacking = 0;
  special = 0;
  attack_type = "upb";
  time = 38;
  timer = 0;
  state_type = "air_attack";
  hspeed = 0;
  if air > 0
  {
  sprite_index = upb_air_sprite;
  }
  else
  {
  sprite_index = upb_sprite;
  }
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  if moveright
  {
  facing = 0;
  }
  else if moveleft
  {
  facing = 1;
  }
  has_hit = 0;
  }
  
if timer = 10
{
force_edge_grab = 1;
}  
  
switch (timer) 
{
case 2: image_index = 1; break;
case 8: image_index = 2; break;
case 10: image_index = 3; sound_play(attack_sound7); sound_play(attack_voice7); break;
case 12: image_index = 4; sound_play(mid_jump_sound); sound_play(upb_sound); break;
case 14: image_index = 5; break;
case 16: image_index = 6; break;
case 18: image_index = 7; break;
case 20: image_index = 8; break;
case 22: image_index = 9; break;
case 24: image_index = 4; break;
case 26: image_index = 5; break;
case 28: image_index = 6; break;
case 30: image_index = 7; break;
case 32: image_index = 8; break;
case 34: image_index = 10; state_type = "fall"; break;
}

if timer = 8
{
create_hitbox ( 1 , 90 , 5 , 0 , 8 , 2 , kick2 , obj_spark_hit2 , 0.87 , 0.80 , 11.20 , 16.80 , self.id , 3 , 3 );
hitbox.image_angle = ( 1 - facing * 2 ) * 0;
hitbox.execute_on_hit = "attacker.has_hit = 1"
}

if timer = 10
{
vspeed = -7 * size;
hspeed = 2 * (1-facing*2) * size;
duster = instance_create(x-(8 - facing*16)*size,y,obj_dust_effect);
duster.facing = facing;

hitbox.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 11.90
hitbox.hitbox_y = size * 25.20
hitbox.image_xscale = size * 0.59
hitbox.image_yscale = size * 0.96
hitbox.image_angle = ( 1 - facing * 2 ) * 0
}

if timer = 12
{
			horn_spin = create_blur(x,y,self.id);
			horn_spin.sprite_index = spr_spin_blur;
			horn_spin.image_xscale = 0.19 * size * (1-facing*2)*0.7;
			horn_spin.image_yscale = 0.17 * size *0.7;
			horn_spin.snap = self.id;
			horn_spin.alarm[0] = 70;
			horn_spin.image_index = 0;
			horn_spin.anim_speed = 0.5;
			horn_spin.loop = 2;
			horn_spin.x = x + place_x(33);
            horn_spin.y = y + place_y(14);
			
			head_spin = create_blur(x,y,self.id);
			head_spin.sprite_index = spr_spin_blur;
			head_spin.image_xscale = 0.33 * size * (1-facing*2)*0.7;
			head_spin.image_yscale = 0.31 * size *0.7;
			head_spin.snap = self.id;
			head_spin.alarm[0] = 70;
			head_spin.image_index = 0;
			head_spin.anim_speed = 0.5;
			head_spin.loop = 2;
			head_spin.x = x + place_x(33);
            head_spin.y = y + place_y(28);
            
			body_spin = create_blur(x,y,self.id);
			body_spin.sprite_index = spr_spin_blur;
			body_spin.image_xscale = 0.37 * size * (1-facing*2) *0.7;
			body_spin.image_yscale = 0.35 * size *0.7;
			body_spin.snap = self.id;
			body_spin.alarm[0] = 70;
			body_spin.image_index = 0;
			body_spin.anim_speed = 0.5;
			body_spin.loop = 2;
			body_spin.x = x + place_x(33);
            body_spin.y = y + place_y(41);
}

if timer >= 12 and timer < 32 and !instance_exists(hitbox3)
{
    create_hitbox3 ( 2 , 90 , 6.2 , 0 , 8 , 2 , kick2 , obj_spark_hit2 , 0.74 , 1.18 , 2.10 , 25.90 , self.id , 4 , 3 );
    hitbox3.image_angle = ( 1 - facing * 2 ) * 0;
	hitbox3.execute_on_hit = "attacker.has_hit = 1"
}

if timer = 32
{
    create_hitbox3 ( 3 , 85 + facing * 10 , 5.66 , 7 , 12 , 7 , kick3 , obj_spark_hit3 , 0.74 , 1.18 , 2.10 , 25.90 , self.id , 2 , 3 );
    hitbox3.image_angle = ( 1 - facing * 2 ) * 0;
}

if ( has_hit = 1 and timer < 32 )
{
target.direction = point_direction(target.x,target.y, x * size , y - actual_height + ( 5 * size ) )
}


  if (timer >= 32){
if (attack_success || target.object_index == obj_enemy) && (obj_score_control.stocks[target.number-1] == 1 && dontrepeat = 0){
				if ((target.weight <= .22 && target.percent > 100) || (target.weight > .22 && target.weight < .3 && target.percent > 115) || (target.weight > .3 && target.percent > 125)){
				killspark = instance_create(enemy.x-200,enemy.y-250,obj_spark);
				killspark.sprite_index = killspark_sprite;
				killspark.image_xscale = size * 0.75;
				killspark.image_yscale = size * 0.95;
				killspark.image_yscale = size * 0.95;
				killspark.image_index = 0;
				killspark.image_speed = 0.045;
				killspark.alarm[0] = 80;
				killspark.depth = depth + 2 ;
				sound_play(killscreen_voice);
				screen_shake(30,30);
				freezer  = instance_create(enemy.x,enemy.y,obj_freeze)
				effect_create_above(ef_ellipse,enemy.x,enemy.y+10,1,c_black)
				freezer.alarm[0] = 80
				spark = instance_create ( 0 , 0 , obj_camerazoom );
				spark.camera_l = enemy.x - 30;
				spark.camera_r = enemy.x + 30;
				spark.camera_u = enemy.y - 50;
				spark.camera_d = enemy.y;
				spark.camera_boundary_zoom = 120;
				spark.alarm[0] = 50;
				spark2 = instance_create(enemy.x+8*(1-facing*2),enemy.y-26,obj_spark_hit3)
				spark2.alarm[0] = 50
				dontrepeat = 1;
				}
				}
        
  }

if ( timer >= time - 1 )
  {
  dontrepeat = 0;
  attack_type = "none";
  if ( air > 0 )
    state_type = "fall";
  timer = 0;
  time = -1;
  }