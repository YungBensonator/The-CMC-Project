if ( state_type == "run" || state_type == "stand" || state_type == "crouch" )
  {
  attacking = 0;
  if ai = 0
  {
  special = 1;
  }
  attack_type = "downb";
  time = 61;
  timer = 0;
  state_type = "attack";
  hspeed = 0;
  sprite_index = downb_sprite;
  image_index = 0;
  image_speed = 0;
  timer_speed = 1;
  chargetimer = 0;
  }

switch ( timer )
  {
  case 2: image_index = 1; break;
  case 4: image_index = 2; break;
  case 10: image_index = 3; break;
  case 11: image_index = 4; break;
  case 12: image_index = 5; break;
  case 13: image_index = 6; sound_play(shock_sound); break;
  case 14: image_index = 7; break;
  case 15: image_index = 8; break;
  case 55: image_index = 9; break;
  case 58: image_index = 10; break;
  }

if timer = 9 and special = 1 and chargetimer < 40
{
timer = 8;
chargetimer += 1;
}

if timer = 13
{
 if  chargetimer < 40
  {
    sound_play(downb_voice);
    downbfx = create_blur(x,y,self.id);
    downbfx.sprite_index = downb_fx;
    downbfx.image_index = 0;
    downbfx.image_speed = 0;
	downbfx.snap = self.id;
    downbfx.image_xscale = 0.4 * (1-facing*2) * size;
    downbfx.image_yscale = 0.4 * size;
    downbfx.depth = depth - 1;
    downbfx.x = x + place_x(87);
	downbfx.y = y + place_y(128);
    screen_shake(0.8,12)
	percent+=15;
	
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.24*size;
	duster.image_yscale = 0.24*size;
	
	duster2 = instance_create(x,y,obj_dust_effect);
    duster2.facing = 1-facing;
	duster2.image_xscale = 0.24*size;
	duster2.image_yscale = 0.24*size;
  }
  
  if  chargetimer = 40
  {
    sound_play(downb_voice2);
    downbfx2 = create_blur(x,y,self.id);
    downbfx2.sprite_index = downb_fx2;
    downbfx2.image_index = 0;
    downbfx2.image_speed = 0;
	downbfx2.snap = self.id;
    downbfx2.image_xscale = 0.4 * (1-facing*2) * size;
    downbfx2.image_yscale = 0.4 * size;
    downbfx2.depth = depth - 1;
    downbfx2.x = x + place_x(87);
	downbfx2.y = y + place_y(128);
    screen_shake(1,14)
	percent+=20;
	
    create_hitbox ( 15 , angle_correct(45) , 6.8 , 7.8 , 40 , 17 , shock3 , obj_spark_shock , 2 , 5.6 , abs(place_x(87)) , place_y(340) , self.id , 15 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
	create_hitbox2 ( 15 , angle_correct(45) , 6.8 , 7.8 , 40 , 17 , shock3 , obj_spark_shock , 2 , 5.6 , abs(place_x(87)) , place_y(340) , self.id , 15 , 3 );
    hitbox2.image_angle = ( 1 - facing * 2 ) * 0;
	create_hitbox3 ( 15 , angle_correct(45) , 6.8 , 7.8 , 40 , 17 , shock3 , obj_spark_shock , 2 , 5.6 , abs(place_x(87)) , place_y(340) , self.id , 15 , 3 );
    hitbox3.image_angle = ( 1 - facing * 2 ) * 0;
	
	duster = instance_create(x,y,obj_dust_effect);
    duster.facing = facing;
	duster.image_xscale = 0.3*size;
	duster.image_yscale = 0.3*size;
	
	duster2 = instance_create(x,y,obj_dust_effect);
    duster2.facing = 1-facing;
	duster2.image_xscale = 0.3*size;
	duster2.image_yscale = 0.3*size;
  }
  
}

if timer = 15 and chargetimer < 40
{
    create_hitbox ( 10 , angle_correct(45) , 5.7 , 6.1 , 20 , 12 , shock3 , obj_spark_shock , 1.3 , 3.8 , abs(place_x(87)) , place_y(260) , self.id , 12 , 3 );
    hitbox.image_angle = ( 1 - facing * 2 ) * 0;
}


if timer = 21 and chargetimer = 40
{
    hitbox2.hitbox_x = size * ( 1 - ( facing * 2 ) ) * 39.60
    hitbox2.hitbox_y = size * 24
    hitbox2.image_xscale = size * 1.3
    hitbox2.image_yscale = size * 2
    hitbox3.hitbox_x = size * ( 1 - ( facing * 2 ) ) * -19.60
    hitbox3.hitbox_y = size * 24
    hitbox3.image_xscale = size * 1.3
    hitbox3.image_yscale = size * 2
}

switch ( timer )
  {
  case 15: downbfx.image_index = 1; break;
  case 17: downbfx.image_index = 2; break;
  case 19: downbfx.image_index = 3; break;
  case 21: downbfx.image_index = 4; break;
  case 23: downbfx.image_index = 5; break;
  case 25: downbfx.image_index = 6; break;
  case 27: downbfx.image_index = 7; break;
  case 29: downbfx.image_index = 8; break;
  case 31: downbfx.image_index = 9; break;
  case 33: downbfx.image_index = 10; break;
  case 35: downbfx.image_index = 11; break;
  case 37: downbfx.image_index = 12; break;
  case 39: downbfx.image_index = 13; break;
  case 41: downbfx.image_index = 14; break;
  case 43: downbfx.image_index = 15; break;
  case 45: downbfx.image_index = 16; break;
  case 47: downbfx.image_index = 17; break;
  }  

if timer = 48
{
with (downbfx)
{
instance_destroy();
}
}   

switch ( timer )
  {
  case 15: downbfx2.image_index = 1; break;
  case 17: downbfx2.image_index = 2; break;
  case 19: downbfx2.image_index = 3; break;
  case 21: downbfx2.image_index = 4; break;
  case 23: downbfx2.image_index = 5; break;
  case 25: downbfx2.image_index = 6; break;
  case 27: downbfx2.image_index = 7; break;
  case 29: downbfx2.image_index = 8; break;
  case 31: downbfx2.image_index = 9; break;
  case 33: downbfx2.image_index = 10; break;
  case 35: downbfx2.image_index = 11; break;
  case 37: downbfx2.image_index = 12; break;
  case 39: downbfx2.image_index = 13; break;
  case 41: downbfx2.image_index = 14; break;
  case 43: downbfx2.image_index = 15; break;
  case 45: downbfx2.image_index = 16; break;
  case 47: downbfx2.image_index = 17; break;
  case 49: downbfx2.image_index = 18; break;
  case 51: downbfx2.image_index = 19; break;
  case 53: downbfx2.image_index = 20; break;
  } 

if timer = 54
{
with (downbfx2)
{
instance_destroy();
}
}  

if ( timer >= time - 1 )
  {
  attack_type = "none";
  if ( air == 0 )
    state_type = "stand";
    else
    state_type = "jump";
  timer = 0;
  time = -1;
  }