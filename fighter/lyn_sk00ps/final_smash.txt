if state_type = "stand" || state_type = "run" || state_type = "jump" || state_type = "shielding"  {
        hspeed = 0;
        size = csize
        state_type = "air_attack";
        attack_type = "final_smash";
        image_speed = 0;
        sprite_index = fs_sprite5;
        image_index = 0;
        timer = 0;
        time = 460;
        timer_speed=1;
        intangible = 1;
        final_smashes+=1
        sound_play(fs_voice1)
        sound_play(super)
        //room_speed = 40*game_speed
        //background_blend=c_ltgray
        smash_power = 0
        air_move=0
		fstemp = 0;
        //camera.following_state = number
        //instance_create(0,0,obj_bloomer)
        //effect_create_below(ef_ellipse,x,y,1,c_red)
  /*spark = instance_create ( 0 , 0 , obj_camerazoom );
  spark.camera_l = x - 8;
  spark.camera_r = x + 8;
  spark.camera_u = y - 4 - actual_height;
  spark.camera_d = y + 4;
  spark.camera_boundary_zoom = 120;
  spark.alarm[0] = 104;*/

  duster = instance_create ( 0 , 0 , obj_freeze );
  duster.dontpause = self.id;
  duster.alarm[0] = 104;
}
speed=0
gravity_lock = 1;
switch ( timer )
  {
  case 10: image_index = 1; break;
  case 16: image_index = 2; break;
  case 34: image_index = 3; sound_play(lynwoosh); break;
  case 37: image_index = 4; break;
  case 43: image_index = 5; break;
  case 49: image_index = 6; break;
  case 55: image_index = 7; break;
  case 61: image_index = 8; break;
  case 67: image_index = 9; break;
  case 71: fs_fx1.image_alpha = 0; fs_fx2.image_alpha = 0; break;
  case 75: fs_fx1.image_alpha = 1; fs_fx2.image_alpha = 1; break;
  case 77: image_index = 10; fs_fx1.image_index = 1; fs_fx2.image_index = 1; fs_fx2.image_alpha = 0; break;
  case 79: fs_fx1.image_alpha = 0; fs_fx2.image_alpha = 0;  break;
  case 84: fs_fx1.image_alpha = 1; fs_fx2.image_alpha = 1;break;
  case 86: image_index = 11; fs_fx1.image_index = 2; fs_fx2.image_index = 2; break;
  case 88: fs_fx1.image_alpha = 0; fs_fx2.image_alpha = 0; break;
  case 92: fs_fx1.image_alpha = 1; fs_fx2.image_alpha = 1; break;
  case 95: image_index = 12; fs_fx1.image_index = 3; fs_fx1.image_alpha = 0; fs_fx2.image_index = 3; fs_fx2.image_alpha = 0; break;
  case 96: fs_fx1.image_alpha = 0; fs_fx2.image_alpha = 0; break;
  case 100: fs_fx1.image_alpha = 1; fs_fx2.image_alpha = 1; break;
  case 104: image_index = 13; fs_fx1.image_index = 4; fs_fx1.image_alpha = 0; fs_fx2.image_index = 4; fs_fx2.image_alpha = 0; break;
  
  case 110: sprite_index = fs_sprite1; image_index = 0; break; 
  case 113: image_index = 1; break;
  case 123: image_index = 2; break;
  case 126: image_index = 3; break;
  case 136: image_index = 4; break;
  case 139: image_index = 5; break;
  case 149: image_index = 6; break;
  case 152: image_index = 7; break;
  case 162: image_index = 8; break;
  case 165: image_index = 9; break;
  
  case 174: fs_fx31.image_alpha = 0; break;
  case 178: fs_fx31.image_alpha = 1; break;
  case 182: fs_fx31.image_alpha = 0; break;
  case 186: fs_fx31.image_alpha = 1; break;
  case 190: fs_fx31.image_alpha = 0; break;
  case 194: fs_fx31.image_alpha = 1; break;
  case 198: fs_fx31.image_alpha = 0; break;
  case 202: fs_fx31.image_alpha = 1; break;
  case 206: fs_fx31.image_alpha = 0; break;
  case 210: fs_fx31.image_alpha = 1; break;
  case 214: fs_fx31.image_alpha = 0; break;
  case 218: fs_fx31.image_alpha = 1; break;
  case 222: fs_fx31.image_alpha = 0; break;
  case 226: fs_fx31.image_alpha = 1; break;
  case 230: fs_fx31.image_alpha = 0; break;
  
  case 360: sprite_index = fs_sprite4; image_index = 0; break;
  case 361: image_index = 1; break;
  case 362: image_index = 2; break;
  case 363: image_index = 3; break;
  case 364: image_index = 4; break;
  case 365: image_index = 5; break;
  case 366: image_index = 6; break;
  case 367: image_index = 7; break;
  case 368: image_index = 8; break;
  case 369: image_index = 9; break;
  case 370: image_index = 10; break;
  case 371: image_index = 11; break;
  case 372: image_index = 12; break;
  case 373: image_index = 13; break;
  case 374: image_index = 14; break;
  case 375: image_index = 15; break;
  case 376: image_index = 16; break;
  case 377: image_index = 17; break;
  case 378: image_index = 18; break;
  case 379: image_index = 19; break;
  case 380: image_index = 20; break;
  case 381: image_index = 21; break;
  case 411: image_index = 22; break;
  case 415: image_index = 23; break;
  case 443: image_index = 24; break;
  case 449: image_index = 25; sound_play(swordsheath); break;
  
  case 500: sprite_index = fs_sprite1; image_index = 0; break; 
  case 503: image_index = 1; break;
  case 504: intangible = 0; break;
  }

if timer < time {	
	if timer = 1 {
		sound_play(swordpull);
	}
	if timer = 111 || timer = 123 || timer = 136 || timer = 149 || timer = 162 {
		create_projectile(5,90,2,0,3,10,CritHit,obj_spark_slash2,1,1,18,22,self.id,3,no_script);
		screen_shake(5,5);
		play_attack_voice();
		fstemp = 0;
	}
	if timer = 240 || timer =  252 || timer = 264 || timer = 276 || timer = 280 {
		create_projectile(5,90,2,0,3,10,CritHit,obj_spark_slash2,1,1,18,22,self.id,3,no_script);
		screen_shake(5,5);
		proj.hit_stun = 99;
	}
	if timer = 415 {
		create_projectile(16,30+facing*120,8,8,-1,30,CritHit,obj_spark_slash2,1,1,18,22,self.id,3,no_script);
		screen_shake(5,5);
		sound_play(fs_voice3);
		sound_play(swordpull);
	}
	if timer = 67 {
    create_homing_bubble(10,10,180,14,self.id,10);
		fs_fx1 = instance_create(x-30*(1-facing*2),y*size,obj_spark)
		fs_fx1.sprite_index = fs_fx3
		fs_fx1.image_xscale = 0.39*(1-facing*2)*size;
		fs_fx1.image_yscale = 0.39*size;
		fs_fx1.image_speed = 0
		fs_fx1.image_alpha = 1
		fs_fx1.depth = depth - 0.1
		fs_fx1.snap = self.id
		fs_fx1.number = -number;
		
		fs_fx2 = instance_create(x,y,obj_spark)
		fs_fx2.sprite_index = fs_fx3
		fs_fx2.image_xscale = 0.39*(1-facing*2)*size;
		fs_fx2.image_yscale = 0.39*size;
		fs_fx2.image_speed = 0
		fs_fx2.image_alpha = 1
		fs_fx2.depth = 1
		fs_fx2.snap = self.id
		fs_fx2.number = -number;
	}
	if timer = 109 {
		ignore_physics = 1;
	}
	if timer = 109 {
		timer = 500;
		time = 560;
		sprite_index = fs_sprite1; 
		image_index = 0;
	}
	if timer = 500 {
		sound_play(lynwoosh);
		screen_shake(10,10);
	duster = instance_create(x-25*size*(1-facing*2),y,obj_dust_effect);
	duster.facing = facing; 
    duster.image_xscale = 1.35*size
    duster.image_yscale = 1.35*size
	x = x+120*(1-facing*2);
	if (target != -1 && target != noone && target != -99 && target != attacker.id) && target > -1 {
	x = enemy.x - 25*(1-facing*2)
	y = enemy.y
	}	
	}
	if timer = 501 {
	crithit = create_projectile(5,90,2,0,3,10,CritHit,obj_spark_slash2,1,1,22,22,self.id,3,no_script);
	}
	if crithit.hit = 1 {
		fstemp = 1;
	}
	if timer = 502 && fstemp = 1 {
		timer = 112
		time = 460;
	}
	if timer = 110 {
		sound_play(lynwoosh);
		screen_shake(10,10);
	duster = instance_create(x-25*size*(1-facing*2),y,obj_dust_effect);
	duster.facing = facing; 
    duster.image_xscale = 1.35*size
    duster.image_yscale = 1.35*size
	}
	if timer >= 110 && timer <= 414 {
		enemy.y = y;
		enemy.sprite_index = enemy.flinch_sprite;
		enemy.state_type = "air_flinch"
	}
	if timer = 170 {
	fs_fx31 = instance_create(x-30*(1-facing*2),y*size,obj_spark)
	fs_fx31.sprite_index = fs_sprite2
	fs_fx31.image_xscale = 0.39*(1-facing*2)*size;
	fs_fx31.image_yscale = 0.39*size;
	fs_fx31.image_speed = 0
	fs_fx31.image_alpha = 1
	fs_fx31.depth = -17
	fs_fx31.snap = self.id
	fs_fx31.number = -number;
	fs_fx31.x = enemy.x
	fs_fx31.y = enemy.y-5
		
	spark = instance_create ( 0 , 0 , obj_camerazoom );
	spark.camera_l = x - 8;
	spark.camera_r = x + 8;
	spark.camera_u = y - 4 - actual_height;
	spark.camera_d = y + 4;
	spark.camera_boundary_zoom = 430;
	spark.alarm[0] = 120;
  
	visible = 0;
	}
	if timer = 240 {
	fs_fx4 = instance_create(x-30*(1-facing*2),y+80*size,obj_spark)
	fs_fx4.sprite_index = fs_fx2_sprite
	fs_fx4.image_xscale = -1*(1-facing*2)*size;
	fs_fx4.image_yscale = 1*size
	fs_fx4.image_speed = 0.4
	fs_fx4.image_alpha = 1
	fs_fx4.depth = -17
	fs_fx4.snap = self.id
        sound_play(fs_voice2)
	}
	if timer = 252 {
	fs_fx5 = instance_create(x-30*(1-facing*2),y-120*size,obj_spark)
	fs_fx5.sprite_index = fs_fx2_sprite
	fs_fx5.image_xscale = -1*(1-facing*2)*size;
	fs_fx5.image_yscale = -1*size
	fs_fx5.image_speed = 0.4
	fs_fx5.image_alpha = 1
	fs_fx5.depth = -17
	fs_fx5.snap = self.id
	}
	if timer = 264 {
	fs_fx6 = instance_create(x-30*(1-facing*2),y+80*size,obj_spark)
	fs_fx6.sprite_index = fs_fx2_sprite
	fs_fx6.image_xscale = -1*(1-facing*2)*size;
	fs_fx6.image_yscale = 1*size
	fs_fx6.image_speed = 0.4
	fs_fx6.image_alpha = 1
	fs_fx6.depth = -17
	fs_fx6.snap = self.id
	}
	if timer = 276 {
	fs_fx7 = instance_create(x-30*(1-facing*2),y-120*size,obj_spark)
	fs_fx7.sprite_index = fs_fx2_sprite
	fs_fx7.image_xscale = -1*(1-facing*2)*size;
	fs_fx7.image_yscale = -1*size
	fs_fx7.image_speed = 0.4
	fs_fx7.image_alpha = 1
	fs_fx7.depth = -17
	fs_fx7.snap = self.id
	}
	if timer = 280 {
	fs_fx7 = instance_create(x-30*(1-facing*2),y-120*size,obj_spark)
	fs_fx7.sprite_index = fs_fx2_sprite
	fs_fx7.image_xscale = -1*(1-facing*2)*size;
	fs_fx7.image_yscale = -1*size
	fs_fx7.image_speed = 0.4
	fs_fx7.image_alpha = 1
	fs_fx7.depth = -17
	fs_fx7.snap = self.id
	}
	if timer = 288 {
		visible = 1;
		timer = 359
	}
}
if timer >= time-1 && state_type != "flinch" && state_type != "air_flinch" {
	attack_type = "none";
    state_type = "stand";
    if air > 0
	{
    state_type = "jump";
	sprite_index = jump_sprite;
	image_index = 0;
	image_speed = 0;
	}
	smash_power = 0
	intangible = 0;
    timer = 0;
    time =-1;
		ignore_physics = 0;
}
