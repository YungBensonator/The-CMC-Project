fast_fall = 0;
fast_fall_temp = 0;
if ((state_type == "stand" || state_type == "run" || state_type == "jump") && sbtemp == 0)
{
    hspeed = 0;
    state_type = "air_attack";
    attack_type = "sideb";
    image_speed = 0;
    sprite_index = sideb_sprite;
    image_index = 0;
    timer = 0;
    time = 44;
    timer_speed = 1;
    if (moveright == 1)
        facing = 0;
    if (moveleft == 1)
        facing = 1;
    air_move = 0;
    temp = 0;
    hover = 0;
    tempdirection = 0 - facing * 180;
    sbtemp = 1;
	podRadX = 14;
	podRadY = 20;
}
if (timer < time)
{
    if (timer >= 13 && timer < 100)
        force_edge_grab = 1;
    state_type = "air_attack";
	
	switch (timer)
	{
		case 13: image_index = 1; break;
		case 16: image_index = 2; break;
		case 19: image_index = 3; break;
		case 22: image_index = 4; break;
		case 25: image_index = 5; break;
		case 28: image_index = 6; break;
		case 31: image_index = 7; break;
		case 34: image_index = 8; break;
		case 37: image_index = 8; break;
		case 40: image_index = 8; break;
		case 43: image_index = 8; break;
		
		case 100:
			sprite_index = sideb_rocket_sprite;
			image_index = 0;
		break;
		case 103: image_index = 1; break;
		case 106: image_index = 2; break;
		case 109:
			image_index = 3;
			sound_play(pod_sideb_voice);
			if (sprite_index = sideb_rocket_sprite)
				create_hitbox(11,40+facing*100,6.5,2.5,5,8,kick3,obj_spark_hit1,1.15,1,-1,-place_y(77),self.id,23,2);
		break;
		case 112: image_index = 4; break;
		case 115: image_index = 5; break;
		case 118: image_index = 6; break;
		case 121: image_index = 7; break;
		case 124: image_index = 8; break;
		case 127: image_index = 9; break;
		case 130: image_index = 10; break;
		case 133: image_index = 11; break;
		case 136: image_index = 12; break;
		case 139: image_index = 13; break;
		case 142: image_index = 14; break;
	}
	
    if (temp)
        gravity = 0;
    if (timer == 13)
    {
		if random(2) < 1
			sound_play(choose(sideb_voice1,sideb_voice2));
        timer += 1;
        duster = instance_create(x, y, obj_dust_effect);
        duster.facing = facing;
        SideBDashVisual = instance_create(x, y, obj_down_impact);
		SideBDashVisual.image_xscale *= 0.1*size;
		SideBDashVisual.image_yscale *= 0.1*size;
        speed = 7;
		sound_play(footstepsound5);
        direction = facing * 180;
    }
	if (timer < 14)
	{
		vspeed = 0;
		hspeed = 0;
		if air > 0
			y -= 0.5;
	}
	if (timer >= 100 && image_index < 3)
	{
		vspeed = 0;
		vspeed -= 0.1;
		if air > 0
			y -= 0.5;
	}
    if (timer >= 14 && timer <= 30) //1 frame after index 1, 1 frame before index 7
    {
        speed = (5 - (timer > 25)) * size;
        temp = 1;
    }

	if (temp == 1)
	{
		if (cos(timer * pi) > 0.5)
			afterimg = after_image(7, c_white, 0.5);
		else
			direction = tempdirection;

		if (facing)
			image_angle = direction - 180;
		else
			image_angle = direction;
	}
	if (timer >= 15)
	{
		if (attacking)
		{
			temp = 0;
			if (air != 0)
			{
				vspeed -= size * 1.5;
				air_move = 1;
			}
			interrupt = 1;
		}
		if (movejump)
		{
			interrupt = 1;
			temp = 0;
		}
		if (shieldup && air == 0)
		{
			flashing = true;
			alarm[7] = 3;
			state_type = "shielding";
			attack_type = "none";
			time = -1;
			shield = instance_create(x, y - image_yscale * sprite_get_height(sprite_index) / 2, obj_shield);
		}
	}
	if (timer == 30)
	{
		temp = 0;
		image_angle = 0;
		if (air != 0)
		{
			vspeed = -2 * size;
			hspeed = (2 - facing * 4) * size;
		}
		else
			hspeed = (4 - facing * 8) * size;
	}
	if (vspeed > 0 && (collision_point(x, y + 1, obj_platform, 1, 1) || collision_point(x, y + 1, obj_floor, 1, 1)) && (timer >= 39 && timer < 100))
	{
		state_type = "land";
		attacking = 0;
		temp = 0;
		image_angle = 0;
		attack_type = "none";
	}
	
	//POD MOVE\\
	if (timer >= 100 && (image_index >= 0 && image_index < 11))
	{
		if facing = 0
			chomp.x = x + 8;
		else
			chomp.x = x - 8;
		chomp.y = y - 16;
	}
	if (timer >= 100 && (image_index >= 3 && image_index < 11))
	{
		hspeed = 3-facing*6;
		vspeed = 0;
		if (moveright = 1 && moveleft = 0)
		{
			facing = 0
			hspeed = 4.25-facing*8.25;
		}
		if (moveleft = 1 && moveright = 0)
		{
			facing = 1
			hspeed = 4.25-facing*8.25;
		}
		if (moveup = 1 && movedown = 0)
			vspeed = -1;
		if (movedown = 1 && moveup = 0)
			vspeed = 1
	}
	if image_index >= 11 && instance_exists(hitbox)
		with (hitbox)
			instance_destroy();
}

if ((self.x < (chomp.x+podRadX) and self.x > (chomp.x-podRadX)) and (self.y > (chomp.y-podRadY) and self.y < (chomp.y+podRadY)) and (timer >= 15 and timer < 30)) //POD MOVE
{
	if (podstation != 0)
	{
		podstation = 0;
		temp = 0;
		with (afterimg)
			instance_destroy();
		vspeed = 0;
		timer = 100;
		time = 145;
		sprite_index = sideb_rocket_sprite;
		image_speed = 0;
	}
}

if (timer >= time - 1 && state_type != "flinch" && state_type != "air_flinch")
{
    if (sprite_index = sideb_sprite)
		image_index = 8;
	attack_type = "none";
    if air > 0
        state_type = "jump";
    else
        state_type = "stand";
    timer = 0;
    time =-1;
}